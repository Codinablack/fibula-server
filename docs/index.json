{
  "articles/configuration.html": {
    "href": "articles/configuration.html",
    "title": "Service configuration: | Fibula MMO",
    "keywords": "Service configuration: Currently, the configuration files are: appsettings.json and logsettings.json Application Settings file: appsettings.json Note: Not all of the settings are currently in use, but left there as preparation. All the settings here should be pretty self-explanatory, except maybe for the KeyVaultSecretsProviderOptions and CosmosDbConfigurationOptions which you may remove if you're not using Azure CosmosDB as the database store. I am currently using it instead of the local In-Memory database, and because it uses the Azure KeyVault to store secrets, such as the CosmosDB connection string, I'm including it on the standard configuration. Log Settings file: logsettings.json To control how verbose you want the log events to show on the console, change the values you see on the file to: Verbose | Debug | Information | Warning | Error For example: You can set the Console sink's restrictedToMinimumLevel to Information to see less messages output: { \"Serilog\": { \"MinimumLevel\": \"Verbose\", ... \"WriteTo\": [ { \"Name\": \"Console\", \"Args\": { \"restrictedToMinimumLevel\": \"Debug\", \"outputTemplate\": \"[{Timestamp:HH:mm:ss}] [{Level}] {SourceContext}: {Message}{NewLine}{Exception}\" } }, ] ... } }"
  },
  "articles/faq.html": {
    "href": "articles/faq.html",
    "title": "Some Frequently Asked Questions | Fibula MMO",
    "keywords": "Some Frequently Asked Questions Why C#/NetCore? Because it is awesome . It is fast, simple and way more maintainable than C++. It's easier for newbies to pick up and learn, as it is often taught in schools and bootcamps. It's also what half the industry uses and, well, I happen to be part of that half of the industry. And lastly, yeah- generally whoever starts coding something from scratch gets to pick... Why choose version 7.72? There was an infamous breach back on 2007 in which all files and assets required to run the original game at the time were leaked, and those files were finally released to the public about 10 years later on OTLand. Having access to the original game files and assets simplifies our goal to mimic and reverse engineer the original game, leaving us with an implementation that is as closest to the real game as it gets. On a more personal note, I hate aimbots (and hotkeys) since they ruin the game. Aimbots are fairly easy to catch with simple metric analysis and automation, and hotkeys were introduced on shortly after this version (7.8, or 8.0?) of the game. I'm not however, opposed to develop any other versions of the game later on, but I'm super fond of 7.x versions as these were the ones in which I actually played the real game. MOAR to come (sure)..."
  },
  "articles/motivation.html": {
    "href": "articles/motivation.html",
    "title": "Project motivation | Fibula MMO",
    "keywords": "Project motivation Nostalgia This project in particular started off when I found out Toor had finally released the CipSoft files from that Tibia breach back on 2007. I happened to be playing Zanera , the game world which was hosted on the breached server. So yeah- I immmediately set up a virtual machine in Azure, and started attempting to run the files released. I got it working in a couple of hours and from there the nostalgia kicked in, transporting me back to 2007. Has been on and off since then. Background I've been around in the OpenTibia universe pretty much since it started. I remember logging into one of the few servers available at the time, when there was only a simple, single floor map, and no combat or items at all. Back then, there was a super fun, spam-all-you-can battle system and fixed spells with no exhaustion at all. Later, runes came around and it was so much fun just spamming, dying, respawning and repeating, along some 50+ players doing the same. It was like a full blown, permanent test server from back at the time. I remember the names of the most popular distributions around that time: Survival, YurOTS, Zion(?) (first multi-floor attempt). DarkOT (closed source) was also around. Career Anyhow, back then I did not know how to program and, I remember my only motivation to learn to code (in C++ at the time) was to compile and make changes to my characters at the time. It was so painful to even try to compile and work my way through compilation errors. At some point, I stopped playing Tibia completely and focused only on OpenTibia. I was very green as a programmer, but I made some contributions under the alias “BurnMc” to the original repo (back then the code was hosted at SourceForge, and we were using TurtleSVN). I remember when SimOne released their first map editor and tools, and how it all seemed so far fetched from my abilities: To me, how it all was being designed, how these people envisioned the service, implemented and refactored it in front of my eyes was super interesting and probably the single most helpful thing I experienced in my self-learning phase. Back then and there, I decided I was pursuing a career in computer science and tech. As is usual, some years after graduating I was absorbed into the workforce and forgot all about OpenTibia and how much I enjoyed this. A few years later, in 2016, I was fortunate enough to land a job at Microsoft. I’ve been here for almost 4 years now. Motivation Reflecting on my past, everything about me having anything to do with programming started off because of OpenTibia. And this is really what drives me at the moment- to give back to this community and maybe be that example to some naive kid as I once was, which lead me down this path. Hopefully, this helps other newbies pick up on a project that lets them discover their strengths in coding, sets them down a good path, let's them learn what it takes to jump into this industry and why not- a top tech company."
  },
  "articles/roadmap.html": {
    "href": "articles/roadmap.html",
    "title": "| Fibula MMO",
    "keywords": "Never gonna give you up... Never gonna let you dow- F*CK! SOON..."
  },
  "articles/setup.html": {
    "href": "articles/setup.html",
    "title": "How to setup and run the service: | Fibula MMO",
    "keywords": "How to setup and run the service: 1) Clone using Git Open your command prompt window with Git support installed. Use Git to clone this repo: git clone https://github.com/jlnunez89/fibula-mmo.git The resulting folder will contain this structure (or similar): 2) Build the solution You have some options to do this, but you'll need to: Install .NetCore SDK 3.X from https://dotnet.microsoft.com/download . Use Visual Studio (the included solution is for 2019 Community edition) OR Using a command line interface to build: dotnet build --configuration Release NOTE: You can run tests for the solution by running the command: dotnet test That being said, there are not very many tests at the time of writing... help write some! After you build it, the project you want to focus on is Fibula.Standalone . Go into the bin folder created, and it should look something like this: 3) Extract the Map sector files. These take a lot of space uncompressed, so I only included them as a zipped archive. Look for the file named map.zip in the main repository folder. Decompress the archive into the Fibula.Standalone/bin/Release/netcoreapp3.1 folder you just inspected: 4) Run the binary: Running the server is simple: From within the Fibula.Standalone/bin/Release/netcoreapp3.1 folder, execute dotnet on the standalone's DLL: dotnet .\\Fibula.Standalone.dll This server engine is designed to only load the sector files surronding players as they approach them, making it start really fast and requiring just a few memory- currently hovering around ~60 MB so far. This will change of course, as we switch to a non in-memory database, add more assets loading and pre-checks. What's that? You don't see [Verbose] stuff when you run yours? That's by design! Go to configuration after this if you want to fiddle with that kind of thing. 5) Log in: Use you favorite 7.72** client to connnect to localhost / 127.0.0.1 (per vanilla configuration). In my case, I'm just using OTLand's IP Changer with a vanilla client: ** Or whatever version you're running! At the time of writing, 7.72 is the default version that's selected as the project builds. Use the credentials for the In-Memory database: Account Number: 1 Password: 1 These are currently seeded during the in-memory database model creation OnModelCreating method: Fibula.Data.InMemoryDatabase\\FibulaInMemoryDatabaseContext.cs"
  },
  "code/Fibula.Client.Client.html": {
    "href": "code/Fibula.Client.Client.html",
    "title": "Class Client | Fibula MMO",
    "keywords": "Class Client Class that implements an IClient for any sort of connection. Inheritance System.Object Client Implements IClient Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Client Assembly : Fibula.Client.dll Syntax public class Client : IClient Constructors | Improve this Doc View Source Client(ILogger, IConnection) Initializes a new instance of the Client class. Declaration public Client(ILogger logger, IConnection connection) Parameters Type Name Description Serilog.ILogger logger A reference to the logger to use. IConnection connection The connection that this client uses. Properties | Improve this Doc View Source Connection Gets the connection enstablished by this client. Declaration public IConnection Connection { get; } Property Value Type Description IConnection | Improve this Doc View Source Information Gets the information about the client on the other side of this connection. Declaration public ClientInformation Information { get; } Property Value Type Description ClientInformation | Improve this Doc View Source IsIdle Gets a value indicating whether this client is idle. Declaration public bool IsIdle { get; } Property Value Type Description System.Boolean | Improve this Doc View Source PlayerId Gets or sets the id of the player that this client is tied to. Declaration public uint PlayerId { get; set; } Property Value Type Description System.UInt32 Methods | Improve this Doc View Source AddKnownCreature(UInt32) Adds the given creature to this player's known collection. Declaration public void AddKnownCreature(uint creatureId) Parameters Type Name Description System.UInt32 creatureId The id of the creature to add to the known creatures collection. | Improve this Doc View Source ChooseCreatureToRemoveFromKnownSet(Int32) Chooses a creature to remove from this player's known creatures collection, if it has reached the collection size limit. Declaration public uint ChooseCreatureToRemoveFromKnownSet(int skip = 0) Parameters Type Name Description System.Int32 skip Optional. A number of creatures to skip during selection. Used for multiple creature picking. Returns Type Description System.UInt32 The id of the chosen creature, if any, or System.UInt32.MinValue if no creature was chosen. | Improve this Doc View Source KnowsCreatureWithId(UInt32) Checks if this player knows the given creature. Declaration public bool KnowsCreatureWithId(uint creatureId) Parameters Type Name Description System.UInt32 creatureId The id of the creature to check. Returns Type Description System.Boolean True if the player knows the creature, false otherwise. | Improve this Doc View Source RemoveKnownCreature(UInt32) Removes the given creature from this player's known collection. Declaration public void RemoveKnownCreature(uint creatureId) Parameters Type Name Description System.UInt32 creatureId The id of the creature to remove from the known creatures collection. | Improve this Doc View Source Send(IEnumerable<IOutboundPacket>) Sends the packets supplied over the Connection . Declaration public void Send(IEnumerable<IOutboundPacket> packetsToSend) Parameters Type Name Description System.Collections.Generic.IEnumerable < IOutboundPacket > packetsToSend The packets to send. Implements IClient Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Client.Contracts.Abstractions.html": {
    "href": "code/Fibula.Client.Contracts.Abstractions.html",
    "title": "Namespace Fibula.Client.Contracts.Abstractions | Fibula MMO",
    "keywords": "Namespace Fibula.Client.Contracts.Abstractions Interfaces IClient Interface for connections."
  },
  "code/Fibula.Client.Contracts.Abstractions.IClient.html": {
    "href": "code/Fibula.Client.Contracts.Abstractions.IClient.html",
    "title": "Interface IClient | Fibula MMO",
    "keywords": "Interface IClient Interface for connections. Namespace : Fibula.Client.Contracts.Abstractions Assembly : Fibula.Client.Contracts.dll Syntax public interface IClient Fields | Improve this Doc View Source KnownCreatureLimit The limit of creatures that a client can keep track of. Declaration public const int KnownCreatureLimit = 150 Field Value Type Description System.Int32 Properties | Improve this Doc View Source Connection Gets the connection enstablished by this client. Declaration IConnection Connection { get; } Property Value Type Description IConnection | Improve this Doc View Source Information Gets the information about the client on the other side of this connection. Declaration ClientInformation Information { get; } Property Value Type Description ClientInformation | Improve this Doc View Source IsIdle Gets a value indicating whether this client is idle. Declaration bool IsIdle { get; } Property Value Type Description System.Boolean | Improve this Doc View Source PlayerId Gets or sets the id of the player that this client is tied to. Declaration uint PlayerId { get; set; } Property Value Type Description System.UInt32 Methods | Improve this Doc View Source AddKnownCreature(UInt32) Adds the given creature to this client's known creatures collection. Declaration void AddKnownCreature(uint creatureId) Parameters Type Name Description System.UInt32 creatureId The id of the creature to add to the known creatures collection. | Improve this Doc View Source ChooseCreatureToRemoveFromKnownSet(Int32) Chooses a creature to remove from this player's known creatures collection, if it has reached the collection size limit. Declaration uint ChooseCreatureToRemoveFromKnownSet(int skip = 0) Parameters Type Name Description System.Int32 skip Optional. A number of creatures to skip during selection. Used for multiple creature picking. Returns Type Description System.UInt32 The id of the chosen creature, if any, or System.UInt32.MinValue if no creature was chosen. | Improve this Doc View Source KnowsCreatureWithId(UInt32) Checks if this client knows the given creature. Declaration bool KnowsCreatureWithId(uint creatureId) Parameters Type Name Description System.UInt32 creatureId The id of the creature to check. Returns Type Description System.Boolean True if the client knows the creature, false otherwise. | Improve this Doc View Source RemoveKnownCreature(UInt32) Removes the given creature from this player's known collection. Declaration void RemoveKnownCreature(uint creatureId) Parameters Type Name Description System.UInt32 creatureId The id of the creature to remove from the known creatures collection. | Improve this Doc View Source Send(IEnumerable<IOutboundPacket>) Sends the packets supplied over the Connection . Declaration void Send(IEnumerable<IOutboundPacket> packetsToSend) Parameters Type Name Description System.Collections.Generic.IEnumerable < IOutboundPacket > packetsToSend The packets to send. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Client.Contracts.Models.ClientInformation.html": {
    "href": "code/Fibula.Client.Contracts.Models.ClientInformation.html",
    "title": "Class ClientInformation | Fibula MMO",
    "keywords": "Class ClientInformation Class that represents inforamtion about the client. Inheritance System.Object ClientInformation Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Client.Contracts.Models Assembly : Fibula.Client.Contracts.dll Syntax public class ClientInformation Properties | Improve this Doc View Source Type Gets or sets the operating system. Declaration public AgentType Type { get; set; } Property Value Type Description AgentType | Improve this Doc View Source Version Gets or sets the version. Declaration public string Version { get; set; } Property Value Type Description System.String Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Client.Contracts.Models.html": {
    "href": "code/Fibula.Client.Contracts.Models.html",
    "title": "Namespace Fibula.Client.Contracts.Models | Fibula MMO",
    "keywords": "Namespace Fibula.Client.Contracts.Models Classes ClientInformation Class that represents inforamtion about the client."
  },
  "code/Fibula.Client.html": {
    "href": "code/Fibula.Client.html",
    "title": "Namespace Fibula.Client | Fibula MMO",
    "keywords": "Namespace Fibula.Client Classes Client Class that implements an IClient for any sort of connection."
  },
  "code/Fibula.Common.ApplicationContext.html": {
    "href": "code/Fibula.Common.ApplicationContext.html",
    "title": "Class ApplicationContext | Fibula MMO",
    "keywords": "Class ApplicationContext Class that represents the common context of the entire application. Inheritance System.Object ApplicationContext Implements IApplicationContext Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Common Assembly : Fibula.Common.dll Syntax public class ApplicationContext : IApplicationContext Constructors | Improve this Doc View Source ApplicationContext(IOptions<ApplicationContextOptions>, IOptions<TelemetryConfiguration>, IRsaDecryptor, CancellationTokenSource, Func<IFibulaDbContext>) Initializes a new instance of the ApplicationContext class. Declaration public ApplicationContext(IOptions<ApplicationContextOptions> options, IOptions<TelemetryConfiguration> telemetryOptions, IRsaDecryptor rsaDecryptor, CancellationTokenSource cancellationTokenSource, Func<IFibulaDbContext> dbContextGenerationFunc) Parameters Type Name Description Microsoft.Extensions.Options.IOptions < ApplicationContextOptions > options A reference to the application configuration. Microsoft.Extensions.Options.IOptions < Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration > telemetryOptions A reference to the telemetry configuration that will be used to create the telemetry client. IRsaDecryptor rsaDecryptor A reference to the RSA decryptor in use. System.Threading.CancellationTokenSource cancellationTokenSource A reference to the master cancellation token source. System.Func < IFibulaDbContext > dbContextGenerationFunc A reference to a function to generate the database context. Properties | Improve this Doc View Source CancellationTokenSource Gets the master cancellation token source. Declaration public CancellationTokenSource CancellationTokenSource { get; } Property Value Type Description System.Threading.CancellationTokenSource | Improve this Doc View Source DefaultDatabaseContext Gets the default database context to use. Declaration public IFibulaDbContext DefaultDatabaseContext { get; } Property Value Type Description IFibulaDbContext | Improve this Doc View Source Options Gets the configuration for the application. Declaration public ApplicationContextOptions Options { get; } Property Value Type Description ApplicationContextOptions | Improve this Doc View Source RsaDecryptor Gets the RSA decryptor to use. Declaration public IRsaDecryptor RsaDecryptor { get; } Property Value Type Description IRsaDecryptor | Improve this Doc View Source TelemetryClient Gets the Telemetry client in use. Declaration public TelemetryClient TelemetryClient { get; } Property Value Type Description Microsoft.ApplicationInsights.TelemetryClient Implements IApplicationContext Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Common.Contracts.Abstractions.html": {
    "href": "code/Fibula.Common.Contracts.Abstractions.html",
    "title": "Namespace Fibula.Common.Contracts.Abstractions | Fibula MMO",
    "keywords": "Namespace Fibula.Common.Contracts.Abstractions Interfaces IApplicationContext Interface that represents the common context of the entire application. IContainedThing Interface for all entities that keep track of a parent container. IConverter Inteface for a converter. ILocatable Interface for all entities with a location. IThing Interface for all things in the game. IThingContainer Interface for all containers of IThing s. IThingCreationArguments Interface for arguments used during creation of things. IThingFactory Interface for factories of things."
  },
  "code/Fibula.Common.Contracts.Abstractions.IApplicationContext.html": {
    "href": "code/Fibula.Common.Contracts.Abstractions.IApplicationContext.html",
    "title": "Interface IApplicationContext | Fibula MMO",
    "keywords": "Interface IApplicationContext Interface that represents the common context of the entire application. Namespace : Fibula.Common.Contracts.Abstractions Assembly : Fibula.Common.Contracts.dll Syntax public interface IApplicationContext Properties | Improve this Doc View Source CancellationTokenSource Gets the master cancellation token source. Declaration CancellationTokenSource CancellationTokenSource { get; } Property Value Type Description System.Threading.CancellationTokenSource | Improve this Doc View Source DefaultDatabaseContext Gets the default database context to use. Declaration IFibulaDbContext DefaultDatabaseContext { get; } Property Value Type Description IFibulaDbContext | Improve this Doc View Source Options Gets the options for the application. Declaration ApplicationContextOptions Options { get; } Property Value Type Description ApplicationContextOptions | Improve this Doc View Source RsaDecryptor Gets the RSA decryptor to use. Declaration IRsaDecryptor RsaDecryptor { get; } Property Value Type Description IRsaDecryptor | Improve this Doc View Source TelemetryClient Gets the Telemetry client in use. Declaration TelemetryClient TelemetryClient { get; } Property Value Type Description Microsoft.ApplicationInsights.TelemetryClient Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Common.Contracts.Abstractions.IContainedThing.html": {
    "href": "code/Fibula.Common.Contracts.Abstractions.IContainedThing.html",
    "title": "Interface IContainedThing | Fibula MMO",
    "keywords": "Interface IContainedThing Interface for all entities that keep track of a parent container. Namespace : Fibula.Common.Contracts.Abstractions Assembly : Fibula.Common.Contracts.dll Syntax public interface IContainedThing Properties | Improve this Doc View Source ParentContainer Gets or sets the parent container of this entity. Declaration IThingContainer ParentContainer { get; set; } Property Value Type Description IThingContainer Extension Methods ContainerExtensions.GetParentContainerHierarchy(IContainedThing, Boolean) ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Common.Contracts.Abstractions.IConverter.html": {
    "href": "code/Fibula.Common.Contracts.Abstractions.IConverter.html",
    "title": "Interface IConverter | Fibula MMO",
    "keywords": "Interface IConverter Inteface for a converter. Namespace : Fibula.Common.Contracts.Abstractions Assembly : Fibula.Common.Contracts.dll Syntax public interface IConverter Methods | Improve this Doc View Source Convert(String) Converts a string into a strong type (boxed into object) implementation. Declaration object Convert(string value) Parameters Type Name Description System.String value The string value to convert. Returns Type Description System.Object A boxed strongly typed implementation. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Common.Contracts.Abstractions.ILocatable.html": {
    "href": "code/Fibula.Common.Contracts.Abstractions.ILocatable.html",
    "title": "Interface ILocatable | Fibula MMO",
    "keywords": "Interface ILocatable Interface for all entities with a location. Namespace : Fibula.Common.Contracts.Abstractions Assembly : Fibula.Common.Contracts.dll Syntax public interface ILocatable Properties | Improve this Doc View Source CarryLocation Gets the location where this entity is being carried at, if any. Declaration Location? CarryLocation { get; } Property Value Type Description System.Nullable < Location > | Improve this Doc View Source Location Gets this entity's location. Declaration Location Location { get; } Property Value Type Description Location Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Common.Contracts.Abstractions.IThing.html": {
    "href": "code/Fibula.Common.Contracts.Abstractions.IThing.html",
    "title": "Interface IThing | Fibula MMO",
    "keywords": "Interface IThing Interface for all things in the game. Inherited Members ILocatable.Location ILocatable.CarryLocation IContainedThing.ParentContainer Namespace : Fibula.Common.Contracts.Abstractions Assembly : Fibula.Common.Contracts.dll Syntax public interface IThing : ILocatable, IContainedThing Properties | Improve this Doc View Source CanBeMoved Gets a value indicating whether this thing can be moved. Declaration bool CanBeMoved { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ThingId Gets the id of this thing. Declaration ushort ThingId { get; } Property Value Type Description System.UInt16 Methods | Improve this Doc View Source DescribeForLogger() Provides a string describing the current thing for logging purposes. Declaration string DescribeForLogger() Returns Type Description System.String The string to log. Events | Improve this Doc View Source ThingChanged Event to invoke when any of the properties of this thing have changed. Declaration event OnThingStateChanged ThingChanged Event Type Type Description OnThingStateChanged Extension Methods ContainerExtensions.GetParentContainerHierarchy(IContainedThing, Boolean) ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Common.Contracts.Abstractions.IThingContainer.html": {
    "href": "code/Fibula.Common.Contracts.Abstractions.IThingContainer.html",
    "title": "Interface IThingContainer | Fibula MMO",
    "keywords": "Interface IThingContainer Interface for all containers of IThing s. Inherited Members ILocatable.Location ILocatable.CarryLocation Namespace : Fibula.Common.Contracts.Abstractions Assembly : Fibula.Common.Contracts.dll Syntax public interface IThingContainer : ILocatable Methods | Improve this Doc View Source AddContent(IThingFactory, IThing, Byte) Attempts to add a IThing to this container. Declaration (bool result, IThing remainder) AddContent(IThingFactory thingFactory, IThing thing, byte index = 255) Parameters Type Name Description IThingFactory thingFactory A reference to the factory of things to use. IThing thing The IThing to add to the container. System.Byte index Optional. The index at which to add the IThing . Defaults to byte.MaxValue, which instructs to add the IThing at any free index. Returns Type Description System.ValueTuple < System.Boolean , IThing > A tuple with a value indicating whether the attempt was at least partially successful, and false otherwise. If the result was only partially successful, a remainder of the thing may be returned. | Improve this Doc View Source FindThingAtIndex(Byte) Attempts to find an IThing whitin this container. Declaration IThing FindThingAtIndex(byte index) Parameters Type Name Description System.Byte index The index at which to look for the IThing . Returns Type Description IThing The IThing found at the index, if any was found. | Improve this Doc View Source RemoveContent(IThingFactory, ref IThing, Byte, Byte) Attempts to remove a thing from this container. Declaration (bool result, IThing remainder) RemoveContent(IThingFactory thingFactory, ref IThing thing, byte index = 255, byte amount = 1) Parameters Type Name Description IThingFactory thingFactory A reference to the factory of things to use. IThing thing The IThing to remove from the container. System.Byte index Optional. The index from which to remove the IThing . Defaults to byte.MaxValue, which instructs to remove the IThing if found at any index. System.Byte amount Optional. The amount of the thing to remove. Returns Type Description System.ValueTuple < System.Boolean , IThing > A tuple with a value indicating whether the attempt was at least partially successful, and false otherwise. If the result was only partially successful, a remainder of the thing may be returned. | Improve this Doc View Source ReplaceContent(IThingFactory, IThing, IThing, Byte, Byte) Attempts to replace a IThing from this container with another. Declaration (bool result, IThing remainderToChange) ReplaceContent(IThingFactory thingFactory, IThing fromThing, IThing toThing, byte index = 255, byte amount = 1) Parameters Type Name Description IThingFactory thingFactory A reference to the factory of things to use. IThing fromThing The IThing to remove from the container. IThing toThing The IThing to add to the container. System.Byte index Optional. The index from which to replace the IThing . Defaults to byte.MaxValue, which instructs to replace the IThing if found at any index. System.Byte amount Optional. The amount of the fromThing to replace. Returns Type Description System.ValueTuple < System.Boolean , IThing > A tuple with a value indicating whether the attempt was at least partially successful, and false otherwise. If the result was only partially successful, a remainder of the thing may be returned. Extension Methods ContainerExtensions.GetParentContainerHierarchy(IThingContainer, Boolean) ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Common.Contracts.Abstractions.IThingCreationArguments.html": {
    "href": "code/Fibula.Common.Contracts.Abstractions.IThingCreationArguments.html",
    "title": "Interface IThingCreationArguments | Fibula MMO",
    "keywords": "Interface IThingCreationArguments Interface for arguments used during creation of things. Namespace : Fibula.Common.Contracts.Abstractions Assembly : Fibula.Common.Contracts.dll Syntax public interface IThingCreationArguments Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Common.Contracts.Abstractions.IThingFactory.html": {
    "href": "code/Fibula.Common.Contracts.Abstractions.IThingFactory.html",
    "title": "Interface IThingFactory | Fibula MMO",
    "keywords": "Interface IThingFactory Interface for factories of things. Namespace : Fibula.Common.Contracts.Abstractions Assembly : Fibula.Common.Contracts.dll Syntax public interface IThingFactory Methods | Improve this Doc View Source Create(IThingCreationArguments) Creates a new IThing . Declaration IThing Create(IThingCreationArguments creationArguments) Parameters Type Name Description IThingCreationArguments creationArguments The arguments for the IThing creation. Returns Type Description IThing A new instance of the IThing . Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Common.Contracts.Constants.html": {
    "href": "code/Fibula.Common.Contracts.Constants.html",
    "title": "Namespace Fibula.Common.Contracts.Constants | Fibula MMO",
    "keywords": "Namespace Fibula.Common.Contracts.Constants Classes LocationConstants Static class that containts constants related to locations."
  },
  "code/Fibula.Common.Contracts.Constants.LocationConstants.html": {
    "href": "code/Fibula.Common.Contracts.Constants.LocationConstants.html",
    "title": "Class LocationConstants | Fibula MMO",
    "keywords": "Class LocationConstants Static class that containts constants related to locations. Inheritance System.Object LocationConstants Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Common.Contracts.Constants Assembly : Fibula.Common.Contracts.dll Syntax public static class LocationConstants Fields | Improve this Doc View Source ContainerFlag The bit flag for containers encoded in location. Declaration public const int ContainerFlag = 64 Field Value Type Description System.Int32 | Improve this Doc View Source NonMapLocationX A value for X that denotes a location type other than Map . Declaration public const int NonMapLocationX = 65535 Field Value Type Description System.Int32"
  },
  "code/Fibula.Common.Contracts.CustomConvertersFactory.html": {
    "href": "code/Fibula.Common.Contracts.CustomConvertersFactory.html",
    "title": "Class CustomConvertersFactory | Fibula MMO",
    "keywords": "Class CustomConvertersFactory Static class that represents a factory for converters. Inheritance System.Object CustomConvertersFactory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Common.Contracts Assembly : Fibula.Common.Contracts.dll Syntax public static class CustomConvertersFactory"
  },
  "code/Fibula.Common.Contracts.Delegates.html": {
    "href": "code/Fibula.Common.Contracts.Delegates.html",
    "title": "Namespace Fibula.Common.Contracts.Delegates | Fibula MMO",
    "keywords": "Namespace Fibula.Common.Contracts.Delegates Delegates OnThingStateChanged Delegate for IThing state changing."
  },
  "code/Fibula.Common.Contracts.Delegates.OnThingStateChanged.html": {
    "href": "code/Fibula.Common.Contracts.Delegates.OnThingStateChanged.html",
    "title": "Delegate OnThingStateChanged | Fibula MMO",
    "keywords": "Delegate OnThingStateChanged Delegate for IThing state changing. Namespace : Fibula.Common.Contracts.Delegates Assembly : Fibula.Common.Contracts.dll Syntax public delegate void OnThingStateChanged(IThing thingThatChanged, ThingStateChangedEventArgs eventArgs); Parameters Type Name Description IThing thingThatChanged A reference to the IThing that changed. ThingStateChangedEventArgs eventArgs The event arguments. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Common.Contracts.Enumerations.AgentType.html": {
    "href": "code/Fibula.Common.Contracts.Enumerations.AgentType.html",
    "title": "Enum AgentType | Fibula MMO",
    "keywords": "Enum AgentType Enumeration of the possible type of client agents. Namespace : Fibula.Common.Contracts.Enumerations Assembly : Fibula.Common.Contracts.dll Syntax public enum AgentType : ushort Fields Name Description Flash The flash client. Linux The Linux client. OtClientLinux The Linux otclient. OtClientMac The Mac otclient. OtClientWindows The Windows otclient. Undefined Undefined. Windows The Windows client. Extension Methods ObjectExtensions.YieldSingleItem<AgentType>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<AgentType>(String)"
  },
  "code/Fibula.Common.Contracts.Enumerations.AnimatedEffect.html": {
    "href": "code/Fibula.Common.Contracts.Enumerations.AnimatedEffect.html",
    "title": "Enum AnimatedEffect | Fibula MMO",
    "keywords": "Enum AnimatedEffect Enumerates the possible animated effects in the game. Namespace : Fibula.Common.Contracts.Enumerations Assembly : Fibula.Common.Contracts.dll Syntax public enum AnimatedEffect : byte Fields Name Description AreaFlame Flame animation. BubbleBlack Black bubble animation. BubbleBlue Blue bubble animation. DamageEnergy Electricity damage animation. DamageExplosion Explosion animation. DamageMagicMissile Magic missile impact animation. DamageVenomMissile Venom missile impact animation. First A pointer to the first valid value in this enumeration. Flame Flame animation. GlitterBlue Blue glitter animation. GlitterGreen Green glitter animation. GlitterRed Red glitter animation. Last A pointer to the last valid value in this enumeration. None No animation. Don't send to client. Poison Poison animation. Puff A puff of smoke. RingsBlue Three blue rings. RingsGreen Three green rings. RingsYellow Three yellow rings. SoundBlue Blue notes of sound animation. SoundGreen Green notes of sound animation. SoundPurple Purple notes of sound animation. SoundRed Red notes of sound animation. SoundWhite White notes of sound animation. SoundYellow Yellow notes of sound animation. SparkYellow Yellow sparks. XBlood The bleeding animation. XGray Bones being cut. Extension Methods ObjectExtensions.YieldSingleItem<AnimatedEffect>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<AnimatedEffect>(String)"
  },
  "code/Fibula.Common.Contracts.Enumerations.AvoidDamageType.html": {
    "href": "code/Fibula.Common.Contracts.Enumerations.AvoidDamageType.html",
    "title": "Enum AvoidDamageType | Fibula MMO",
    "keywords": "Enum AvoidDamageType Enumerates the possible damage types to avoid. Namespace : Fibula.Common.Contracts.Enumerations Assembly : Fibula.Common.Contracts.dll Syntax public enum AvoidDamageType : byte Fields Name Description All Avoid all types. Energy Avoid energy. Fire Avoid fire. Poison Avoid poison. Special Avoids special. Extension Methods ObjectExtensions.YieldSingleItem<AvoidDamageType>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<AvoidDamageType>(String)"
  },
  "code/Fibula.Common.Contracts.Enumerations.ChaseMode.html": {
    "href": "code/Fibula.Common.Contracts.Enumerations.ChaseMode.html",
    "title": "Enum ChaseMode | Fibula MMO",
    "keywords": "Enum ChaseMode Enumeration of the possible chasing modes. Namespace : Fibula.Common.Contracts.Enumerations Assembly : Fibula.Common.Contracts.dll Syntax public enum ChaseMode : byte Fields Name Description Chase Chases the target closely. KeepDistance Maintains a constant distance to the target. Stand Does not chase the target. Extension Methods ObjectExtensions.YieldSingleItem<ChaseMode>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<ChaseMode>(String)"
  },
  "code/Fibula.Common.Contracts.Enumerations.ChatChannelType.html": {
    "href": "code/Fibula.Common.Contracts.Enumerations.ChatChannelType.html",
    "title": "Enum ChatChannelType | Fibula MMO",
    "keywords": "Enum ChatChannelType Enumerates the chat channel types. Namespace : Fibula.Common.Contracts.Enumerations Assembly : Fibula.Common.Contracts.dll Syntax public enum ChatChannelType : ushort Fields Name Description Game The default game channel. Help The help channel. None No channel type. Private A private chat channel. RealLife The real-life channel. RuleViolations The rule violations channel. Trade The trade channel. Extension Methods ObjectExtensions.YieldSingleItem<ChatChannelType>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<ChatChannelType>(String)"
  },
  "code/Fibula.Common.Contracts.Enumerations.ConditionFlag.html": {
    "href": "code/Fibula.Common.Contracts.Enumerations.ConditionFlag.html",
    "title": "Enum ConditionFlag | Fibula MMO",
    "keywords": "Enum ConditionFlag Enumerates the condition flags that a creature can suffer from. Namespace : Fibula.Common.Contracts.Enumerations Assembly : Fibula.Common.Contracts.dll Syntax public enum ConditionFlag : uint Fields Name Description Burning Burning. Drunk Drunk. Electrified Electrified. Hasted Movement speed increased. HitpointDraining Hitpoints being drained. InFight In combat, voluntarily or not. Invisible Invisibility. Light Irradiating light. ManaShield Redirecting hitpoint damage to mana pool. Muted Muted from public chat channels, except for casting spells or commands. None No condition set. Outfit The outfit is temporarily changed. Paralyzed Movement speed decreased. Posion Poisoned PzLocked Locked out of protecion zones. Silenced Silenced from chatting in all channels and casting instant spells, but able to cast commands. Extension Methods ObjectExtensions.YieldSingleItem<ConditionFlag>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<ConditionFlag>(String)"
  },
  "code/Fibula.Common.Contracts.Enumerations.Direction.html": {
    "href": "code/Fibula.Common.Contracts.Enumerations.Direction.html",
    "title": "Enum Direction | Fibula MMO",
    "keywords": "Enum Direction Enumeration of the directions in the game. Namespace : Fibula.Common.Contracts.Enumerations Assembly : Fibula.Common.Contracts.dll Syntax public enum Direction : byte Fields Name Description East East. North North. NorthEast NorthEast. NorthWest NorthWest. South South. SouthEast SouthEast. SouthWest SouthWest. West West. Extension Methods ObjectExtensions.YieldSingleItem<Direction>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<Direction>(String) DirectionExtensions.GetClientSafeDirection() DirectionExtensions.IsDiagonal()"
  },
  "code/Fibula.Common.Contracts.Enumerations.FightMode.html": {
    "href": "code/Fibula.Common.Contracts.Enumerations.FightMode.html",
    "title": "Enum FightMode | Fibula MMO",
    "keywords": "Enum FightMode Enumeration of the possible fighting modes. Namespace : Fibula.Common.Contracts.Enumerations Assembly : Fibula.Common.Contracts.dll Syntax public enum FightMode : byte Fields Name Description Balanced A balanced stance. FullAttack Full offensive attack. Focuses on dealing damage but leaves the attacker open to receive more damage, too. FullDefense Least aggresive stance. Focuses on blocking attacks instead of dealing damage. Extension Methods ObjectExtensions.YieldSingleItem<FightMode>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<FightMode>(String)"
  },
  "code/Fibula.Common.Contracts.Enumerations.html": {
    "href": "code/Fibula.Common.Contracts.Enumerations.html",
    "title": "Namespace Fibula.Common.Contracts.Enumerations | Fibula MMO",
    "keywords": "Namespace Fibula.Common.Contracts.Enumerations Enums AgentType Enumeration of the possible type of client agents. AnimatedEffect Enumerates the possible animated effects in the game. AvoidDamageType Enumerates the possible damage types to avoid. ChaseMode Enumeration of the possible chasing modes. ChatChannelType Enumerates the chat channel types. ConditionFlag Enumerates the condition flags that a creature can suffer from. Direction Enumeration of the directions in the game. FightMode Enumeration of the possible fighting modes. LightColors Enumeration of the possible light colors. LightLevels Enumeration of the common light levels. LiquidColor Enumerates the different types of liquid color in the game. LiquidType Enumerates the different types of liquid in the game. LocationType Enumerates the possible types of locations. MessageType Enumeration of the possible types of messages. SkillType Enumeration of the possible skills. Slot Enumeration of the possible inventory slots. SpeechType Enumeration of the possible speech types. SquareColor Enumerates the possible colors of the creature square. TextColor Enumerates the possible colors of text. WalkPlanState Enumeration of the possible states of a walk plan. WalkStrategy Enumeration of the possible walking strategies. WorldType Enumeration of the possible world types."
  },
  "code/Fibula.Common.Contracts.Enumerations.LightColors.html": {
    "href": "code/Fibula.Common.Contracts.Enumerations.LightColors.html",
    "title": "Enum LightColors | Fibula MMO",
    "keywords": "Enum LightColors Enumeration of the possible light colors. Namespace : Fibula.Common.Contracts.Enumerations Assembly : Fibula.Common.Contracts.dll Syntax public enum LightColors : byte Fields Name Description Default The default color, which is Orange . None No color. Orange Orange color. White White color. Extension Methods ObjectExtensions.YieldSingleItem<LightColors>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<LightColors>(String)"
  },
  "code/Fibula.Common.Contracts.Enumerations.LightLevels.html": {
    "href": "code/Fibula.Common.Contracts.Enumerations.LightLevels.html",
    "title": "Enum LightLevels | Fibula MMO",
    "keywords": "Enum LightLevels Enumeration of the common light levels. Namespace : Fibula.Common.Contracts.Enumerations Assembly : Fibula.Common.Contracts.dll Syntax public enum LightLevels : byte Fields Name Description Full The level considered as full. None No light. Torch The level emitted by a brand-new torch. World Daylight level. Extension Methods ObjectExtensions.YieldSingleItem<LightLevels>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<LightLevels>(String)"
  },
  "code/Fibula.Common.Contracts.Enumerations.LiquidColor.html": {
    "href": "code/Fibula.Common.Contracts.Enumerations.LiquidColor.html",
    "title": "Enum LiquidColor | Fibula MMO",
    "keywords": "Enum LiquidColor Enumerates the different types of liquid color in the game. Namespace : Fibula.Common.Contracts.Enumerations Assembly : Fibula.Common.Contracts.dll Syntax public enum LiquidColor Fields Name Description Blue Blue. Brown Brown. Green Red. None No color specified. Purple White. Red Purple. White Yellow. Yellow Green. Extension Methods ObjectExtensions.YieldSingleItem<LiquidColor>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<LiquidColor>(String)"
  },
  "code/Fibula.Common.Contracts.Enumerations.LiquidType.html": {
    "href": "code/Fibula.Common.Contracts.Enumerations.LiquidType.html",
    "title": "Enum LiquidType | Fibula MMO",
    "keywords": "Enum LiquidType Enumerates the different types of liquid in the game. Namespace : Fibula.Common.Contracts.Enumerations Assembly : Fibula.Common.Contracts.dll Syntax public enum LiquidType Fields Name Description Beer Beer, of course. Blood Vampires love this. Lemonade Tasty lemonade. LifeFluid Life replentishing fluid. ManaFluid Mana replentishing fluid. Milk Yum, milk! Mud Mud. None No type specified. Oil Oil. Slime Seems poison-y. Urine You probably shouldn't drink it. Water H2O. Wine Wine Extension Methods NetworkMessageExtensions.ToLiquidColor() ObjectExtensions.YieldSingleItem<LiquidType>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<LiquidType>(String)"
  },
  "code/Fibula.Common.Contracts.Enumerations.LocationType.html": {
    "href": "code/Fibula.Common.Contracts.Enumerations.LocationType.html",
    "title": "Enum LocationType | Fibula MMO",
    "keywords": "Enum LocationType Enumerates the possible types of locations. Namespace : Fibula.Common.Contracts.Enumerations Assembly : Fibula.Common.Contracts.dll Syntax public enum LocationType : byte Fields Name Description InsideContainer Inside a specific container. InventorySlot The inventory slot of a player. Map On the map. NotSet Unset and generally invalid location. Extension Methods ObjectExtensions.YieldSingleItem<LocationType>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<LocationType>(String)"
  },
  "code/Fibula.Common.Contracts.Enumerations.MessageType.html": {
    "href": "code/Fibula.Common.Contracts.Enumerations.MessageType.html",
    "title": "Enum MessageType | Fibula MMO",
    "keywords": "Enum MessageType Enumeration of the possible types of messages. Namespace : Fibula.Common.Contracts.Enumerations Assembly : Fibula.Common.Contracts.dll Syntax public enum MessageType : byte Fields Name Description ConsoleBlue Blue message in the console. ConsoleLightBlue Light blue message in the console. ConsoleOrange Orange message in the console ConsoleRed Red message in the console. ConsoleYellow Yellow message in the console. DescriptionGreen Green message in game window and in the console. EventAdvance White message in game window and in the console. EventDefault White message at the bottom of the game window and in the console. StatusDefault White message at the bottom of the game window and in the console. StatusSmall White message at the bottom of the game window. Warning Red message in game window and in the console. Extension Methods ObjectExtensions.YieldSingleItem<MessageType>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<MessageType>(String)"
  },
  "code/Fibula.Common.Contracts.Enumerations.SkillType.html": {
    "href": "code/Fibula.Common.Contracts.Enumerations.SkillType.html",
    "title": "Enum SkillType | Fibula MMO",
    "keywords": "Enum SkillType Enumeration of the possible skills. Namespace : Fibula.Common.Contracts.Enumerations Assembly : Fibula.Common.Contracts.dll Syntax public enum SkillType : byte Fields Name Description Axe The axe fighting level. Club The club fighting level. Experience The experience level. Fishing The fishing level. Magic The magic level. NoWeapon The bare-hands or non-weapon fighting level. Ranged The ranged fighting level. Shield The shielding level. Sword The sword fighting level. Extension Methods ObjectExtensions.YieldSingleItem<SkillType>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<SkillType>(String)"
  },
  "code/Fibula.Common.Contracts.Enumerations.Slot.html": {
    "href": "code/Fibula.Common.Contracts.Enumerations.Slot.html",
    "title": "Enum Slot | Fibula MMO",
    "keywords": "Enum Slot Enumeration of the possible inventory slots. Namespace : Fibula.Common.Contracts.Enumerations Assembly : Fibula.Common.Contracts.dll Syntax public enum Slot : byte Fields Name Description Ammo The ammunition slot. Anywhere Special slot that is a wildcard. Back The back slot. Body The chest slot. Feet The feet slot. Head The head slot. LeftHand The left hand slot. Legs The pants slot. Neck The neck slot. RightHand The right hand slot. Ring The ring slot. TwoHanded Any of the hand slots. Uses both hands. UnsetInvalid Special slot that is an unset or invalid value. Extension Methods ObjectExtensions.YieldSingleItem<Slot>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<Slot>(String)"
  },
  "code/Fibula.Common.Contracts.Enumerations.SpeechType.html": {
    "href": "code/Fibula.Common.Contracts.Enumerations.SpeechType.html",
    "title": "Enum SpeechType | Fibula MMO",
    "keywords": "Enum SpeechType Enumeration of the possible speech types. Namespace : Fibula.Common.Contracts.Enumerations Assembly : Fibula.Common.Contracts.dll Syntax public enum SpeechType : byte Fields Name Description Broadcast Broadcast a message (#b). ChannelYellow Yellow message in chat. MonsterSay Talk in organge. Private Players speaking privately to other players. RuleViolationAnswer Rule violation reply. RuleViolationContinue Rule violation continuance. RuleViolationReport Rule violation report. Say A normal talk. Whisper Whispering (#w). Yell Yelling (#y). Extension Methods ObjectExtensions.YieldSingleItem<SpeechType>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<SpeechType>(String)"
  },
  "code/Fibula.Common.Contracts.Enumerations.SquareColor.html": {
    "href": "code/Fibula.Common.Contracts.Enumerations.SquareColor.html",
    "title": "Enum SquareColor | Fibula MMO",
    "keywords": "Enum SquareColor Enumerates the possible colors of the creature square. Namespace : Fibula.Common.Contracts.Enumerations Assembly : Fibula.Common.Contracts.dll Syntax public enum SquareColor : byte Fields Name Description Black A black square. First A pointer to the first valid value in this enumeration. Last A pointer to the last valid value in this enumeration. White A white square. Extension Methods ObjectExtensions.YieldSingleItem<SquareColor>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<SquareColor>(String)"
  },
  "code/Fibula.Common.Contracts.Enumerations.TextColor.html": {
    "href": "code/Fibula.Common.Contracts.Enumerations.TextColor.html",
    "title": "Enum TextColor | Fibula MMO",
    "keywords": "Enum TextColor Enumerates the possible colors of text. Namespace : Fibula.Common.Contracts.Enumerations Assembly : Fibula.Common.Contracts.dll Syntax public enum TextColor : byte Fields Name Description Blue Blue. Crystal Crystal. DarkRed Dark red. Gold Golden. Green Green. LightBlue Light blue. LightGrey Light gray. None No color. Orange Orange. Platinum Platinum. Purple Purple. Red Red. White White. Extension Methods ObjectExtensions.YieldSingleItem<TextColor>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<TextColor>(String)"
  },
  "code/Fibula.Common.Contracts.Enumerations.WalkPlanState.html": {
    "href": "code/Fibula.Common.Contracts.Enumerations.WalkPlanState.html",
    "title": "Enum WalkPlanState | Fibula MMO",
    "keywords": "Enum WalkPlanState Enumeration of the possible states of a walk plan. Namespace : Fibula.Common.Contracts.Enumerations Assembly : Fibula.Common.Contracts.dll Syntax public enum WalkPlanState Fields Name Description Aborted The plan was aborted. AtGoal The plan was successfully traversed and we're now at the goal location. NeedsToRecalculate The plan is to continue, but the path should be recalculated. OnTrack The plan is to continue, and there is no need to recalculate the path. Extension Methods ObjectExtensions.YieldSingleItem<WalkPlanState>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<WalkPlanState>(String)"
  },
  "code/Fibula.Common.Contracts.Enumerations.WalkStrategy.html": {
    "href": "code/Fibula.Common.Contracts.Enumerations.WalkStrategy.html",
    "title": "Enum WalkStrategy | Fibula MMO",
    "keywords": "Enum WalkStrategy Enumeration of the possible walking strategies. Namespace : Fibula.Common.Contracts.Enumerations Assembly : Fibula.Common.Contracts.dll Syntax public enum WalkStrategy Fields Name Description AggresiveRecalculation Intended for moderate moving goals, following players, or medium artificial inteligence. The creature follows the walk plan and there is a 25% chance of recalculating at each waypoint. If the waypoint is not accessible or the creature is otherwise interrupted, it will recalculate the plan from it's current position. ConservativeRecalculation Intended for slow moving goals, or low level artificial inteligence. The creature follows the walk plan and there is a 10% chance of recalculating at each waypoint. If the waypoint is not accessible or the creature is otherwise interrupted, it will recalculate the plan from it's current position. DoNotRecalculate Intended for static goals. When a creature is following a walk plan and it's suddenly interrupted, it will give up and abort the plan, sending a walk cancellation if applicable. ExtremeRecalculation Intended for fast moving goals, or highest artificial inteligence. Compute expensive. The creature follows the walk plan and there is a 50% chance of recalculating at each waypoint. If the waypoint is not accessible or the creature is otherwise interrupted, it will recalculate the plan from it's current position. RecalculateOnInterruption Intended for static goals. When a creature is following a walk plan and it's suddenly interrupted, it will recalculate the plan from it's current position. Extension Methods ObjectExtensions.YieldSingleItem<WalkStrategy>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<WalkStrategy>(String)"
  },
  "code/Fibula.Common.Contracts.Enumerations.WorldType.html": {
    "href": "code/Fibula.Common.Contracts.Enumerations.WorldType.html",
    "title": "Enum WorldType | Fibula MMO",
    "keywords": "Enum WorldType Enumeration of the possible world types. Namespace : Fibula.Common.Contracts.Enumerations Assembly : Fibula.Common.Contracts.dll Syntax public enum WorldType : byte Fields Name Description FreeForAll PvP is unpunished. Hardcore PvP is encouraged. Normal PvP is allowed but punished. Safe No PvP allowed. Extension Methods ObjectExtensions.YieldSingleItem<WorldType>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<WorldType>(String)"
  },
  "code/Fibula.Common.Contracts.Extensions.DirectionExtensions.html": {
    "href": "code/Fibula.Common.Contracts.Extensions.DirectionExtensions.html",
    "title": "Class DirectionExtensions | Fibula MMO",
    "keywords": "Class DirectionExtensions Static class that contains extension methods for a Direction . Inheritance System.Object DirectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Common.Contracts.Extensions Assembly : Fibula.Common.Contracts.dll Syntax public static class DirectionExtensions Methods | Improve this Doc View Source GetClientSafeDirection(Direction) Converts given direction into one of the four directions safe to send to the Tibia client. Declaration public static Direction GetClientSafeDirection(this Direction direction) Parameters Type Name Description Direction direction The direction to convert. Returns Type Description Direction The client-safe direction. | Improve this Doc View Source IsDiagonal(Direction) Determines if this direction is a diagonal one. Declaration public static bool IsDiagonal(this Direction direction) Parameters Type Name Description Direction direction The direction to evaluate. Returns Type Description System.Boolean True if the direction is diagonal, false otherwise."
  },
  "code/Fibula.Common.Contracts.Extensions.html": {
    "href": "code/Fibula.Common.Contracts.Extensions.html",
    "title": "Namespace Fibula.Common.Contracts.Extensions | Fibula MMO",
    "keywords": "Namespace Fibula.Common.Contracts.Extensions Classes DirectionExtensions Static class that contains extension methods for a Direction ."
  },
  "code/Fibula.Common.Contracts.html": {
    "href": "code/Fibula.Common.Contracts.html",
    "title": "Namespace Fibula.Common.Contracts | Fibula MMO",
    "keywords": "Namespace Fibula.Common.Contracts Classes CustomConvertersFactory Static class that represents a factory for converters. ThingStateChangedEventArgs Class that represents event arguments for a IThing state changed event. Structs WalkPlan Class that represents a walk plan."
  },
  "code/Fibula.Common.Contracts.Models.ApplicationContextOptions.html": {
    "href": "code/Fibula.Common.Contracts.Models.ApplicationContextOptions.html",
    "title": "Class ApplicationContextOptions | Fibula MMO",
    "keywords": "Class ApplicationContextOptions Class that represents options for the application context. Inheritance System.Object ApplicationContextOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Common.Contracts.Models Assembly : Fibula.Common.Contracts.dll Syntax public class ApplicationContextOptions Remarks Settings marked with [MoveToControlPlane] should ultimately be moved to a dynamic control plane. Properties | Improve this Doc View Source SupportedClientVersion Gets or sets the supported client version information. Declaration [Required(ErrorMessage = \"A supported client version must be speficied.\")] public VersionInformation SupportedClientVersion { get; set; } Property Value Type Description VersionInformation | Improve this Doc View Source UsingCipsoftRsaKeys Gets or sets a value indicating whether the protocol is using CipSoft RSA keys for encryption. Declaration public bool UsingCipsoftRsaKeys { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source WebsiteUrl Gets or sets the website url. Declaration public string WebsiteUrl { get; set; } Property Value Type Description System.String | Improve this Doc View Source World Gets or sets the configuration of the game world. Declaration [Required(ErrorMessage = \"Settings for the world configuration must be speficied.\")] public WorldConfiguration World { get; set; } Property Value Type Description WorldConfiguration Remarks [MoveToControlPlane]. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Common.Contracts.Models.html": {
    "href": "code/Fibula.Common.Contracts.Models.html",
    "title": "Namespace Fibula.Common.Contracts.Models | Fibula MMO",
    "keywords": "Namespace Fibula.Common.Contracts.Models Classes ApplicationContextOptions Class that represents options for the application context. VersionInformation Class that represents a version's information. WorldConfiguration Class that represents options for the configuration of a world."
  },
  "code/Fibula.Common.Contracts.Models.VersionInformation.html": {
    "href": "code/Fibula.Common.Contracts.Models.VersionInformation.html",
    "title": "Class VersionInformation | Fibula MMO",
    "keywords": "Class VersionInformation Class that represents a version's information. Inheritance System.Object VersionInformation Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Common.Contracts.Models Assembly : Fibula.Common.Contracts.dll Syntax public class VersionInformation Properties | Improve this Doc View Source Description Gets or sets the description of the version. Declaration [Required(ErrorMessage = \"A description for the version must be speficied.\")] public string Description { get; set; } Property Value Type Description System.String | Improve this Doc View Source Numeric Gets or sets the numeric value of the version. Declaration [Required(ErrorMessage = \"A numeric value for the version must be speficied.\")] public int Numeric { get; set; } Property Value Type Description System.Int32 Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Common.Contracts.Models.WorldConfiguration.html": {
    "href": "code/Fibula.Common.Contracts.Models.WorldConfiguration.html",
    "title": "Class WorldConfiguration | Fibula MMO",
    "keywords": "Class WorldConfiguration Class that represents options for the configuration of a world. Inheritance System.Object WorldConfiguration Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Common.Contracts.Models Assembly : Fibula.Common.Contracts.dll Syntax public class WorldConfiguration Properties | Improve this Doc View Source Geolocation Gets or sets the geolocation of this world server. Declaration [Required(ErrorMessage = \"A geolocation for the world must be speficied.\")] public string Geolocation { get; set; } Property Value Type Description System.String | Improve this Doc View Source IpAddress Gets or sets the public IP Address of the world server. Declaration [Required(ErrorMessage = \"A public IP address for the gameworld server must be speficied.\")] public string IpAddress { get; set; } Property Value Type Description System.String | Improve this Doc View Source LocalResetHour Gets or sets the hour at which the world reset takes place in local time. Informational only. Declaration public byte LocalResetHour { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source MaximumNewbieQueueSize Gets or sets the maximum queue size for newbie player characters. Declaration public ushort? MaximumNewbieQueueSize { get; set; } Property Value Type Description System.Nullable < System.UInt16 > | Improve this Doc View Source MaximumOnlineNewbies Gets or sets the maximum number of newbie player characters allowed to log online simultaneously. Declaration public ushort? MaximumOnlineNewbies { get; set; } Property Value Type Description System.Nullable < System.UInt16 > | Improve this Doc View Source MaximumOnlineVeterans Gets or sets the maximum number of veteran player characters allowed to log online simultaneously. Declaration public ushort? MaximumOnlineVeterans { get; set; } Property Value Type Description System.Nullable < System.UInt16 > | Improve this Doc View Source MaximumVeteranQueueSize Gets or sets the maximum queue size for veteran player characters. Declaration public ushort? MaximumVeteranQueueSize { get; set; } Property Value Type Description System.Nullable < System.UInt16 > | Improve this Doc View Source MessageOfTheDay Gets or sets the world's message of the day. Declaration public string MessageOfTheDay { get; set; } Property Value Type Description System.String Remarks Should eventually come from a dynamic control plane framework. | Improve this Doc View Source Name Gets or sets the name of the world. Declaration [Required(ErrorMessage = \"A name for the world must be speficied.\")] public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Port Gets or sets the port of the world server. Declaration [Required(ErrorMessage = \"A port for the gameworld server must be speficied.\")] public ushort? Port { get; set; } Property Value Type Description System.Nullable < System.UInt16 > | Improve this Doc View Source Type Gets or sets the world type. Declaration [Required(ErrorMessage = \"A type of world must be speficied.\")] public WorldType? Type { get; set; } Property Value Type Description System.Nullable < WorldType > Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Common.Contracts.Structs.html": {
    "href": "code/Fibula.Common.Contracts.Structs.html",
    "title": "Namespace Fibula.Common.Contracts.Structs | Fibula MMO",
    "keywords": "Namespace Fibula.Common.Contracts.Structs Structs Location Structure for all locations in the game."
  },
  "code/Fibula.Common.Contracts.Structs.Location.html": {
    "href": "code/Fibula.Common.Contracts.Structs.Location.html",
    "title": "Struct Location | Fibula MMO",
    "keywords": "Struct Location Structure for all locations in the game. Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Fibula.Common.Contracts.Structs Assembly : Fibula.Common.Contracts.dll Syntax public struct Location Properties | Improve this Doc View Source ContainerId Gets the id of the container that's encoded in this location. Declaration public byte ContainerId { get; } Property Value Type Description System.Byte | Improve this Doc View Source ContainerIndex Gets or sets the index of the container that's encoded in this location. Declaration public byte ContainerIndex { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source IsUnderground Gets a value indicating whether this location is underground. Declaration public bool IsUnderground { get; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxValueIn2D Gets the maximum value from X or Y in this location's coordinates. Declaration public int MaxValueIn2D { get; } Property Value Type Description System.Int32 | Improve this Doc View Source MaxValueIn3D Gets the maximum value from X, Y, or Z in this location's coordinates. Declaration public int MaxValueIn3D { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Slot Gets the slot id encoded in this location. Declaration public Slot Slot { get; } Property Value Type Description Slot | Improve this Doc View Source Type Gets this location's type. Declaration public LocationType Type { get; } Property Value Type Description LocationType | Improve this Doc View Source X Gets or sets the value of this location in the X coordinate. Declaration public int X { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Y Gets or sets the value of this location in the Y coordinate. Declaration public int Y { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Z Gets or sets the value of this location in the Z coordinate. Declaration public sbyte Z { get; set; } Property Value Type Description System.SByte Methods | Improve this Doc View Source DirectionTo(Location, Boolean) Computes the direction in which the target is, as seen from this location. Declaration public Direction DirectionTo(Location target, bool returnDiagonals = false) Parameters Type Name Description Location target The target location. System.Boolean returnDiagonals Optional. A value indicating whether to include diagonals as the potential answer to this query. Defaults to false. Returns Type Description Direction The direction in which target is with respect to this location. | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() | Improve this Doc View Source GetOffsetBetween(Location, Location) Computes the offset from the origin to the target . Declaration public static (long XOffset, long YOffset, int ZOffset) GetOffsetBetween(Location origin, Location target) Parameters Type Name Description Location origin The origin location. Location target The target location. Returns Type Description System.ValueTuple < System.Int64 , System.Int64 , System.Int32 > An ordered set, containing the offset bewteen locations. | Improve this Doc View Source LocationAt(Direction) Computes the Location that is in the targetDirection , as seen from this location. Declaration public Location LocationAt(Direction targetDirection) Parameters Type Name Description Direction targetDirection The target direction. Returns Type Description Location The Location which is in the targetDirection with respect to this location. | Improve this Doc View Source ToString() Gets this location's string representation: it's coordinates. Declaration public override string ToString() Returns Type Description System.String This location's string representation. Overrides System.ValueType.ToString() Operators | Improve this Doc View Source Addition(Location, Location) Adds two Location values. Declaration public static Location operator +(Location location1, Location location2) Parameters Type Name Description Location location1 The first location. Location location2 The second location. Returns Type Description Location The result of the operation. | Improve this Doc View Source Equality(Location, Location) Checks if two Location values are considered equal. Declaration public static bool operator ==(Location location1, Location location2) Parameters Type Name Description Location location1 The first location. Location location2 The second location. Returns Type Description System.Boolean True if they are equal, false otherwise. | Improve this Doc View Source GreaterThan(Location, Location) Checks if a Location is considered greater than Location . A Location is considered 'greater' than another when any of it's coordinates is greater than those of the other Location . Declaration public static bool operator>(Location location1, Location location2) Parameters Type Name Description Location location1 The first location. Location location2 The second location. Returns Type Description System.Boolean True if location1 is considered greater than location2 . | Improve this Doc View Source Inequality(Location, Location) Checks if two Location values are considered equal. Declaration public static bool operator !=(Location location1, Location location2) Parameters Type Name Description Location location1 The first location. Location location2 The second location. Returns Type Description System.Boolean True if they are not equal, false otherwise. | Improve this Doc View Source LessThan(Location, Location) Checks if a Location is considered lesser than Location . A Location is considered 'lesser' than another when any of it's coordinates is less than those of the other Location . Declaration public static bool operator <(Location location1, Location location2) Parameters Type Name Description Location location1 The first location. Location location2 The second location. Returns Type Description System.Boolean True if location1 is considered lesser than location2 . | Improve this Doc View Source Subtraction(Location, Location) Subtracts two Location values. Declaration public static Location operator -(Location location1, Location location2) Parameters Type Name Description Location location1 The first location. Location location2 The second location. Returns Type Description Location The result of the operation. Extension Methods LocationExtensions.DecodeContainer(Location, IMap, IContainerManager, out Byte, ICreature) LocationExtensions.FindItemById(Location, IMap, IContainerManager, UInt16, ICreature) ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Common.Contracts.ThingStateChangedEventArgs.html": {
    "href": "code/Fibula.Common.Contracts.ThingStateChangedEventArgs.html",
    "title": "Class ThingStateChangedEventArgs | Fibula MMO",
    "keywords": "Class ThingStateChangedEventArgs Class that represents event arguments for a IThing state changed event. Inheritance System.Object System.EventArgs ThingStateChangedEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Common.Contracts Assembly : Fibula.Common.Contracts.dll Syntax public class ThingStateChangedEventArgs : EventArgs Properties | Improve this Doc View Source PropertyChanged Gets or sets the property that changed within the IThing . Declaration public string PropertyChanged { get; set; } Property Value Type Description System.String Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Common.Contracts.WalkPlan.html": {
    "href": "code/Fibula.Common.Contracts.WalkPlan.html",
    "title": "Struct WalkPlan | Fibula MMO",
    "keywords": "Struct WalkPlan Class that represents a walk plan. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Fibula.Common.Contracts Assembly : Fibula.Common.Contracts.dll Syntax public struct WalkPlan Constructors | Improve this Doc View Source WalkPlan(WalkStrategy, Func<Location>, Location[]) Initializes a new instance of the WalkPlan struct. Declaration public WalkPlan(WalkStrategy strategy, Func<Location> goalDeterminationFunction, params Location[] startingWaypoints) Parameters Type Name Description WalkStrategy strategy The strategy of the plan. System.Func < Location > goalDeterminationFunction A function used to determine the goal of this plan. Location [] startingWaypoints The waypoints already known to the goal. Properties | Improve this Doc View Source DetermineGoal Gets the function that determines the goal location. Declaration public Func<Location> DetermineGoal { get; } Property Value Type Description System.Func < Location > | Improve this Doc View Source IsInTerminalState Gets a value indicating whether the walk plan is in a terminal state. Declaration public bool IsInTerminalState { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Rng Gets or sets the pseudo-random number generator to work with. Declaration public Random Rng { get; set; } Property Value Type Description System.Random | Improve this Doc View Source State Gets or sets the state of this walk plan. Declaration public WalkPlanState State { get; set; } Property Value Type Description WalkPlanState | Improve this Doc View Source Strategy Gets the strategy of this walk plan. Declaration public WalkStrategy Strategy { get; } Property Value Type Description WalkStrategy | Improve this Doc View Source Waypoints Gets the waypoints of this walk plan. Declaration public LinkedList<Location> Waypoints { get; } Property Value Type Description System.Collections.Generic.LinkedList < Location > Extension Methods WalkPlanExtensions.UpdateState(WalkPlan, Location) WalkPlanExtensions.RecalculateWaypoints(WalkPlan, Location, IEnumerable<Direction>) ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Common.html": {
    "href": "code/Fibula.Common.html",
    "title": "Namespace Fibula.Common | Fibula MMO",
    "keywords": "Namespace Fibula.Common Classes ApplicationContext Class that represents the common context of the entire application. Thing Class that represents all things in the game."
  },
  "code/Fibula.Common.TestingUtilities.ExceptionAssert.html": {
    "href": "code/Fibula.Common.TestingUtilities.ExceptionAssert.html",
    "title": "Class ExceptionAssert | Fibula MMO",
    "keywords": "Class ExceptionAssert Class that contains extensions for asserting exceptions. Inheritance System.Object ExceptionAssert Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Common.TestingUtilities Assembly : Fibula.Common.TestingUtilities.dll Syntax public static class ExceptionAssert Methods | Improve this Doc View Source Throws<T>(Action, String) Checks that the function supplied throws an exception of type T . Declaration public static T Throws<T>(Action action, string message = null) where T : Exception Parameters Type Name Description System.Action action The function to test. System.String message Optional. The message that the caught exception should contain. Returns Type Description T The exception that was thrown. Type Parameters Name Description T The expected type in the exception thrown."
  },
  "code/Fibula.Common.TestingUtilities.html": {
    "href": "code/Fibula.Common.TestingUtilities.html",
    "title": "Namespace Fibula.Common.TestingUtilities | Fibula MMO",
    "keywords": "Namespace Fibula.Common.TestingUtilities Classes ExceptionAssert Class that contains extensions for asserting exceptions."
  },
  "code/Fibula.Common.Thing.html": {
    "href": "code/Fibula.Common.Thing.html",
    "title": "Class Thing | Fibula MMO",
    "keywords": "Class Thing Class that represents all things in the game. Inheritance System.Object Thing Creature Item Implements IThing ILocatable IContainedThing Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Fibula.Common Assembly : Fibula.Common.dll Syntax public abstract class Thing : IThing, ILocatable, IContainedThing Properties | Improve this Doc View Source CanBeMoved Gets a value indicating whether this thing can be moved. Declaration public abstract bool CanBeMoved { get; } Property Value Type Description System.Boolean | Improve this Doc View Source CarryLocation Gets the location where this thing is being carried at, if any. Declaration public abstract Location? CarryLocation { get; } Property Value Type Description System.Nullable < Location > | Improve this Doc View Source Location Gets this thing's location. Declaration public virtual Location Location { get; } Property Value Type Description Location | Improve this Doc View Source ParentContainer Gets or sets the parent container of this thing. Declaration public IThingContainer ParentContainer { get; set; } Property Value Type Description IThingContainer | Improve this Doc View Source ThingId Gets the id of this thing. Declaration public abstract ushort ThingId { get; } Property Value Type Description System.UInt16 Methods | Improve this Doc View Source DescribeForLogger() Provides a string describing the current thing for logging purposes. Declaration public abstract string DescribeForLogger() Returns Type Description System.String The string to log. | Improve this Doc View Source InvokePropertyChanged(String) Invokes the ThingChanged event on this thing. Declaration public void InvokePropertyChanged(string propertyName) Parameters Type Name Description System.String propertyName The name of the property. | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Events | Improve this Doc View Source ThingChanged Event to invoke when any of the properties of this thing have changed. Declaration public event OnThingStateChanged ThingChanged Event Type Type Description OnThingStateChanged Implements IThing ILocatable IContainedThing Extension Methods ContainerExtensions.GetParentContainerHierarchy(IContainedThing, Boolean) ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Common.Utilities.CompositeValidationResult.html": {
    "href": "code/Fibula.Common.Utilities.CompositeValidationResult.html",
    "title": "Class CompositeValidationResult | Fibula MMO",
    "keywords": "Class CompositeValidationResult Class that extends a System.ComponentModel.DataAnnotations.ValidationResult , composed of multiple results. Inheritance System.Object System.ComponentModel.DataAnnotations.ValidationResult CompositeValidationResult Inherited Members System.ComponentModel.DataAnnotations.ValidationResult.Success System.ComponentModel.DataAnnotations.ValidationResult.ToString() System.ComponentModel.DataAnnotations.ValidationResult.ErrorMessage System.ComponentModel.DataAnnotations.ValidationResult.MemberNames System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Fibula.Common.Utilities Assembly : Fibula.Common.Utilities.dll Syntax public class CompositeValidationResult : ValidationResult Constructors | Improve this Doc View Source CompositeValidationResult(String) Initializes a new instance of the CompositeValidationResult class. Declaration public CompositeValidationResult(string errorMessage) Parameters Type Name Description System.String errorMessage An error message to initialize the result with. Properties | Improve this Doc View Source Results Gets the collection of results in this composite result. Declaration public IList<ValidationResult> Results { get; } Property Value Type Description System.Collections.Generic.IList < System.ComponentModel.DataAnnotations.ValidationResult > Methods | Improve this Doc View Source AddResult(ValidationResult) Adds a result to this composite's list. Declaration public void AddResult(ValidationResult validationResult) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationResult validationResult The result to add. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Common.Utilities.DataAnnotationsValidator.html": {
    "href": "code/Fibula.Common.Utilities.DataAnnotationsValidator.html",
    "title": "Class DataAnnotationsValidator | Fibula MMO",
    "keywords": "Class DataAnnotationsValidator Class that represents a helper for dana annotations validator. Inheritance System.Object DataAnnotationsValidator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Common.Utilities Assembly : Fibula.Common.Utilities.dll Syntax public static class DataAnnotationsValidator Methods | Improve this Doc View Source TryValidateObject(Object, out IList<ValidationResult>, IDictionary<Object, Object>) Performs validation on an object and all of it's primitive properties. Declaration public static bool TryValidateObject(object obj, out IList<ValidationResult> results, IDictionary<object, object> validationContextItems = null) Parameters Type Name Description System.Object obj The object to validate. System.Collections.Generic.IList < System.ComponentModel.DataAnnotations.ValidationResult > results The results of the validation. System.Collections.Generic.IDictionary < System.Object , System.Object > validationContextItems Auxiliary items to initialize validation context with. Returns Type Description System.Boolean True if the validation passes, false otherwise. | Improve this Doc View Source TryValidateObjectRecursive<T>(T, out IList<ValidationResult>, IDictionary<Object, Object>) Performs validation on an object and all of it's properties, recursing into any non-primitive properties. Declaration public static bool TryValidateObjectRecursive<T>(T obj, out IList<ValidationResult> results, IDictionary<object, object> validationContextItems = null) Parameters Type Name Description T obj The object to validate. System.Collections.Generic.IList < System.ComponentModel.DataAnnotations.ValidationResult > results The results of the validation. System.Collections.Generic.IDictionary < System.Object , System.Object > validationContextItems Auxiliary items to initialize validation context with. Returns Type Description System.Boolean True if the validation passes, false otherwise. Type Parameters Name Description T The type of object. | Improve this Doc View Source ValidateObjectRecursive<T>(T, IDictionary<Object, Object>) Performs validation on an object and all of it's properties, recursing into any non-primitive properties. Declaration public static void ValidateObjectRecursive<T>(T obj, IDictionary<object, object> validationContextItems = null) Parameters Type Name Description T obj The object to validate. System.Collections.Generic.IDictionary < System.Object , System.Object > validationContextItems Auxiliary items to initialize validation context with. Type Parameters Name Description T The type of object."
  },
  "code/Fibula.Common.Utilities.Extensions.html": {
    "href": "code/Fibula.Common.Utilities.Extensions.html",
    "title": "Namespace Fibula.Common.Utilities.Extensions | Fibula MMO",
    "keywords": "Namespace Fibula.Common.Utilities.Extensions Classes SortedListExtensions Extension methods to make the System.Collections.Generic.SortedList easier to use. StringExtensions Static class that contains helper extension methods for strings."
  },
  "code/Fibula.Common.Utilities.Extensions.SortedListExtensions.html": {
    "href": "code/Fibula.Common.Utilities.Extensions.SortedListExtensions.html",
    "title": "Class SortedListExtensions | Fibula MMO",
    "keywords": "Class SortedListExtensions Extension methods to make the System.Collections.Generic.SortedList easier to use. Inheritance System.Object SortedListExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Common.Utilities.Extensions Assembly : Fibula.Common.Utilities.dll Syntax public static class SortedListExtensions Methods | Improve this Doc View Source Add(SortedList<Int32, INode>, INode) Adds a INode to the SortedList. Declaration public static void Add(this SortedList<int, INode> sortedList, INode node) Parameters Type Name Description System.Collections.Generic.SortedList < System.Int32 , INode > sortedList SortedList to add the node to. INode node Node to add to the sortedList. | Improve this Doc View Source IsEmpty<TKey, TValue>(SortedList<TKey, TValue>) Checks if the SortedList is empty. Declaration public static bool IsEmpty<TKey, TValue>(this SortedList<TKey, TValue> sortedList) Parameters Type Name Description System.Collections.Generic.SortedList <TKey, TValue> sortedList SortedList to check if it is empty. Returns Type Description System.Boolean True if sortedList is empty, false if it still has elements. Type Parameters Name Description TKey The type of key. TValue The type of value. | Improve this Doc View Source Pop(SortedList<Int32, INode>) Removes the node from the sorted list with the smallest TotalCost and returns that node. Declaration public static INode Pop(this SortedList<int, INode> sortedList) Parameters Type Name Description System.Collections.Generic.SortedList < System.Int32 , INode > sortedList SortedList to remove and return the smallest TotalCost node. Returns Type Description INode Node with the smallest TotalCost."
  },
  "code/Fibula.Common.Utilities.Extensions.StringExtensions.html": {
    "href": "code/Fibula.Common.Utilities.Extensions.StringExtensions.html",
    "title": "Class StringExtensions | Fibula MMO",
    "keywords": "Class StringExtensions Static class that contains helper extension methods for strings. Inheritance System.Object StringExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Common.Utilities.Extensions Assembly : Fibula.Common.Utilities.dll Syntax public static class StringExtensions Methods | Improve this Doc View Source GetEnclosedStrings(String, IEnumerable<(Char openChar, Char closeChar)>) Retrieves the enclosed strings within a string. Declaration public static IEnumerable<string> GetEnclosedStrings(this string str, IEnumerable<(char openChar, char closeChar)> openClosePairs) Parameters Type Name Description System.String str The string from which to retrieve the enclosured strings. System.Collections.Generic.IEnumerable < System.ValueTuple < System.Char , System.Char >> openClosePairs A collection of open and close characters between which to look for enclosed strings. Returns Type Description System.Collections.Generic.IEnumerable < System.String > A collection of enclosed string contained in the string. | Improve this Doc View Source SplitByToken(String, Char) Splits a string using the given token, but preserving any quoted strings. Declaration public static IEnumerable<string> SplitByToken(this string str, char token = ' ') Parameters Type Name Description System.String str The string to split. System.Char token Optional. The token to split by. Defaults to Fibula.Common.Utilities.Extensions.StringExtensions.Space . Returns Type Description System.Collections.Generic.IEnumerable < System.String > A collection of strings resulting from the split. | Improve this Doc View Source TrimEnclosures(String, IEnumerable<(Char openChar, Char closeChar)>) Trims the open and close chars from the string. Declaration public static string TrimEnclosures(this string inputStr, IEnumerable<(char openChar, char closeChar)> openClosePairs) Parameters Type Name Description System.String inputStr The string to trim the pairs from. System.Collections.Generic.IEnumerable < System.ValueTuple < System.Char , System.Char >> openClosePairs The collection of open and close pairs. Returns Type Description System.String The resulting string after trim. | Improve this Doc View Source TrimStartArticles(String) Trims the articles \"a\" and \"an\" out of the given string. Declaration public static string TrimStartArticles(this string fromString) Parameters Type Name Description System.String fromString The string to trim the articles from. Returns Type Description System.String The resulting stream."
  },
  "code/Fibula.Common.Utilities.html": {
    "href": "code/Fibula.Common.Utilities.html",
    "title": "Namespace Fibula.Common.Utilities | Fibula MMO",
    "keywords": "Namespace Fibula.Common.Utilities Classes CompositeValidationResult Class that extends a System.ComponentModel.DataAnnotations.ValidationResult , composed of multiple results. DataAnnotationsValidator Class that represents a helper for dana annotations validator. ObjectExtensions Helper class that provides methods for all objects. SkipRecursiveValidation Class that represents an System.Attribute which prevents a property from being validated during recursive validation. Validate Class that provides extension methods for common validation operations. ValidateCollectionAttribute Class that extends a System.ComponentModel.DataAnnotations.ValidationAttribute , which marks a collection for validation. ValidateObjectAttribute Class that extends a System.ComponentModel.DataAnnotations.ValidationAttribute , which marks an object for validation."
  },
  "code/Fibula.Common.Utilities.ObjectExtensions.html": {
    "href": "code/Fibula.Common.Utilities.ObjectExtensions.html",
    "title": "Class ObjectExtensions | Fibula MMO",
    "keywords": "Class ObjectExtensions Helper class that provides methods for all objects. Inheritance System.Object ObjectExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Common.Utilities Assembly : Fibula.Common.Utilities.dll Syntax public static class ObjectExtensions Methods | Improve this Doc View Source GetPropertyValue(Object, String) Gets the value of a given object's property. Declaration public static object GetPropertyValue(this object obj, string propertyName) Parameters Type Name Description System.Object obj The object. System.String propertyName The name of the property. Returns Type Description System.Object The value of the property, or null if not defined. | Improve this Doc View Source YieldSingleItem<T>(T) Wraps this object instance into an IEnumerable<T> consisting of a single item. Declaration public static IEnumerable<T> YieldSingleItem<T>(this T item) Parameters Type Name Description T item The instance that will be wrapped. Returns Type Description System.Collections.Generic.IEnumerable <T> An IEnumerable<T> consisting of a single item. Type Parameters Name Description T Type of the object."
  },
  "code/Fibula.Common.Utilities.Pathfinding.AStar.html": {
    "href": "code/Fibula.Common.Utilities.Pathfinding.AStar.html",
    "title": "Class AStar | Fibula MMO",
    "keywords": "Class AStar Interface to setup and run the A* algorithm. Inheritance System.Object AStar Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Common.Utilities.Pathfinding Assembly : Fibula.Common.Utilities.dll Syntax public class AStar Constructors | Improve this Doc View Source AStar(INodeFactory, INode, INode, Int32) Initializes a new instance of the AStar class. Declaration public AStar(INodeFactory nodeFactory, INode start, INode goal, int maxSearchSteps = 100) Parameters Type Name Description INodeFactory nodeFactory A reference to the node factory in use. INode start The starting node for the AStar algorithm. INode goal The goal node for the AStar algorithm. System.Int32 maxSearchSteps Optional. The maximum number of Step operations to perform on the search. Properties | Improve this Doc View Source ClosedList Gets the current state of the closed list. Declaration public IEnumerable<INode> ClosedList { get; } Property Value Type Description System.Collections.Generic.IEnumerable < INode > | Improve this Doc View Source CurrentNode Gets the current node that the AStar algorithm is at. Declaration public INode CurrentNode { get; } Property Value Type Description INode | Improve this Doc View Source OpenList Gets the current state of the open list. Declaration public IEnumerable<INode> OpenList { get; } Property Value Type Description System.Collections.Generic.IEnumerable < INode > Methods | Improve this Doc View Source GetLastPath() Gets the path of the last solution of the AStar algorithm. Will return a partial path if the algorithm has not finished yet. Declaration public IEnumerable<INode> GetLastPath() Returns Type Description System.Collections.Generic.IEnumerable < INode > Returns null if the algorithm has never been run. | Improve this Doc View Source Run() Steps the AStar algorithm forward until it either fails or finds the goal node. Declaration public SearchState Run() Returns Type Description SearchState Returns the state the algorithm finished in, Failed or GoalFound. | Improve this Doc View Source Step() Moves the AStar algorithm forward one step. Declaration public SearchState Step() Returns Type Description SearchState Returns the state the alorithm is in after the step, either Failed, GoalFound or still Searching. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Common.Utilities.Pathfinding.html": {
    "href": "code/Fibula.Common.Utilities.Pathfinding.html",
    "title": "Namespace Fibula.Common.Utilities.Pathfinding | Fibula MMO",
    "keywords": "Namespace Fibula.Common.Utilities.Pathfinding Classes AStar Interface to setup and run the A* algorithm. Interfaces INode The A* algorithm takes a starting node and a goal node and searches from the start to the goal. The nodes can be setup in a graph ahead of running the algorithm or the children nodes can be generated on the fly when the A* algorithm requests the Children property. See the square puzzle implementation to see the children being generated on the fly instead of the classical image/graph search with walls. INodeCreationArguments Interface for arguments that contain data for node creation. INodeFactory Interface for node factories. ISearchContext Interface for a search context. Enums SearchState Enumerates the possible A* algorithm states."
  },
  "code/Fibula.Common.Utilities.Pathfinding.INode.html": {
    "href": "code/Fibula.Common.Utilities.Pathfinding.INode.html",
    "title": "Interface INode | Fibula MMO",
    "keywords": "Interface INode The A* algorithm takes a starting node and a goal node and searches from the start to the goal. The nodes can be setup in a graph ahead of running the algorithm or the children nodes can be generated on the fly when the A* algorithm requests the Children property. See the square puzzle implementation to see the children being generated on the fly instead of the classical image/graph search with walls. Namespace : Fibula.Common.Utilities.Pathfinding Assembly : Fibula.Common.Utilities.dll Syntax public interface INode Properties | Improve this Doc View Source EstimatedCost Gets the estimated cost for this node. This is the heuristic from this node to the goal node, or h. Declaration int EstimatedCost { get; } Property Value Type Description System.Int32 | Improve this Doc View Source HasBeenVisited Gets or sets a value indicating whether this node is part of the closed list. Declaration bool HasBeenVisited { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MovementCost Gets the movement cost for this node. This is the movement cost from this node to the starting node, or g. Declaration int MovementCost { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Parent Gets or sets the parent node to this node. Declaration INode Parent { get; set; } Property Value Type Description INode | Improve this Doc View Source ShouldBeVisited Gets or sets a value indicating whether this node is part of the open list. Declaration bool ShouldBeVisited { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source TotalCost Gets the total cost for this node. This is the sum of the cost from this node to the starting node, or g, plus the heuristic cost from this node to the goal node, or h. [t = g + h]. Declaration int TotalCost { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source FindAdjacent(INodeFactory) Gets this node's adjacent nodes. Declaration IEnumerable<INode> FindAdjacent(INodeFactory nodeFactory) Parameters Type Name Description INodeFactory nodeFactory A reference to the factory to create new nodes. Returns Type Description System.Collections.Generic.IEnumerable < INode > The collection of adjacent nodes. | Improve this Doc View Source IsGoal(INode) Returns true if this node is the goal, false if it is not the goal. Declaration bool IsGoal(INode goal) Parameters Type Name Description INode goal The goal node to compare this node against. Returns Type Description System.Boolean True if this node is the goal, false if it s not the goal. | Improve this Doc View Source SetEstimatedCost(INode) Sets the estimated cost for the current node, or h. Declaration void SetEstimatedCost(INode goal) Parameters Type Name Description INode goal Goal node, for acces to the goals position. | Improve this Doc View Source SetMovementCost(INode) Sets the movement cost for the current node, or g. Declaration void SetMovementCost(INode parent) Parameters Type Name Description INode parent Parent node, for access to the parents movement cost. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Common.Utilities.Pathfinding.INodeCreationArguments.html": {
    "href": "code/Fibula.Common.Utilities.Pathfinding.INodeCreationArguments.html",
    "title": "Interface INodeCreationArguments | Fibula MMO",
    "keywords": "Interface INodeCreationArguments Interface for arguments that contain data for node creation. Namespace : Fibula.Common.Utilities.Pathfinding Assembly : Fibula.Common.Utilities.dll Syntax public interface INodeCreationArguments Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Common.Utilities.Pathfinding.INodeFactory.html": {
    "href": "code/Fibula.Common.Utilities.Pathfinding.INodeFactory.html",
    "title": "Interface INodeFactory | Fibula MMO",
    "keywords": "Interface INodeFactory Interface for node factories. Namespace : Fibula.Common.Utilities.Pathfinding Assembly : Fibula.Common.Utilities.dll Syntax public interface INodeFactory Methods | Improve this Doc View Source Create(ISearchContext, INodeCreationArguments) Creates a node with the given searchContext , using the given nodeCreationData . Declaration INode Create(ISearchContext searchContext, INodeCreationArguments nodeCreationData) Parameters Type Name Description ISearchContext searchContext A reference to the context of the search this node takes place in. INodeCreationArguments nodeCreationData The node creation data. Returns Type Description INode An instance of a INode . | Improve this Doc View Source OnSearchCompleted(String) Method called when a search is completed, whatever the result is. Declaration void OnSearchCompleted(string searchId) Parameters Type Name Description System.String searchId The search id. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Common.Utilities.Pathfinding.ISearchContext.html": {
    "href": "code/Fibula.Common.Utilities.Pathfinding.ISearchContext.html",
    "title": "Interface ISearchContext | Fibula MMO",
    "keywords": "Interface ISearchContext Interface for a search context. Namespace : Fibula.Common.Utilities.Pathfinding Assembly : Fibula.Common.Utilities.dll Syntax public interface ISearchContext Properties | Improve this Doc View Source SearchId Gets the id of the search. Declaration string SearchId { get; } Property Value Type Description System.String Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Common.Utilities.Pathfinding.SearchState.html": {
    "href": "code/Fibula.Common.Utilities.Pathfinding.SearchState.html",
    "title": "Enum SearchState | Fibula MMO",
    "keywords": "Enum SearchState Enumerates the possible A* algorithm states. Namespace : Fibula.Common.Utilities.Pathfinding Assembly : Fibula.Common.Utilities.dll Syntax public enum SearchState Fields Name Description Failed The algorithm has failed to find a solution. GoalFound The algorithm has found the goal. Searching The algorithm is running, searching for the goal. Extension Methods ObjectExtensions.YieldSingleItem<SearchState>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<SearchState>(String)"
  },
  "code/Fibula.Common.Utilities.SkipRecursiveValidation.html": {
    "href": "code/Fibula.Common.Utilities.SkipRecursiveValidation.html",
    "title": "Class SkipRecursiveValidation | Fibula MMO",
    "keywords": "Class SkipRecursiveValidation Class that represents an System.Attribute which prevents a property from being validated during recursive validation. Inheritance System.Object System.Attribute SkipRecursiveValidation Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Common.Utilities Assembly : Fibula.Common.Utilities.dll Syntax public class SkipRecursiveValidation : Attribute Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Common.Utilities.Validate.html": {
    "href": "code/Fibula.Common.Utilities.Validate.html",
    "title": "Class Validate | Fibula MMO",
    "keywords": "Class Validate Class that provides extension methods for common validation operations. Inheritance System.Object Validate Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Common.Utilities Assembly : Fibula.Common.Utilities.dll Syntax public static class Validate Methods | Improve this Doc View Source ThrowIfDefaultValue<T>(T, String) Throws an System.ArgumentException if the analyzed variable has the default value for it's type. Declaration public static void ThrowIfDefaultValue<T>(this T o, string paramName = \"\") where T : IConvertible Parameters Type Name Description T o The variable to analyze. System.String paramName The parameter name to use. Type Parameters Name Description T The type of the System.IConvertible . | Improve this Doc View Source ThrowIfNull(Object, String) Throws an System.ArgumentNullException if the analyzed object reference is null. Declaration public static void ThrowIfNull(this object o, string paramName = \"\") Parameters Type Name Description System.Object o The object reference to analyze. System.String paramName The parameter name to use. | Improve this Doc View Source ThrowIfNullOrWhiteSpace(String, String) Throws am System.ArgumentNullException if the analyzed string is null or white space only. Declaration public static void ThrowIfNullOrWhiteSpace(this string str, string paramName = \"\") Parameters Type Name Description System.String str The string to analyze. System.String paramName The parameter name to use."
  },
  "code/Fibula.Common.Utilities.ValidateCollectionAttribute.html": {
    "href": "code/Fibula.Common.Utilities.ValidateCollectionAttribute.html",
    "title": "Class ValidateCollectionAttribute | Fibula MMO",
    "keywords": "Class ValidateCollectionAttribute Class that extends a System.ComponentModel.DataAnnotations.ValidationAttribute , which marks a collection for validation. Inheritance System.Object System.Attribute System.ComponentModel.DataAnnotations.ValidationAttribute ValidateCollectionAttribute Inherited Members System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String) System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object, System.ComponentModel.DataAnnotations.ValidationContext) System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object) System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object, System.ComponentModel.DataAnnotations.ValidationContext) System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object, System.String) System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Common.Utilities Assembly : Fibula.Common.Utilities.dll Syntax public class ValidateCollectionAttribute : ValidationAttribute Properties | Improve this Doc View Source ValidationType Gets or sets the type of validation performed. Declaration public Type ValidationType { get; set; } Property Value Type Description System.Type Methods | Improve this Doc View Source IsValid(Object, ValidationContext) Determines whether the specified value of the object is valid. Declaration protected override ValidationResult IsValid(object value, ValidationContext validationContext) Parameters Type Name Description System.Object value The value of the object to validate. System.ComponentModel.DataAnnotations.ValidationContext validationContext The System.ComponentModel.DataAnnotations.ValidationContext object that describes the context where the validation checks are performed. This parameter cannot be null. Returns Type Description System.ComponentModel.DataAnnotations.ValidationResult True if the specified value is valid, false otherwise. Overrides System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object, System.ComponentModel.DataAnnotations.ValidationContext) Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Common.Utilities.ValidateObjectAttribute.html": {
    "href": "code/Fibula.Common.Utilities.ValidateObjectAttribute.html",
    "title": "Class ValidateObjectAttribute | Fibula MMO",
    "keywords": "Class ValidateObjectAttribute Class that extends a System.ComponentModel.DataAnnotations.ValidationAttribute , which marks an object for validation. Inheritance System.Object System.Attribute System.ComponentModel.DataAnnotations.ValidationAttribute ValidateObjectAttribute Inherited Members System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String) System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object, System.ComponentModel.DataAnnotations.ValidationContext) System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object) System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object, System.ComponentModel.DataAnnotations.ValidationContext) System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object, System.String) System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Common.Utilities Assembly : Fibula.Common.Utilities.dll Syntax public class ValidateObjectAttribute : ValidationAttribute Methods | Improve this Doc View Source IsValid(Object, ValidationContext) Determines whether the specified value of the object is valid. Declaration protected override ValidationResult IsValid(object value, ValidationContext validationContext) Parameters Type Name Description System.Object value The value of the object to validate. System.ComponentModel.DataAnnotations.ValidationContext validationContext The System.ComponentModel.DataAnnotations.ValidationContext object that describes the context where the validation checks are performed. This parameter cannot be null. Returns Type Description System.ComponentModel.DataAnnotations.ValidationResult True if the specified value is valid, false otherwise. Overrides System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object, System.ComponentModel.DataAnnotations.ValidationContext) Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.BasePacketReader.html": {
    "href": "code/Fibula.Communications.BasePacketReader.html",
    "title": "Class BasePacketReader | Fibula MMO",
    "keywords": "Class BasePacketReader Class that represents the base implementation for all packet readers in all protocols. Inheritance System.Object BasePacketReader DefaultPacketReader AttackPacketReader AutoMoveCancelPacketReader AutoMovePacketReader ChangeModesPacketReader GameLogInPacketReader GameLogOutPacketReader GatewayLogInPacketReader HeartbeatPacketReader HeartbeatResponsePacketReader LookAtPacketReader SpeechPacketReader StopAllActionsPacketReader TurnEastPacketReader TurnNorthPacketReader TurnSouthPacketReader TurnWestPacketReader WalkEastPacketReader WalkNortheastPacketReader WalkNorthPacketReader WalkNorthwestPacketReader WalkSoutheastPacketReader WalkSouthPacketReader WalkSouthwestPacketReader WalkWestPacketReader Implements IPacketReader Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications Assembly : Fibula.Communications.dll Syntax public abstract class BasePacketReader : IPacketReader Constructors | Improve this Doc View Source BasePacketReader(ILogger) Initializes a new instance of the BasePacketReader class. Declaration protected BasePacketReader(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Properties | Improve this Doc View Source Logger Gets the reference to the logger in use. Declaration protected ILogger Logger { get; } Property Value Type Description Serilog.ILogger Methods | Improve this Doc View Source ReadFromMessage(INetworkMessage) Reads a packet from the given INetworkMessage . Declaration public abstract IIncomingPacket ReadFromMessage(INetworkMessage message) Parameters Type Name Description INetworkMessage message The message to read from. Returns Type Description IIncomingPacket The packet read from the message. Implements IPacketReader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.BasePacketWriter.html": {
    "href": "code/Fibula.Communications.BasePacketWriter.html",
    "title": "Class BasePacketWriter | Fibula MMO",
    "keywords": "Class BasePacketWriter Class that represents the base implementation for all packet writers in all protocols. Inheritance System.Object BasePacketWriter AddCreaturePacketWriter AnimatedTextPacketWriter CharacterListPacketWriter ContainerAddItemPacketWriter ContainerClosePacketWriter ContainerOpenPacketWriter ContainerRemoveItemPacketWriter ContainerUpdateItemPacketWriter CreatureHealthPacketWriter CreatureLightPacketWriter CreatureMovedPacketWriter CreatureSkullPacketWriter CreatureSpeechPacketWriter CreatureSpeedChangePacketWriter CreatureTurnedPacketWriter GameServerDisconnectPacketWriter GatewayServerDisconnectPacketWriter HeartbeatPacketWriter HeartbeatResponsePacketWriter MagicEffectPacketWriter MapDescriptionPacketWriter MapPartialDescriptionPacketWriter MessageOfTheDayPacketWriter PlayerCancelAttackPacketWriter PlayerCancelWalkPacketWriter PlayerConditionsPacketWriter PlayerInventoryClearSlotPacketWriter PlayerInventorySetSlotPacketWriter PlayerLoginPacketWriter PlayerSkillsPacketWriter PlayerStatsPacketWriter RemoveAtPositionPacketWriter SquarePacketWriter TextMessagePacketWriter TileUpdatePacketWriter WorldLightPacketWriter Implements IPacketWriter Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications Assembly : Fibula.Communications.dll Syntax public abstract class BasePacketWriter : IPacketWriter Constructors | Improve this Doc View Source BasePacketWriter(ILogger) Initializes a new instance of the BasePacketWriter class. Declaration protected BasePacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Properties | Improve this Doc View Source Logger Gets the reference to the logger in use. Declaration protected ILogger Logger { get; } Property Value Type Description Serilog.ILogger Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public abstract void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Contracts.Abstractions.html": {
    "href": "code/Fibula.Communications.Contracts.Abstractions.html",
    "title": "Namespace Fibula.Communications.Contracts.Abstractions | Fibula MMO",
    "keywords": "Namespace Fibula.Communications.Contracts.Abstractions Interfaces IBytesInfo Interface for information in the form of a bytes array. IConnection Interface for all types of connections. IIncomingPacket Common interface for all incoming packets. IListener Common interface of all listeners. INetworkMessage Interface that represents a network message. IOutboundPacket Interface for all outbound packets. IPacketReader Interface for packet readers. IPacketWriter Interface for packet writers. IProtocol Interface that contains methods to select the appropriate request and response handlers for a given protocol. ISocketConnection Interface for connections. ISocketConnectionFactory Interface that represents a connection factory. ITcpListener Common interface for TCP listeners."
  },
  "code/Fibula.Communications.Contracts.Abstractions.IBytesInfo.html": {
    "href": "code/Fibula.Communications.Contracts.Abstractions.IBytesInfo.html",
    "title": "Interface IBytesInfo | Fibula MMO",
    "keywords": "Interface IBytesInfo Interface for information in the form of a bytes array. Namespace : Fibula.Communications.Contracts.Abstractions Assembly : Fibula.Communications.Contracts.dll Syntax public interface IBytesInfo : IIncomingPacket Properties | Improve this Doc View Source Bytes Gets the information bytes. Declaration byte[] Bytes { get; } Property Value Type Description System.Byte [] Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Contracts.Abstractions.IConnection.html": {
    "href": "code/Fibula.Communications.Contracts.Abstractions.IConnection.html",
    "title": "Interface IConnection | Fibula MMO",
    "keywords": "Interface IConnection Interface for all types of connections. Namespace : Fibula.Communications.Contracts.Abstractions Assembly : Fibula.Communications.Contracts.dll Syntax public interface IConnection Properties | Improve this Doc View Source IsOrphaned Gets a value indicating whether the connection is an orphan. Declaration bool IsOrphaned { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Close() Closes this connection. Declaration void Close() | Improve this Doc View Source Read() Reads the next message in this connection. Declaration void Read() | Improve this Doc View Source Send(IEnumerable<IOutboundPacket>) Sends the packets supplied through this connection. Declaration void Send(IEnumerable<IOutboundPacket> packetsToSend) Parameters Type Name Description System.Collections.Generic.IEnumerable < IOutboundPacket > packetsToSend The packets to send. Events | Improve this Doc View Source Closed Event fired when this connection has been closed. Declaration event ConnectionClosedDelegate Closed Event Type Type Description ConnectionClosedDelegate | Improve this Doc View Source PacketProcessed Event fired right after this connection has proccessed an IIncomingPacket by any subscriber of the PacketReady event. Declaration event ConnectionPacketProccessedDelegate PacketProcessed Event Type Type Description ConnectionPacketProccessedDelegate | Improve this Doc View Source PacketReady Event fired when a IIncomingPacket picked up by this connection is ready to be processed. Declaration event ConnectionPacketReadyDelegate PacketReady Event Type Type Description ConnectionPacketReadyDelegate Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Contracts.Abstractions.IIncomingPacket.html": {
    "href": "code/Fibula.Communications.Contracts.Abstractions.IIncomingPacket.html",
    "title": "Interface IIncomingPacket | Fibula MMO",
    "keywords": "Interface IIncomingPacket Common interface for all incoming packets. Namespace : Fibula.Communications.Contracts.Abstractions Assembly : Fibula.Communications.Contracts.dll Syntax public interface IIncomingPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Contracts.Abstractions.IListener.html": {
    "href": "code/Fibula.Communications.Contracts.Abstractions.IListener.html",
    "title": "Interface IListener | Fibula MMO",
    "keywords": "Interface IListener Common interface of all listeners. Inherited Members Microsoft.Extensions.Hosting.IHostedService.StartAsync(System.Threading.CancellationToken) Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken) Namespace : Fibula.Communications.Contracts.Abstractions Assembly : Fibula.Communications.Contracts.dll Syntax public interface IListener : IHostedService Events | Improve this Doc View Source NewConnection Event fired when a new connection is enstablished. Declaration event NewConnectionDelegate NewConnection Event Type Type Description NewConnectionDelegate Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Contracts.Abstractions.INetworkMessage.html": {
    "href": "code/Fibula.Communications.Contracts.Abstractions.INetworkMessage.html",
    "title": "Interface INetworkMessage | Fibula MMO",
    "keywords": "Interface INetworkMessage Interface that represents a network message. Namespace : Fibula.Communications.Contracts.Abstractions Assembly : Fibula.Communications.Contracts.dll Syntax public interface INetworkMessage Properties | Improve this Doc View Source Buffer Gets the byte buffer for this message. Declaration Span<byte> Buffer { get; } Property Value Type Description System.Span < System.Byte > | Improve this Doc View Source Cursor Gets the message position. Declaration int Cursor { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Length Gets the message length. Declaration int Length { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source AddByte(Byte) Adds a byte to the message. Declaration void AddByte(byte value) Parameters Type Name Description System.Byte value The byte value to add. | Improve this Doc View Source AddBytes(ReadOnlySequence<Byte>) Adds a byte sequence to the message. Declaration void AddBytes(ReadOnlySequence<byte> value) Parameters Type Name Description System.Buffers.ReadOnlySequence < System.Byte > value The bytes span to add. | Improve this Doc View Source AddBytes(ReadOnlySpan<Byte>) Adds a byte range to the message. Declaration void AddBytes(ReadOnlySpan<byte> value) Parameters Type Name Description System.ReadOnlySpan < System.Byte > value The bytes to add. | Improve this Doc View Source AddString(String) Add a string to the message. Declaration void AddString(string value) Parameters Type Name Description System.String value The string value to add. | Improve this Doc View Source AddUInt16(UInt16) Add an unsigned short integer to the message. Declaration void AddUInt16(ushort value) Parameters Type Name Description System.UInt16 value The value to add. | Improve this Doc View Source AddUInt32(UInt32) Add an unsigned integer to the message. Declaration void AddUInt32(uint value) Parameters Type Name Description System.UInt32 value The value to add. | Improve this Doc View Source Copy(Nullable<Int32>) Creates a copy of this message. Declaration INetworkMessage Copy(int? overrideCursor = default(int? )) Parameters Type Name Description System.Nullable < System.Int32 > overrideCursor Optional. A value to override the cursor with. Returns Type Description INetworkMessage The copy of the message. | Improve this Doc View Source GetByte() Reads a byte value from the message. Declaration byte GetByte() Returns Type Description System.Byte The value read. | Improve this Doc View Source GetBytes(Int32) Reads some bytes from the message. Declaration ReadOnlySpan<byte> GetBytes(int count) Parameters Type Name Description System.Int32 count The number of bytes to read. Returns Type Description System.ReadOnlySpan < System.Byte > The bytes read. | Improve this Doc View Source GetString() Reads a string value from the message. Declaration string GetString() Returns Type Description System.String The value read. | Improve this Doc View Source GetUInt16() Reads an unsigned short value from the message. Declaration ushort GetUInt16() Returns Type Description System.UInt16 The value read. | Improve this Doc View Source GetUInt32() Reads an unsigned integer value from the message. Declaration uint GetUInt32() Returns Type Description System.UInt32 The value read. | Improve this Doc View Source PeekByte() Reads a byte value from the message without advancing the read cursor. Declaration byte PeekByte() Returns Type Description System.Byte The value read. | Improve this Doc View Source ReadAsBytesInfo() Reads information sent in the message as bytes. Declaration IBytesInfo ReadAsBytesInfo() Returns Type Description IBytesInfo The information read. | Improve this Doc View Source Reset() Resets the message. Declaration void Reset() | Improve this Doc View Source Resize(Int32, Boolean) Changes the Length of this message and resets its Cursor . Declaration void Resize(int size, bool resetCursor = true) Parameters Type Name Description System.Int32 size The new size of the message. System.Boolean resetCursor Optional. A value indicating whether to reset the cursor in the message to zero. | Improve this Doc View Source SkipBytes(Int32) Moves the read pointer in the message, essentially skipping a number of bytes. Declaration void SkipBytes(int count) Parameters Type Name Description System.Int32 count The number of bytes to skip. Extension Methods NetworkMessageExtensions.XteaDecrypt(INetworkMessage, UInt32[]) NetworkMessageExtensions.XteaEncrypt(INetworkMessage, UInt32[]) NetworkMessageExtensions.PrepareToSend(INetworkMessage, UInt32[]) NetworkMessageExtensions.AddLocation(INetworkMessage, Location) NetworkMessageExtensions.AddCreature(INetworkMessage, ICreature, Boolean, UInt32) NetworkMessageExtensions.AddOutfit(INetworkMessage, Outfit) NetworkMessageExtensions.AddItem(INetworkMessage, IItem) ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Contracts.Abstractions.IOutboundPacket.html": {
    "href": "code/Fibula.Communications.Contracts.Abstractions.IOutboundPacket.html",
    "title": "Interface IOutboundPacket | Fibula MMO",
    "keywords": "Interface IOutboundPacket Interface for all outbound packets. Namespace : Fibula.Communications.Contracts.Abstractions Assembly : Fibula.Communications.Contracts.dll Syntax public interface IOutboundPacket Properties | Improve this Doc View Source PacketType Gets the type of this packet. Declaration byte PacketType { get; } Property Value Type Description System.Byte Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Contracts.Abstractions.IPacketReader.html": {
    "href": "code/Fibula.Communications.Contracts.Abstractions.IPacketReader.html",
    "title": "Interface IPacketReader | Fibula MMO",
    "keywords": "Interface IPacketReader Interface for packet readers. Namespace : Fibula.Communications.Contracts.Abstractions Assembly : Fibula.Communications.Contracts.dll Syntax public interface IPacketReader Methods | Improve this Doc View Source ReadFromMessage(INetworkMessage) Reads a packet from the given INetworkMessage . Declaration IIncomingPacket ReadFromMessage(INetworkMessage message) Parameters Type Name Description INetworkMessage message The message to read from. Returns Type Description IIncomingPacket The packet read from the message. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Contracts.Abstractions.IPacketWriter.html": {
    "href": "code/Fibula.Communications.Contracts.Abstractions.IPacketWriter.html",
    "title": "Interface IPacketWriter | Fibula MMO",
    "keywords": "Interface IPacketWriter Interface for packet writers. Namespace : Fibula.Communications.Contracts.Abstractions Assembly : Fibula.Communications.Contracts.dll Syntax public interface IPacketWriter Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Contracts.Abstractions.IProtocol.html": {
    "href": "code/Fibula.Communications.Contracts.Abstractions.IProtocol.html",
    "title": "Interface IProtocol | Fibula MMO",
    "keywords": "Interface IProtocol Interface that contains methods to select the appropriate request and response handlers for a given protocol. Namespace : Fibula.Communications.Contracts.Abstractions Assembly : Fibula.Communications.Contracts.dll Syntax public interface IProtocol Methods | Improve this Doc View Source RegisterPacketReader(Byte, IPacketReader) Registers a packet reader to this protocol. Declaration void RegisterPacketReader(byte forType, IPacketReader packetReader) Parameters Type Name Description System.Byte forType The type of packet to register for. IPacketReader packetReader The packet reader to register. | Improve this Doc View Source RegisterPacketWriter(Byte, IPacketWriter) Registers a packet writer to this protocol. Declaration void RegisterPacketWriter(byte forType, IPacketWriter packetWriter) Parameters Type Name Description System.Byte forType The type of packet to register for. IPacketWriter packetWriter The packet writer to register. | Improve this Doc View Source SelectPacketReader(Byte) Selects the most appropriate packet reader for the specified type. Declaration IPacketReader SelectPacketReader(byte forPacketType) Parameters Type Name Description System.Byte forPacketType The type of packet. Returns Type Description IPacketReader An instance of an IPacketReader implementation. | Improve this Doc View Source SelectPacketWriter(Byte) Selects the most appropriate packet writer for the specified type. Declaration IPacketWriter SelectPacketWriter(byte forPacketType) Parameters Type Name Description System.Byte forPacketType The type of packet. Returns Type Description IPacketWriter An instance of an IPacketWriter implementation. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Contracts.Abstractions.ISocketConnection.html": {
    "href": "code/Fibula.Communications.Contracts.Abstractions.ISocketConnection.html",
    "title": "Interface ISocketConnection | Fibula MMO",
    "keywords": "Interface ISocketConnection Interface for connections. Inherited Members IConnection.Closed IConnection.PacketProcessed IConnection.PacketReady IConnection.IsOrphaned IConnection.Read() IConnection.Close() IConnection.Send(IEnumerable<IOutboundPacket>) Namespace : Fibula.Communications.Contracts.Abstractions Assembly : Fibula.Communications.Contracts.dll Syntax public interface ISocketConnection : IConnection Properties | Improve this Doc View Source SocketIp Gets the Socket IP address of this connection, if it is open. Declaration string SocketIp { get; } Property Value Type Description System.String Methods | Improve this Doc View Source SetupAuthenticationKey(UInt32[]) Sets up an Xtea key expected to be matched on subsequent messages. Declaration void SetupAuthenticationKey(uint[] xteaKey) Parameters Type Name Description System.UInt32 [] xteaKey The XTea key to use in this connection's communications. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Contracts.Abstractions.ISocketConnectionFactory.html": {
    "href": "code/Fibula.Communications.Contracts.Abstractions.ISocketConnectionFactory.html",
    "title": "Interface ISocketConnectionFactory | Fibula MMO",
    "keywords": "Interface ISocketConnectionFactory Interface that represents a connection factory. Namespace : Fibula.Communications.Contracts.Abstractions Assembly : Fibula.Communications.Contracts.dll Syntax public interface ISocketConnectionFactory Methods | Improve this Doc View Source Create(Socket) Creates a new ISocketConnection for the given socket. Declaration ISocketConnection Create(Socket socket) Parameters Type Name Description System.Net.Sockets.Socket socket The socket of the connection. Returns Type Description ISocketConnection A new instance of a ISocketConnection . Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Contracts.Abstractions.ITcpListener.html": {
    "href": "code/Fibula.Communications.Contracts.Abstractions.ITcpListener.html",
    "title": "Interface ITcpListener | Fibula MMO",
    "keywords": "Interface ITcpListener Common interface for TCP listeners. Namespace : Fibula.Communications.Contracts.Abstractions Assembly : Fibula.Communications.Contracts.dll Syntax public interface ITcpListener Methods | Improve this Doc View Source AcceptSocketAsync() Accepts a pending connection request as an asynchronous operation. Declaration Task<Socket> AcceptSocketAsync() Returns Type Description System.Threading.Tasks.Task < System.Net.Sockets.Socket > A System.Threading.Tasks.Task representing the asynchronous operation. | Improve this Doc View Source Start() Starts listening for internal connection requests. Declaration void Start() | Improve this Doc View Source Stop() Closes the listener. Declaration void Stop() Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Contracts.Delegates.ConnectionClosedDelegate.html": {
    "href": "code/Fibula.Communications.Contracts.Delegates.ConnectionClosedDelegate.html",
    "title": "Delegate ConnectionClosedDelegate | Fibula MMO",
    "keywords": "Delegate ConnectionClosedDelegate Represents a delegate to call when a connection is closed. Namespace : Fibula.Communications.Contracts.Delegates Assembly : Fibula.Communications.Contracts.dll Syntax public delegate void ConnectionClosedDelegate(IConnection connection); Parameters Type Name Description IConnection connection The connection that was closed. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Contracts.Delegates.ConnectionPacketProccessedDelegate.html": {
    "href": "code/Fibula.Communications.Contracts.Delegates.ConnectionPacketProccessedDelegate.html",
    "title": "Delegate ConnectionPacketProccessedDelegate | Fibula MMO",
    "keywords": "Delegate ConnectionPacketProccessedDelegate Represents a delegate to call after a message is processed in a connection. Namespace : Fibula.Communications.Contracts.Delegates Assembly : Fibula.Communications.Contracts.dll Syntax public delegate void ConnectionPacketProccessedDelegate(IConnection connection); Parameters Type Name Description IConnection connection The connection that had the message proccesed. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Contracts.Delegates.ConnectionPacketReadyDelegate.html": {
    "href": "code/Fibula.Communications.Contracts.Delegates.ConnectionPacketReadyDelegate.html",
    "title": "Delegate ConnectionPacketReadyDelegate | Fibula MMO",
    "keywords": "Delegate ConnectionPacketReadyDelegate Represents a delegate to call when a packet is ready to be processed. Namespace : Fibula.Communications.Contracts.Delegates Assembly : Fibula.Communications.Contracts.dll Syntax public delegate IEnumerable<IOutboundPacket> ConnectionPacketReadyDelegate(IConnection connection, IIncomingPacket packet); Parameters Type Name Description IConnection connection The connection from which the packet is was read. IIncomingPacket packet The packet ready to be processed. Returns Type Description System.Collections.Generic.IEnumerable < IOutboundPacket > A collection of IOutboundPacket to respond with as a result of processing the IIncomingPacket . Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Contracts.Delegates.html": {
    "href": "code/Fibula.Communications.Contracts.Delegates.html",
    "title": "Namespace Fibula.Communications.Contracts.Delegates | Fibula MMO",
    "keywords": "Namespace Fibula.Communications.Contracts.Delegates Delegates ConnectionClosedDelegate Represents a delegate to call when a connection is closed. ConnectionPacketProccessedDelegate Represents a delegate to call after a message is processed in a connection. ConnectionPacketReadyDelegate Represents a delegate to call when a packet is ready to be processed. NewConnectionDelegate Represents a delegate to call when a new connection is enstablished."
  },
  "code/Fibula.Communications.Contracts.Delegates.NewConnectionDelegate.html": {
    "href": "code/Fibula.Communications.Contracts.Delegates.NewConnectionDelegate.html",
    "title": "Delegate NewConnectionDelegate | Fibula MMO",
    "keywords": "Delegate NewConnectionDelegate Represents a delegate to call when a new connection is enstablished. Namespace : Fibula.Communications.Contracts.Delegates Assembly : Fibula.Communications.Contracts.dll Syntax public delegate void NewConnectionDelegate(IConnection connection); Parameters Type Name Description IConnection connection The connection that was opened. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Contracts.Enumerations.html": {
    "href": "code/Fibula.Communications.Contracts.Enumerations.html",
    "title": "Namespace Fibula.Communications.Contracts.Enumerations | Fibula MMO",
    "keywords": "Namespace Fibula.Communications.Contracts.Enumerations Enums IncomingGamePacketType Enumerates de different incoming game server packet types. IncomingGatewayPacketType Enumerates the different incoming gateway server packet types. OutgoingGamePacketType Enumerates de different outgoing game server packet types. OutgoingGatewayPacketType Enumerates de different outgoing gateway server packet types."
  },
  "code/Fibula.Communications.Contracts.Enumerations.IncomingGamePacketType.html": {
    "href": "code/Fibula.Communications.Contracts.Enumerations.IncomingGamePacketType.html",
    "title": "Enum IncomingGamePacketType | Fibula MMO",
    "keywords": "Enum IncomingGamePacketType Enumerates de different incoming game server packet types. Namespace : Fibula.Communications.Contracts.Enumerations Assembly : Fibula.Communications.Contracts.dll Syntax public enum IncomingGamePacketType : byte Fields Name Description AddVip Add a VIP. Any Wildcard. Attack Attacking something. AutoMove Move with autowalk. AutoMoveCancel Stop auto-walking. ChangeModes Changing fight or follow modes. ChannelClose Request closing a channel. ChannelCreatePrivate Create a private channel. ChannelExclude Exclude from private channel. ChannelInvite Invite to private channel. ChannelListRequest Request channel list. ChannelOpen Request openning a channel. ChannelOpenDirect Request openning a direct channel. ContainerClose Close a container. ContainerUp Navigate up in a container. FindInContainer Request to find something in a container. Follow Following something. Heartbeat A heartbeat request. HeartbeatResponse A heartbeat response. ItemRotate Rotate an item. ItemUse Use an item. ItemUseOn Use an item on something else. ItemUseThroughBattleWindow Use an item on a creature in the battle window. LogIn Login packet. LogOut Logout packet. LookAt Look at something. LookThroughBattleWindow Look at a creature in the battle window. MoveThing Moving a thing. PartyAcceptInvitation Accept a party invite. PartyInvite Invite to party. PartyKick Kick from party. PartyLeave Leave a party. PartyPassLeadership Pass party leadership. RemoveVip Remove a VIP. ReportBug Bug report. ReportCancel Report cancelled by the player. ReportClose Report closed by a gamemaster. ReportDebugAssertion Debug assertion report. ReportStart Submit a report. ReportViolation Violation report. ResendContainer Request to re-send container information. ResendTile Request to re-send tile information. Speech Speech. StartOutfitChange Request outfit change. StopAllActions Stop all actions. SubmitOutfitChange Submit outfit change. TradeAccept Accepting a trade. TradeCancel Cancel a trade. TradeLook Look within trade window. TradeRequest Trade request. TurnEast Turning east. TurnNorth Turning north. TurnSouth Turning south. TurnWest Turning west. WalkEast Walking east. WalkNorth Walking north. WalkNortheast Walking north east. WalkNorthwest Walking north west. WalkSouth Walking south. WalkSoutheast Walking south east. WalkSouthwest Walking south west. WalkWest Walking west. WindowHouse House window. WindowText Window with text. Extension Methods ObjectExtensions.YieldSingleItem<IncomingGamePacketType>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<IncomingGamePacketType>(String)"
  },
  "code/Fibula.Communications.Contracts.Enumerations.IncomingGatewayPacketType.html": {
    "href": "code/Fibula.Communications.Contracts.Enumerations.IncomingGatewayPacketType.html",
    "title": "Enum IncomingGatewayPacketType | Fibula MMO",
    "keywords": "Enum IncomingGatewayPacketType Enumerates the different incoming gateway server packet types. Namespace : Fibula.Communications.Contracts.Enumerations Assembly : Fibula.Communications.Contracts.dll Syntax public enum IncomingGatewayPacketType : byte Fields Name Description LogInRequest A request to log into the game server. ServerStatus A request for information about the game server. Extension Methods ObjectExtensions.YieldSingleItem<IncomingGatewayPacketType>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<IncomingGatewayPacketType>(String)"
  },
  "code/Fibula.Communications.Contracts.Enumerations.OutgoingGamePacketType.html": {
    "href": "code/Fibula.Communications.Contracts.Enumerations.OutgoingGamePacketType.html",
    "title": "Enum OutgoingGamePacketType | Fibula MMO",
    "keywords": "Enum OutgoingGamePacketType Enumerates de different outgoing game server packet types. Namespace : Fibula.Communications.Contracts.Enumerations Assembly : Fibula.Communications.Contracts.dll Syntax public enum OutgoingGamePacketType : byte Fields Name Description AddKnownCreature Adding a known creature description. AddThing Add a thing. AddUnknownCreature Adding an unknown creature description. AnimatedText An animated text on the map. CancelAttack Cancel an attack target. CancelWalk Cancel walking. ContainerAddItem An item being added to an open container. ContainerClose A container being closed. ContainerOpen A container being open. ContainerRemoveItem An item being removed to an open container. ContainerUpdateItem An item being updated to an open container. CreatureHealth Update creature health. CreatureLight Update creature light. CreatureMoved A creature moving in the map. CreatureOutfit Update creature outfit. CreatureShield Update creature shield. CreatureSkull Update creature skull. CreatureSpeech A creature speech shown on the map. CreatureSpeedChange Update creature speed. Disconnect Disconnection information. FloorChangeDown Going down a floor. FloorChangeUp Going up a floor. GamemasterFlags Gamemaster flags. Heartbeat A heartbeat request. HeartbeatResponse A heartbeat response. HouseWindow Sends a house window. InventoryEmpty Clear an item description in the inventory. InventoryItem An item description in the inventory. MagicEffect A magic effect on the map. MapDescription Full map description. MapSliceEast Partial east map description. MapSliceNorth Partial north map description. MapSliceSouth Partial south map description. MapSliceWest Partial west map description. OutfitWindow Show the outfit window. PlayerConditions Update a player's conditions. PlayerLogin Player login. PlayerModes Updates a player's modes. PlayerSkills Update a player skill. PlayerStats Send a player stats. ProjectileEffect An animated projectile. RemoveThing Remove a thing. Square A square around a creature. TextMessage A direct text message. TextWindow Sends a text window. TileUpdate Tile description. UpdateThing Update a thing. VipDetails The details of a Vip contact. VipOffline Update when a Vip contact goes offline. VipOnline Update when a Vip contact goes online. WaitingList Character placed on the waitlist for the world. WorldLight World light description. Extension Methods ObjectExtensions.YieldSingleItem<OutgoingGamePacketType>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<OutgoingGamePacketType>(String)"
  },
  "code/Fibula.Communications.Contracts.Enumerations.OutgoingGatewayPacketType.html": {
    "href": "code/Fibula.Communications.Contracts.Enumerations.OutgoingGatewayPacketType.html",
    "title": "Enum OutgoingGatewayPacketType | Fibula MMO",
    "keywords": "Enum OutgoingGatewayPacketType Enumerates de different outgoing gateway server packet types. Namespace : Fibula.Communications.Contracts.Enumerations Assembly : Fibula.Communications.Contracts.dll Syntax public enum OutgoingGatewayPacketType : byte Fields Name Description CharacterList A character list. Disconnect Disconnection from the server. MessageOfTheDay The message of the day. Extension Methods ObjectExtensions.YieldSingleItem<OutgoingGatewayPacketType>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<OutgoingGatewayPacketType>(String)"
  },
  "code/Fibula.Communications.DefaultPacketReader.html": {
    "href": "code/Fibula.Communications.DefaultPacketReader.html",
    "title": "Class DefaultPacketReader | Fibula MMO",
    "keywords": "Class DefaultPacketReader Class that represents the default packet reader. Inheritance System.Object BasePacketReader DefaultPacketReader Implements IPacketReader Inherited Members BasePacketReader.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications Assembly : Fibula.Communications.dll Syntax public sealed class DefaultPacketReader : BasePacketReader, IPacketReader Constructors | Improve this Doc View Source DefaultPacketReader(ILogger) Initializes a new instance of the DefaultPacketReader class. Declaration public DefaultPacketReader(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source ReadFromMessage(INetworkMessage) Reads a packet from the given INetworkMessage . Declaration public override IIncomingPacket ReadFromMessage(INetworkMessage message) Parameters Type Name Description INetworkMessage message The message to read from. Returns Type Description IIncomingPacket The packet read from the message. Overrides BasePacketReader.ReadFromMessage(INetworkMessage) Implements IPacketReader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.DefaultRequestData.html": {
    "href": "code/Fibula.Communications.DefaultRequestData.html",
    "title": "Class DefaultRequestData | Fibula MMO",
    "keywords": "Class DefaultRequestData Class that represents the default request data model. Inheritance System.Object DefaultRequestData Implements IBytesInfo IIncomingPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications Assembly : Fibula.Communications.dll Syntax public sealed class DefaultRequestData : IBytesInfo, IIncomingPacket Constructors | Improve this Doc View Source DefaultRequestData(Byte[]) Initializes a new instance of the DefaultRequestData class. Declaration public DefaultRequestData(params byte[] bytes) Parameters Type Name Description System.Byte [] bytes The bytes that represent the packet. | Improve this Doc View Source DefaultRequestData(ReadOnlySpan<Byte>) Initializes a new instance of the DefaultRequestData class. Declaration public DefaultRequestData(ReadOnlySpan<byte> bytes) Parameters Type Name Description System.ReadOnlySpan < System.Byte > bytes The bytes that represent the packet. Properties | Improve this Doc View Source Bytes Gets the collection of bytes that represent the packet. Declaration public byte[] Bytes { get; } Property Value Type Description System.Byte [] Implements IBytesInfo IIncomingPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.html": {
    "href": "code/Fibula.Communications.html",
    "title": "Namespace Fibula.Communications | Fibula MMO",
    "keywords": "Namespace Fibula.Communications Classes BasePacketReader Class that represents the base implementation for all packet readers in all protocols. BasePacketWriter Class that represents the base implementation for all packet writers in all protocols. DefaultPacketReader Class that represents the default packet reader. DefaultRequestData Class that represents the default request data model. NetworkMessage Class that represents a network message."
  },
  "code/Fibula.Communications.Listeners.BaseListener.html": {
    "href": "code/Fibula.Communications.Listeners.BaseListener.html",
    "title": "Class BaseListener | Fibula MMO",
    "keywords": "Class BaseListener Class that is the base implementation for all TCP listeners. Inheritance System.Object BaseListener GameListener<TConnectionFactory> GatewayListener<TConnectionFactory> Implements IListener Microsoft.Extensions.Hosting.IHostedService Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Listeners Assembly : Fibula.Communications.dll Syntax public abstract class BaseListener : IListener, IHostedService Constructors | Improve this Doc View Source BaseListener(ILogger, BaseListenerOptions, ISocketConnectionFactory, IDoSDefender, Boolean, ITcpListener) Initializes a new instance of the BaseListener class. Declaration protected BaseListener(ILogger logger, BaseListenerOptions options, ISocketConnectionFactory socketConnectionFactory, IDoSDefender dosDefender, bool keepConnectionOpen = true, ITcpListener tcpListener = null) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. BaseListenerOptions options The options for this listener. ISocketConnectionFactory socketConnectionFactory A reference to the socekt connection factory in use. IDoSDefender dosDefender A reference to a DoS defender service implementation. System.Boolean keepConnectionOpen Optional. A value indicating whether to maintain the connection open after processing a message in the connection. ITcpListener tcpListener Optional. An intance to use as the TCP listener, useful for unit testing. Properties | Improve this Doc View Source Logger Gets the logger in use. Declaration protected ILogger Logger { get; } Property Value Type Description Serilog.ILogger Methods | Improve this Doc View Source StartAsync(CancellationToken) Begins listening for requests. Declaration public Task StartAsync(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken A token to observe for cancellation. Returns Type Description System.Threading.Tasks.Task A System.Threading.Tasks.Task representing the asynchronous listening operation. | Improve this Doc View Source StopAsync(CancellationToken) Stops the listener. Declaration public Task StopAsync(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken A token to observe for cancellation. Returns Type Description System.Threading.Tasks.Task A System.Threading.Tasks.Task representing the asynchronous operation. Events | Improve this Doc View Source NewConnection Event fired when a new connection is enstablished. Declaration public event NewConnectionDelegate NewConnection Event Type Type Description NewConnectionDelegate Implements IListener Microsoft.Extensions.Hosting.IHostedService Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Listeners.BaseListenerOptions.html": {
    "href": "code/Fibula.Communications.Listeners.BaseListenerOptions.html",
    "title": "Class BaseListenerOptions | Fibula MMO",
    "keywords": "Class BaseListenerOptions Class that represents options for any of the listeners. Inheritance System.Object BaseListenerOptions GameListenerOptions GatewayListenerOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Listeners Assembly : Fibula.Communications.dll Syntax public abstract class BaseListenerOptions Properties | Improve this Doc View Source Port Gets or sets the port to listen to. Declaration public abstract ushort? Port { get; set; } Property Value Type Description System.Nullable < System.UInt16 > Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Listeners.FibulaTcpListener.html": {
    "href": "code/Fibula.Communications.Listeners.FibulaTcpListener.html",
    "title": "Class FibulaTcpListener | Fibula MMO",
    "keywords": "Class FibulaTcpListener Class that represents a TCP listener. Inheritance System.Object FibulaTcpListener Implements ITcpListener Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Listeners Assembly : Fibula.Communications.dll Syntax public class FibulaTcpListener : ITcpListener Constructors | Improve this Doc View Source FibulaTcpListener(IPAddress, UInt16) Initializes a new instance of the FibulaTcpListener class. Declaration public FibulaTcpListener(IPAddress ipAddress, ushort port) Parameters Type Name Description System.Net.IPAddress ipAddress The ip address to listen on. System.UInt16 port The port to listen on. Methods | Improve this Doc View Source AcceptSocketAsync() Accepts a pending connection request as an asynchronous operation. Declaration public Task<Socket> AcceptSocketAsync() Returns Type Description System.Threading.Tasks.Task < System.Net.Sockets.Socket > A System.Threading.Tasks.Task representing the asynchronous operation. | Improve this Doc View Source Start() Starts listening for internal connection requests. Declaration public void Start() | Improve this Doc View Source Stop() Closes the listener. Declaration public void Stop() Implements ITcpListener Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Listeners.GameListener-1.html": {
    "href": "code/Fibula.Communications.Listeners.GameListener-1.html",
    "title": "Class GameListener<TConnectionFactory> | Fibula MMO",
    "keywords": "Class GameListener<TConnectionFactory> Class that extends the standard BaseListener for a game listener. Inheritance System.Object BaseListener GameListener<TConnectionFactory> Implements IListener Microsoft.Extensions.Hosting.IHostedService Inherited Members BaseListener.NewConnection BaseListener.Logger BaseListener.StartAsync(CancellationToken) BaseListener.StopAsync(CancellationToken) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Listeners Assembly : Fibula.Communications.dll Syntax public class GameListener<TConnectionFactory> : BaseListener, IListener, IHostedService where TConnectionFactory : class, ISocketConnectionFactory Type Parameters Name Description TConnectionFactory The type of connection factory to use in the listener. Constructors | Improve this Doc View Source GameListener(ILogger, IOptions<GameListenerOptions>, TConnectionFactory, IDoSDefender) Initializes a new instance of the GameListener<TConnectionFactory> class. Declaration public GameListener(ILogger logger, IOptions<GameListenerOptions> options, TConnectionFactory connectionFactory, IDoSDefender dosDefender) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Microsoft.Extensions.Options.IOptions < GameListenerOptions > options The options for this listener. TConnectionFactory connectionFactory A reference to the connection factory in play here. IDoSDefender dosDefender A reference to the DoS defender service implementation. | Improve this Doc View Source GameListener(ILogger, IOptions<GameListenerOptions>, TConnectionFactory, IDoSDefender, ITcpListener) Initializes a new instance of the GameListener<TConnectionFactory> class. Declaration public GameListener(ILogger logger, IOptions<GameListenerOptions> options, TConnectionFactory connectionFactory, IDoSDefender dosDefender, ITcpListener tcpListener) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Microsoft.Extensions.Options.IOptions < GameListenerOptions > options The options for this listener. TConnectionFactory connectionFactory A reference to the connection factory in play here. IDoSDefender dosDefender A reference to the DoS defender service implementation. ITcpListener tcpListener Optional. An intance to use as the TCP listener, useful for unit testing. Implements IListener Microsoft.Extensions.Hosting.IHostedService Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Listeners.GameListenerOptions.html": {
    "href": "code/Fibula.Communications.Listeners.GameListenerOptions.html",
    "title": "Class GameListenerOptions | Fibula MMO",
    "keywords": "Class GameListenerOptions Class that represents options for the game listener. Inheritance System.Object BaseListenerOptions GameListenerOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Listeners Assembly : Fibula.Communications.dll Syntax public class GameListenerOptions : BaseListenerOptions Properties | Improve this Doc View Source Port Gets or sets the port to listen to. Declaration [Required(ErrorMessage = \"A port for the game listener must be speficied.\")] public override ushort? Port { get; set; } Property Value Type Description System.Nullable < System.UInt16 > Overrides BaseListenerOptions.Port Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Listeners.GatewayListener-1.html": {
    "href": "code/Fibula.Communications.Listeners.GatewayListener-1.html",
    "title": "Class GatewayListener<TConnectionFactory> | Fibula MMO",
    "keywords": "Class GatewayListener<TConnectionFactory> Class that extends the standard BaseListener for the gateway protocol. Inheritance System.Object BaseListener GatewayListener<TConnectionFactory> Implements IListener Microsoft.Extensions.Hosting.IHostedService Inherited Members BaseListener.NewConnection BaseListener.Logger BaseListener.StartAsync(CancellationToken) BaseListener.StopAsync(CancellationToken) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Listeners Assembly : Fibula.Communications.dll Syntax public class GatewayListener<TConnectionFactory> : BaseListener, IListener, IHostedService where TConnectionFactory : class, ISocketConnectionFactory Type Parameters Name Description TConnectionFactory The type of connection factory to use in the listener. Constructors | Improve this Doc View Source GatewayListener(ILogger, IOptions<GatewayListenerOptions>, TConnectionFactory, IDoSDefender) Initializes a new instance of the GatewayListener<TConnectionFactory> class. Declaration public GatewayListener(ILogger logger, IOptions<GatewayListenerOptions> options, TConnectionFactory connectionFactory, IDoSDefender dosDefender) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Microsoft.Extensions.Options.IOptions < GatewayListenerOptions > options The options for this listener. TConnectionFactory connectionFactory A reference to the connection factory in play here. IDoSDefender dosDefender A reference to the DoS defender service implementation. | Improve this Doc View Source GatewayListener(ILogger, IOptions<GatewayListenerOptions>, TConnectionFactory, IDoSDefender, ITcpListener) Initializes a new instance of the GatewayListener<TConnectionFactory> class. Declaration public GatewayListener(ILogger logger, IOptions<GatewayListenerOptions> options, TConnectionFactory connectionFactory, IDoSDefender dosDefender, ITcpListener tcpListener) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Microsoft.Extensions.Options.IOptions < GatewayListenerOptions > options The options for this listener. TConnectionFactory connectionFactory A reference to the connection factory in play here. IDoSDefender dosDefender A reference to the DoS defender service implementation. ITcpListener tcpListener Optional. An intance to use as the TCP listener, useful for unit testing. Implements IListener Microsoft.Extensions.Hosting.IHostedService Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Listeners.GatewayListenerOptions.html": {
    "href": "code/Fibula.Communications.Listeners.GatewayListenerOptions.html",
    "title": "Class GatewayListenerOptions | Fibula MMO",
    "keywords": "Class GatewayListenerOptions Class that represents options for the gateway listener. Inheritance System.Object BaseListenerOptions GatewayListenerOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Listeners Assembly : Fibula.Communications.dll Syntax public class GatewayListenerOptions : BaseListenerOptions Properties | Improve this Doc View Source Port Gets or sets the port to listen to. Declaration [Required(ErrorMessage = \"A port for the gateway listener must be speficied.\")] public override ushort? Port { get; set; } Property Value Type Description System.Nullable < System.UInt16 > Overrides BaseListenerOptions.Port Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Listeners.html": {
    "href": "code/Fibula.Communications.Listeners.html",
    "title": "Namespace Fibula.Communications.Listeners | Fibula MMO",
    "keywords": "Namespace Fibula.Communications.Listeners Classes BaseListener Class that is the base implementation for all TCP listeners. BaseListenerOptions Class that represents options for any of the listeners. FibulaTcpListener Class that represents a TCP listener. GameListener<TConnectionFactory> Class that extends the standard BaseListener for a game listener. GameListenerOptions Class that represents options for the game listener. GatewayListener<TConnectionFactory> Class that extends the standard BaseListener for the gateway protocol. GatewayListenerOptions Class that represents options for the gateway listener."
  },
  "code/Fibula.Communications.Listeners.Tests.GameListenerTests.html": {
    "href": "code/Fibula.Communications.Listeners.Tests.GameListenerTests.html",
    "title": "Class GameListenerTests | Fibula MMO",
    "keywords": "Class GameListenerTests Tests for the GameListener<TConnectionFactory> class. Inheritance System.Object GameListenerTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Listeners.Tests Assembly : Fibula.Communications.Tests.dll Syntax [TestClass] public class GameListenerTests Methods | Improve this Doc View Source GameListener_CallsNewConnectionEvent() Checks that the GameListener<TConnectionFactory> invokes the NewConnection event. Declaration [TestMethod] public Task GameListener_CallsNewConnectionEvent() Returns Type Description System.Threading.Tasks.Task A System.Threading.Tasks.Task representing the asynchronous unit test. | Improve this Doc View Source GameListener_Initialization() Checks GameListener<TConnectionFactory> initialization. Declaration [TestMethod] public void GameListener_Initialization() | Improve this Doc View Source GameListener_OptionsValidation() Checks the GameListener<TConnectionFactory> 's options validation. Declaration [TestMethod] public void GameListener_OptionsValidation() Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Listeners.Tests.GatewayListenerTests.html": {
    "href": "code/Fibula.Communications.Listeners.Tests.GatewayListenerTests.html",
    "title": "Class GatewayListenerTests | Fibula MMO",
    "keywords": "Class GatewayListenerTests Tests for the GatewayListener<TConnectionFactory> class. Inheritance System.Object GatewayListenerTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Listeners.Tests Assembly : Fibula.Communications.Tests.dll Syntax [TestClass] public class GatewayListenerTests Methods | Improve this Doc View Source GatewayListener_CallsNewConnectionEvent() Checks that the GatewayListener<TConnectionFactory> invokes the NewConnection event. Declaration [TestMethod] public Task GatewayListener_CallsNewConnectionEvent() Returns Type Description System.Threading.Tasks.Task A System.Threading.Tasks.Task representing the asynchronous unit test. | Improve this Doc View Source GatewayListener_Initialization() Checks GatewayListener<TConnectionFactory> initialization. Declaration [TestMethod] public void GatewayListener_Initialization() | Improve this Doc View Source GatewayListener_OptionsValidation() Checks the GatewayListener<TConnectionFactory> 's options validation. Declaration [TestMethod] public void GatewayListener_OptionsValidation() Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Listeners.Tests.html": {
    "href": "code/Fibula.Communications.Listeners.Tests.html",
    "title": "Namespace Fibula.Communications.Listeners.Tests | Fibula MMO",
    "keywords": "Namespace Fibula.Communications.Listeners.Tests Classes GameListenerTests Tests for the GameListener<TConnectionFactory> class. GatewayListenerTests Tests for the GatewayListener<TConnectionFactory> class."
  },
  "code/Fibula.Communications.NetworkMessage.html": {
    "href": "code/Fibula.Communications.NetworkMessage.html",
    "title": "Class NetworkMessage | Fibula MMO",
    "keywords": "Class NetworkMessage Class that represents a network message. Inheritance System.Object NetworkMessage Implements INetworkMessage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications Assembly : Fibula.Communications.dll Syntax public class NetworkMessage : INetworkMessage Constructors | Improve this Doc View Source NetworkMessage(Boolean) Initializes a new instance of the NetworkMessage class. Declaration public NetworkMessage(bool isOutbound = true) Parameters Type Name Description System.Boolean isOutbound A value indicating whether this message is an outboud message. Fields | Improve this Doc View Source BufferSize The size of the message's buffer. Declaration public const int BufferSize = 16394 Field Value Type Description System.Int32 | Improve this Doc View Source DefaultStartingIndex The default index at which the message's content starts. Declaration public const int DefaultStartingIndex = 2 Field Value Type Description System.Int32 | Improve this Doc View Source OutboundMessageStartingIndex The number of reserved bytes in the network message for outbound messages. Declaration public const int OutboundMessageStartingIndex = 4 Field Value Type Description System.Int32 Properties | Improve this Doc View Source Buffer Gets the buffer of this message. Declaration public Span<byte> Buffer { get; } Property Value Type Description System.Span < System.Byte > | Improve this Doc View Source Cursor Gets the position that the message will read from next. Declaration public int Cursor { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Length Gets the length of the message. Declaration public int Length { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source AddByte(Byte) Adds a byte to the message. Declaration public void AddByte(byte value) Parameters Type Name Description System.Byte value The byte value to add. | Improve this Doc View Source AddBytes(ReadOnlySequence<Byte>) Adds a byte sequence to the message. Declaration public void AddBytes(ReadOnlySequence<byte> value) Parameters Type Name Description System.Buffers.ReadOnlySequence < System.Byte > value The bytes to add. | Improve this Doc View Source AddBytes(ReadOnlySpan<Byte>) Adds a byte range to the message. Declaration public void AddBytes(ReadOnlySpan<byte> value) Parameters Type Name Description System.ReadOnlySpan < System.Byte > value The bytes to add. | Improve this Doc View Source AddString(String) Add a string to the message. Declaration public void AddString(string value) Parameters Type Name Description System.String value The string value to add. | Improve this Doc View Source AddUInt16(UInt16) Add an unsigned short integer to the message. Declaration public void AddUInt16(ushort value) Parameters Type Name Description System.UInt16 value The value to add. | Improve this Doc View Source AddUInt32(UInt32) Add an unsigned integer to the message. Declaration public void AddUInt32(uint value) Parameters Type Name Description System.UInt32 value The value to add. | Improve this Doc View Source Copy(Nullable<Int32>) Creates a copy of this message. Declaration public INetworkMessage Copy(int? overrideCursor = default(int? )) Parameters Type Name Description System.Nullable < System.Int32 > overrideCursor Optional. A value to override the cursor with. Returns Type Description INetworkMessage The copy of the message. | Improve this Doc View Source GetByte() Reads a byte value from the message and advances the cursor. Declaration public byte GetByte() Returns Type Description System.Byte The value read. | Improve this Doc View Source GetBytes(Int32) Reads some bytes from the message. Declaration public ReadOnlySpan<byte> GetBytes(int count) Parameters Type Name Description System.Int32 count The number of bytes to read. Returns Type Description System.ReadOnlySpan < System.Byte > The bytes read. | Improve this Doc View Source GetString() Reads a string value from the message. Declaration public string GetString() Returns Type Description System.String The value read. | Improve this Doc View Source GetUInt16() Reads an unsigned short value from the message. Declaration public ushort GetUInt16() Returns Type Description System.UInt16 The value read. | Improve this Doc View Source GetUInt32() Reads an unsigned integer value from the message. Declaration public uint GetUInt32() Returns Type Description System.UInt32 The value read. | Improve this Doc View Source PeekByte() Reads a byte value from the message without advancing the read cursor. Declaration public byte PeekByte() Returns Type Description System.Byte The value read. | Improve this Doc View Source ReadAsBytesInfo() Reads information sent in the message as it's bytes representation. Declaration public IBytesInfo ReadAsBytesInfo() Returns Type Description IBytesInfo The default formatted information. | Improve this Doc View Source Reset() Resets the message. Declaration public void Reset() | Improve this Doc View Source Resize(Int32, Boolean) Changes the Length of this message and resets it's Cursor . Declaration public void Resize(int size, bool resetCursor = true) Parameters Type Name Description System.Int32 size The new size of the message. System.Boolean resetCursor Optional. A value indicating whether to reset the cursor in the message to zero. | Improve this Doc View Source SkipBytes(Int32) Moves the read pointer in the message, essentially skipping a number of bytes. Declaration public void SkipBytes(int count) Parameters Type Name Description System.Int32 count The number of bytes to skip. Implements INetworkMessage Extension Methods NetworkMessageExtensions.XteaDecrypt(INetworkMessage, UInt32[]) NetworkMessageExtensions.XteaEncrypt(INetworkMessage, UInt32[]) NetworkMessageExtensions.PrepareToSend(INetworkMessage, UInt32[]) NetworkMessageExtensions.AddLocation(INetworkMessage, Location) NetworkMessageExtensions.AddCreature(INetworkMessage, ICreature, Boolean, UInt32) NetworkMessageExtensions.AddOutfit(INetworkMessage, Outfit) NetworkMessageExtensions.AddItem(INetworkMessage, IItem) ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Contracts.Abstractions.CharacterInfo.html": {
    "href": "code/Fibula.Communications.Packets.Contracts.Abstractions.CharacterInfo.html",
    "title": "Class CharacterInfo | Fibula MMO",
    "keywords": "Class CharacterInfo Provides the model for character information. Inheritance System.Object CharacterInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Contracts.Abstractions Assembly : Fibula.Communications.Packets.Contracts.dll Syntax public sealed class CharacterInfo Properties | Improve this Doc View Source Ip Gets or sets the IP address bytes that the client must use to connect if loging in with this character. Declaration public byte[] Ip { get; set; } Property Value Type Description System.Byte [] | Improve this Doc View Source Name Gets or sets the name of the character. Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Port Gets or sets the port that the client must use to connect if loging in with this character. Declaration public ushort Port { get; set; } Property Value Type Description System.UInt16 | Improve this Doc View Source World Gets or sets the name of the world where this character lives. Declaration public string World { get; set; } Property Value Type Description System.String Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Contracts.Abstractions.html": {
    "href": "code/Fibula.Communications.Packets.Contracts.Abstractions.html",
    "title": "Namespace Fibula.Communications.Packets.Contracts.Abstractions | Fibula MMO",
    "keywords": "Namespace Fibula.Communications.Packets.Contracts.Abstractions Classes CharacterInfo Provides the model for character information. Interfaces IActionWithoutContentInfo Interface for actions without any content to read. IAttackInfo Interface that represents attack information. IAutoMovementInfo Interface that represents the auto movement information. IGameLogInInfo Interface for login information supplied on a game server login request. IGatewayLoginInfo Interface for the login information supplied on a gateway server login request. ILookAtInfo Interface for a look at information. IModesInfo Interface for fight and chase modes information. ISpeechInfo Interface for speech information. IThingMoveInfo Interface for a thing movement information. ITurnOnDemandInfo Interface for turning on demand information supplied on a game server request. IWalkOnDemandInfo Interface for walking on demand information supplied on a game server request."
  },
  "code/Fibula.Communications.Packets.Contracts.Abstractions.IActionWithoutContentInfo.html": {
    "href": "code/Fibula.Communications.Packets.Contracts.Abstractions.IActionWithoutContentInfo.html",
    "title": "Interface IActionWithoutContentInfo | Fibula MMO",
    "keywords": "Interface IActionWithoutContentInfo Interface for actions without any content to read. Namespace : Fibula.Communications.Packets.Contracts.Abstractions Assembly : Fibula.Communications.Packets.Contracts.dll Syntax public interface IActionWithoutContentInfo : IIncomingPacket Properties | Improve this Doc View Source Action Gets the action to do. Declaration IncomingGamePacketType Action { get; } Property Value Type Description IncomingGamePacketType Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Contracts.Abstractions.IAttackInfo.html": {
    "href": "code/Fibula.Communications.Packets.Contracts.Abstractions.IAttackInfo.html",
    "title": "Interface IAttackInfo | Fibula MMO",
    "keywords": "Interface IAttackInfo Interface that represents attack information. Namespace : Fibula.Communications.Packets.Contracts.Abstractions Assembly : Fibula.Communications.Packets.Contracts.dll Syntax public interface IAttackInfo : IIncomingPacket Properties | Improve this Doc View Source TargetCreatureId Gets the id of the creature being attacked. Declaration uint TargetCreatureId { get; } Property Value Type Description System.UInt32 Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Contracts.Abstractions.IAutoMovementInfo.html": {
    "href": "code/Fibula.Communications.Packets.Contracts.Abstractions.IAutoMovementInfo.html",
    "title": "Interface IAutoMovementInfo | Fibula MMO",
    "keywords": "Interface IAutoMovementInfo Interface that represents the auto movement information. Namespace : Fibula.Communications.Packets.Contracts.Abstractions Assembly : Fibula.Communications.Packets.Contracts.dll Syntax public interface IAutoMovementInfo : IIncomingPacket Properties | Improve this Doc View Source Directions Gets the movement directions. Declaration Direction[] Directions { get; } Property Value Type Description Direction [] Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Contracts.Abstractions.IGameLogInInfo.html": {
    "href": "code/Fibula.Communications.Packets.Contracts.Abstractions.IGameLogInInfo.html",
    "title": "Interface IGameLogInInfo | Fibula MMO",
    "keywords": "Interface IGameLogInInfo Interface for login information supplied on a game server login request. Namespace : Fibula.Communications.Packets.Contracts.Abstractions Assembly : Fibula.Communications.Packets.Contracts.dll Syntax public interface IGameLogInInfo : IIncomingPacket Properties | Improve this Doc View Source AccountNumber Gets the account number of the character. Declaration uint AccountNumber { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source CharacterName Gets the character's name. Declaration string CharacterName { get; } Property Value Type Description System.String | Improve this Doc View Source ClientOs Gets the operating system of the character's client. Declaration ushort ClientOs { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source ClientVersion Gets the version of the character's client. Declaration ushort ClientVersion { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source IsGamemaster Gets a value indicating whether this character is a gamemaster. Declaration bool IsGamemaster { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Password Gets the password used to log in. Declaration string Password { get; } Property Value Type Description System.String | Improve this Doc View Source XteaKey Gets the XTEA key to use in all further communications with this client. Declaration uint[] XteaKey { get; } Property Value Type Description System.UInt32 [] Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Contracts.Abstractions.IGatewayLoginInfo.html": {
    "href": "code/Fibula.Communications.Packets.Contracts.Abstractions.IGatewayLoginInfo.html",
    "title": "Interface IGatewayLoginInfo | Fibula MMO",
    "keywords": "Interface IGatewayLoginInfo Interface for the login information supplied on a gateway server login request. Namespace : Fibula.Communications.Packets.Contracts.Abstractions Assembly : Fibula.Communications.Packets.Contracts.dll Syntax public interface IGatewayLoginInfo : IIncomingPacket Properties | Improve this Doc View Source AccountNumber Gets the account number. Declaration uint AccountNumber { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source ClientOs Gets the operating system of the client attempting to connect. Declaration ushort ClientOs { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source ClientVersion Gets the version of the client attempting to connect. Declaration int ClientVersion { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Password Gets the account password. Declaration string Password { get; } Property Value Type Description System.String | Improve this Doc View Source XteaKey Gets the XTea encryption bytes. Declaration uint[] XteaKey { get; } Property Value Type Description System.UInt32 [] Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Contracts.Abstractions.ILookAtInfo.html": {
    "href": "code/Fibula.Communications.Packets.Contracts.Abstractions.ILookAtInfo.html",
    "title": "Interface ILookAtInfo | Fibula MMO",
    "keywords": "Interface ILookAtInfo Interface for a look at information. Namespace : Fibula.Communications.Packets.Contracts.Abstractions Assembly : Fibula.Communications.Packets.Contracts.dll Syntax public interface ILookAtInfo : IIncomingPacket Properties | Improve this Doc View Source Location Gets the location we're looking at. Declaration Location Location { get; } Property Value Type Description Location | Improve this Doc View Source StackPosition Gets the stack position we're looking at. Declaration byte StackPosition { get; } Property Value Type Description System.Byte | Improve this Doc View Source ThingId Gets the id of the thing. Declaration ushort ThingId { get; } Property Value Type Description System.UInt16 Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Contracts.Abstractions.IModesInfo.html": {
    "href": "code/Fibula.Communications.Packets.Contracts.Abstractions.IModesInfo.html",
    "title": "Interface IModesInfo | Fibula MMO",
    "keywords": "Interface IModesInfo Interface for fight and chase modes information. Namespace : Fibula.Communications.Packets.Contracts.Abstractions Assembly : Fibula.Communications.Packets.Contracts.dll Syntax public interface IModesInfo : IIncomingPacket Properties | Improve this Doc View Source ChaseMode Gets the chase mode. Declaration ChaseMode ChaseMode { get; } Property Value Type Description ChaseMode | Improve this Doc View Source FightMode Gets the fight mode. Declaration FightMode FightMode { get; } Property Value Type Description FightMode | Improve this Doc View Source SafeModeOn Gets a value indicating whether the safe mode is on. Declaration bool SafeModeOn { get; } Property Value Type Description System.Boolean Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Contracts.Abstractions.ISpeechInfo.html": {
    "href": "code/Fibula.Communications.Packets.Contracts.Abstractions.ISpeechInfo.html",
    "title": "Interface ISpeechInfo | Fibula MMO",
    "keywords": "Interface ISpeechInfo Interface for speech information. Namespace : Fibula.Communications.Packets.Contracts.Abstractions Assembly : Fibula.Communications.Packets.Contracts.dll Syntax public interface ISpeechInfo : IIncomingPacket Properties | Improve this Doc View Source ChannelType Gets the channel type. Declaration ChatChannelType ChannelType { get; } Property Value Type Description ChatChannelType | Improve this Doc View Source Content Gets the content of the message. Declaration string Content { get; } Property Value Type Description System.String | Improve this Doc View Source Receiver Gets the receiver of the message. Declaration string Receiver { get; } Property Value Type Description System.String | Improve this Doc View Source SpeechType Gets the speech type. Declaration SpeechType SpeechType { get; } Property Value Type Description SpeechType Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Contracts.Abstractions.IThingMoveInfo.html": {
    "href": "code/Fibula.Communications.Packets.Contracts.Abstractions.IThingMoveInfo.html",
    "title": "Interface IThingMoveInfo | Fibula MMO",
    "keywords": "Interface IThingMoveInfo Interface for a thing movement information. Namespace : Fibula.Communications.Packets.Contracts.Abstractions Assembly : Fibula.Communications.Packets.Contracts.dll Syntax public interface IThingMoveInfo : IIncomingPacket Properties | Improve this Doc View Source Amount Gets the amount of the thing being moved. Declaration byte Amount { get; } Property Value Type Description System.Byte | Improve this Doc View Source FromLocation Gets the location from which the thing is being moved. Declaration Location FromLocation { get; } Property Value Type Description Location | Improve this Doc View Source FromStackPos Gets the position in the stack at the location from which the thing is being moved. Declaration byte FromStackPos { get; } Property Value Type Description System.Byte | Improve this Doc View Source ThingClientId Gets the id of the thing, as seen by the client. Declaration ushort ThingClientId { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source ToLocation Gets the location to which the thing is being moved. Declaration Location ToLocation { get; } Property Value Type Description Location Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Contracts.Abstractions.ITurnOnDemandInfo.html": {
    "href": "code/Fibula.Communications.Packets.Contracts.Abstractions.ITurnOnDemandInfo.html",
    "title": "Interface ITurnOnDemandInfo | Fibula MMO",
    "keywords": "Interface ITurnOnDemandInfo Interface for turning on demand information supplied on a game server request. Namespace : Fibula.Communications.Packets.Contracts.Abstractions Assembly : Fibula.Communications.Packets.Contracts.dll Syntax public interface ITurnOnDemandInfo : IIncomingPacket Properties | Improve this Doc View Source Direction Gets the direction to turn to. Declaration Direction Direction { get; } Property Value Type Description Direction Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Contracts.Abstractions.IWalkOnDemandInfo.html": {
    "href": "code/Fibula.Communications.Packets.Contracts.Abstractions.IWalkOnDemandInfo.html",
    "title": "Interface IWalkOnDemandInfo | Fibula MMO",
    "keywords": "Interface IWalkOnDemandInfo Interface for walking on demand information supplied on a game server request. Namespace : Fibula.Communications.Packets.Contracts.Abstractions Assembly : Fibula.Communications.Packets.Contracts.dll Syntax public interface IWalkOnDemandInfo : IIncomingPacket Properties | Improve this Doc View Source Direction Gets the direction to walk to. Declaration Direction Direction { get; } Property Value Type Description Direction Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Incoming.AttackPacket.html": {
    "href": "code/Fibula.Communications.Packets.Incoming.AttackPacket.html",
    "title": "Class AttackPacket | Fibula MMO",
    "keywords": "Class AttackPacket Class that represents and attack packet. Inheritance System.Object AttackPacket Implements IAttackInfo IIncomingPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Incoming Assembly : Fibula.Communications.Packets.dll Syntax public class AttackPacket : IAttackInfo, IIncomingPacket Constructors | Improve this Doc View Source AttackPacket(UInt32) Initializes a new instance of the AttackPacket class. Declaration public AttackPacket(uint targetCreatureId) Parameters Type Name Description System.UInt32 targetCreatureId The id of the creature being attacked. Properties | Improve this Doc View Source TargetCreatureId Gets the target creature's id. Declaration public uint TargetCreatureId { get; } Property Value Type Description System.UInt32 Implements IAttackInfo IIncomingPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Incoming.AutoMoveCancelPacket.html": {
    "href": "code/Fibula.Communications.Packets.Incoming.AutoMoveCancelPacket.html",
    "title": "Class AutoMoveCancelPacket | Fibula MMO",
    "keywords": "Class AutoMoveCancelPacket Class that represents an auto movement cancellation packet routed to the game server. Inheritance System.Object AutoMoveCancelPacket Implements IActionWithoutContentInfo IIncomingPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Incoming Assembly : Fibula.Communications.Packets.dll Syntax public sealed class AutoMoveCancelPacket : IActionWithoutContentInfo, IIncomingPacket Properties | Improve this Doc View Source Action Gets the action to do. Declaration public IncomingGamePacketType Action { get; } Property Value Type Description IncomingGamePacketType Implements IActionWithoutContentInfo IIncomingPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Incoming.AutoMovePacket.html": {
    "href": "code/Fibula.Communications.Packets.Incoming.AutoMovePacket.html",
    "title": "Class AutoMovePacket | Fibula MMO",
    "keywords": "Class AutoMovePacket Class that represents an auto movement packet. Inheritance System.Object AutoMovePacket Implements IAutoMovementInfo IIncomingPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Incoming Assembly : Fibula.Communications.Packets.dll Syntax public class AutoMovePacket : IAutoMovementInfo, IIncomingPacket Constructors | Improve this Doc View Source AutoMovePacket(Direction[]) Initializes a new instance of the AutoMovePacket class. Declaration public AutoMovePacket(params Direction[] directions) Parameters Type Name Description Direction [] directions The directions to follow, in order. Properties | Improve this Doc View Source Directions Gets the movement directions. Declaration public Direction[] Directions { get; } Property Value Type Description Direction [] Implements IAutoMovementInfo IIncomingPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Incoming.DefaultReadPacket.html": {
    "href": "code/Fibula.Communications.Packets.Incoming.DefaultReadPacket.html",
    "title": "Class DefaultReadPacket | Fibula MMO",
    "keywords": "Class DefaultReadPacket Class that represents the default packet. Inheritance System.Object DefaultReadPacket Implements IBytesInfo IIncomingPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Incoming Assembly : Fibula.Communications.Packets.dll Syntax public sealed class DefaultReadPacket : IBytesInfo, IIncomingPacket Constructors | Improve this Doc View Source DefaultReadPacket(Byte[]) Initializes a new instance of the DefaultReadPacket class. Declaration public DefaultReadPacket(params byte[] bytes) Parameters Type Name Description System.Byte [] bytes The bytes that represent the packet. Properties | Improve this Doc View Source Bytes Gets the collection of bytes that represent the packet. Declaration public byte[] Bytes { get; } Property Value Type Description System.Byte [] Implements IBytesInfo IIncomingPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Incoming.GameLogInPacket.html": {
    "href": "code/Fibula.Communications.Packets.Incoming.GameLogInPacket.html",
    "title": "Class GameLogInPacket | Fibula MMO",
    "keywords": "Class GameLogInPacket Class that represents a login packet routed to the game server. Inheritance System.Object GameLogInPacket Implements IGameLogInInfo IIncomingPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Incoming Assembly : Fibula.Communications.Packets.dll Syntax public sealed class GameLogInPacket : IGameLogInInfo, IIncomingPacket Constructors | Improve this Doc View Source GameLogInPacket(UInt32[], UInt16, UInt16, Boolean, UInt32, String, String) Initializes a new instance of the GameLogInPacket class. Declaration public GameLogInPacket(uint[] xteaKey, ushort operatingSystem, ushort version, bool isGamemaster, uint accountNumber, string characterName, string password) Parameters Type Name Description System.UInt32 [] xteaKey The XTEA key to use in all further communications with this client. System.UInt16 operatingSystem The operating system of the character's client. System.UInt16 version The version of the character's client. System.Boolean isGamemaster A value indicating whether this character is a gamemaster. System.UInt32 accountNumber The account number of this character. System.String characterName The character name. System.String password The password used. Properties | Improve this Doc View Source AccountNumber Gets the account number of the character. Declaration public uint AccountNumber { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source CharacterName Gets the character's name. Declaration public string CharacterName { get; } Property Value Type Description System.String | Improve this Doc View Source ClientOs Gets the operating system of the character's client. Declaration public ushort ClientOs { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source ClientVersion Gets the version of the character's client. Declaration public ushort ClientVersion { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source IsGamemaster Gets a value indicating whether this character is a gamemaster. Declaration public bool IsGamemaster { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Password Gets the password used to log in. Declaration public string Password { get; } Property Value Type Description System.String | Improve this Doc View Source XteaKey Gets the XTEA key to use in all further communications with this client. Declaration public uint[] XteaKey { get; } Property Value Type Description System.UInt32 [] Implements IGameLogInInfo IIncomingPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Incoming.GameLogOutPacket.html": {
    "href": "code/Fibula.Communications.Packets.Incoming.GameLogOutPacket.html",
    "title": "Class GameLogOutPacket | Fibula MMO",
    "keywords": "Class GameLogOutPacket Class that represents a logout packet routed to the game server. Inheritance System.Object GameLogOutPacket Implements IActionWithoutContentInfo IIncomingPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Incoming Assembly : Fibula.Communications.Packets.dll Syntax public sealed class GameLogOutPacket : IActionWithoutContentInfo, IIncomingPacket Properties | Improve this Doc View Source Action Gets the action to do. Declaration public IncomingGamePacketType Action { get; } Property Value Type Description IncomingGamePacketType Implements IActionWithoutContentInfo IIncomingPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Incoming.GatewayLogInPacket.html": {
    "href": "code/Fibula.Communications.Packets.Incoming.GatewayLogInPacket.html",
    "title": "Class GatewayLogInPacket | Fibula MMO",
    "keywords": "Class GatewayLogInPacket Class that represents a login packet routed to the gateway server. Inheritance System.Object GatewayLogInPacket Implements IGatewayLoginInfo IIncomingPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Incoming Assembly : Fibula.Communications.Packets.dll Syntax public sealed class GatewayLogInPacket : IGatewayLoginInfo, IIncomingPacket Constructors | Improve this Doc View Source GatewayLogInPacket(UInt16, UInt16, UInt32[], UInt32, String) Initializes a new instance of the GatewayLogInPacket class. Declaration public GatewayLogInPacket(ushort clientVersion, ushort clientOs, uint[] xteaKey, uint accountNumber, string password) Parameters Type Name Description System.UInt16 clientVersion The version of the client attempting to connect. System.UInt16 clientOs The operating system of the client attempting to connect. System.UInt32 [] xteaKey The values for the xtea key. System.UInt32 accountNumber The account number. System.String password The password observed. Properties | Improve this Doc View Source AccountNumber Gets the account number. Declaration public uint AccountNumber { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source ClientOs Gets the operating system of the client attempting to connect. Declaration public ushort ClientOs { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source ClientVersion Gets the version of the client attempting to connect. Declaration public int ClientVersion { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Password Gets the password. Declaration public string Password { get; } Property Value Type Description System.String | Improve this Doc View Source XteaKey Gets the xtea key in use. Declaration public uint[] XteaKey { get; } Property Value Type Description System.UInt32 [] Implements IGatewayLoginInfo IIncomingPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Incoming.HeartbeatPacket.html": {
    "href": "code/Fibula.Communications.Packets.Incoming.HeartbeatPacket.html",
    "title": "Class HeartbeatPacket | Fibula MMO",
    "keywords": "Class HeartbeatPacket Class that represents a heartbeat packet routed to the game server. Inheritance System.Object HeartbeatPacket Implements IActionWithoutContentInfo IIncomingPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Incoming Assembly : Fibula.Communications.Packets.dll Syntax public sealed class HeartbeatPacket : IActionWithoutContentInfo, IIncomingPacket Properties | Improve this Doc View Source Action Gets the action to do. Declaration public IncomingGamePacketType Action { get; } Property Value Type Description IncomingGamePacketType Implements IActionWithoutContentInfo IIncomingPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Incoming.HeartbeatResponsePacket.html": {
    "href": "code/Fibula.Communications.Packets.Incoming.HeartbeatResponsePacket.html",
    "title": "Class HeartbeatResponsePacket | Fibula MMO",
    "keywords": "Class HeartbeatResponsePacket Class that represents a heartbeat response packet routed to the game server. Inheritance System.Object HeartbeatResponsePacket Implements IActionWithoutContentInfo IIncomingPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Incoming Assembly : Fibula.Communications.Packets.dll Syntax public sealed class HeartbeatResponsePacket : IActionWithoutContentInfo, IIncomingPacket Properties | Improve this Doc View Source Action Gets the action to do. Declaration public IncomingGamePacketType Action { get; } Property Value Type Description IncomingGamePacketType Implements IActionWithoutContentInfo IIncomingPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Incoming.html": {
    "href": "code/Fibula.Communications.Packets.Incoming.html",
    "title": "Namespace Fibula.Communications.Packets.Incoming | Fibula MMO",
    "keywords": "Namespace Fibula.Communications.Packets.Incoming Classes AttackPacket Class that represents and attack packet. AutoMoveCancelPacket Class that represents an auto movement cancellation packet routed to the game server. AutoMovePacket Class that represents an auto movement packet. DefaultReadPacket Class that represents the default packet. GameLogInPacket Class that represents a login packet routed to the game server. GameLogOutPacket Class that represents a logout packet routed to the game server. GatewayLogInPacket Class that represents a login packet routed to the gateway server. HeartbeatPacket Class that represents a heartbeat packet routed to the game server. HeartbeatResponsePacket Class that represents a heartbeat response packet routed to the game server. LookAtPacket Class that represents a look at packet. ModesPacket Class that represents a packet for fight and chase modes. SpeechPacket Class that represents a speech packet. StopAllActionsPacket Class that represents a stop everything packet routed to the game server. ThingMovePacket Class that represents a thing movement packet. TurnOnDemandPacket Class that represents a turn packet routed to the game server. WalkOnDemandPacket Class that represents a walk packet routed to the game server."
  },
  "code/Fibula.Communications.Packets.Incoming.LookAtPacket.html": {
    "href": "code/Fibula.Communications.Packets.Incoming.LookAtPacket.html",
    "title": "Class LookAtPacket | Fibula MMO",
    "keywords": "Class LookAtPacket Class that represents a look at packet. Inheritance System.Object LookAtPacket Implements ILookAtInfo IIncomingPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Incoming Assembly : Fibula.Communications.Packets.dll Syntax public class LookAtPacket : ILookAtInfo, IIncomingPacket Constructors | Improve this Doc View Source LookAtPacket(Location, UInt16, Byte) Initializes a new instance of the LookAtPacket class. Declaration public LookAtPacket(Location location, ushort thingId, byte stackPos) Parameters Type Name Description Location location The location we're looking at. System.UInt16 thingId The id of the thing being looked at. System.Byte stackPos The position in the stack of the thing being looked at. Properties | Improve this Doc View Source Location Gets the location of the thing being looked at. Declaration public Location Location { get; } Property Value Type Description Location | Improve this Doc View Source StackPosition Gets the position in the stack of the thing being looked at. Declaration public byte StackPosition { get; } Property Value Type Description System.Byte | Improve this Doc View Source ThingId Gets the if of the thing being looked at. Declaration public ushort ThingId { get; } Property Value Type Description System.UInt16 Implements ILookAtInfo IIncomingPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Incoming.ModesPacket.html": {
    "href": "code/Fibula.Communications.Packets.Incoming.ModesPacket.html",
    "title": "Class ModesPacket | Fibula MMO",
    "keywords": "Class ModesPacket Class that represents a packet for fight and chase modes. Inheritance System.Object ModesPacket Implements IModesInfo IIncomingPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Incoming Assembly : Fibula.Communications.Packets.dll Syntax public class ModesPacket : IModesInfo, IIncomingPacket Constructors | Improve this Doc View Source ModesPacket(FightMode, ChaseMode, Boolean) Initializes a new instance of the ModesPacket class. Declaration public ModesPacket(FightMode fightMode, ChaseMode chaseMode, bool isSafetyEnabled) Parameters Type Name Description FightMode fightMode The fight mode selected. ChaseMode chaseMode The chase mode selected. System.Boolean isSafetyEnabled A value indicating whether the safety mode is on. Properties | Improve this Doc View Source ChaseMode Gets the chase mode. Declaration public ChaseMode ChaseMode { get; } Property Value Type Description ChaseMode | Improve this Doc View Source FightMode Gets the fight mode. Declaration public FightMode FightMode { get; } Property Value Type Description FightMode | Improve this Doc View Source SafeModeOn Gets a value indicating whether the safe mode is on. Declaration public bool SafeModeOn { get; } Property Value Type Description System.Boolean Implements IModesInfo IIncomingPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Incoming.SpeechPacket.html": {
    "href": "code/Fibula.Communications.Packets.Incoming.SpeechPacket.html",
    "title": "Class SpeechPacket | Fibula MMO",
    "keywords": "Class SpeechPacket Class that represents a speech packet. Inheritance System.Object SpeechPacket Implements ISpeechInfo IIncomingPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Incoming Assembly : Fibula.Communications.Packets.dll Syntax public class SpeechPacket : ISpeechInfo, IIncomingPacket Constructors | Improve this Doc View Source SpeechPacket(SpeechType, ChatChannelType, String, String) Initializes a new instance of the SpeechPacket class. Declaration public SpeechPacket(SpeechType type, ChatChannelType channelId, string content, string receiver = \"\") Parameters Type Name Description SpeechType type The type of speech. ChatChannelType channelId The channel type. System.String content The content spoken. System.String receiver Optional. The receiver of the message, if any. Properties | Improve this Doc View Source ChannelType Gets the channel type. Declaration public ChatChannelType ChannelType { get; } Property Value Type Description ChatChannelType | Improve this Doc View Source Content Gets the content of the message. Declaration public string Content { get; } Property Value Type Description System.String | Improve this Doc View Source Receiver Gets the receiver of the message. Declaration public string Receiver { get; } Property Value Type Description System.String | Improve this Doc View Source SpeechType Gets the type of speech. Declaration public SpeechType SpeechType { get; } Property Value Type Description SpeechType Implements ISpeechInfo IIncomingPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Incoming.StopAllActionsPacket.html": {
    "href": "code/Fibula.Communications.Packets.Incoming.StopAllActionsPacket.html",
    "title": "Class StopAllActionsPacket | Fibula MMO",
    "keywords": "Class StopAllActionsPacket Class that represents a stop everything packet routed to the game server. Inheritance System.Object StopAllActionsPacket Implements IActionWithoutContentInfo IIncomingPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Incoming Assembly : Fibula.Communications.Packets.dll Syntax public sealed class StopAllActionsPacket : IActionWithoutContentInfo, IIncomingPacket Properties | Improve this Doc View Source Action Gets the action to do. Declaration public IncomingGamePacketType Action { get; } Property Value Type Description IncomingGamePacketType Implements IActionWithoutContentInfo IIncomingPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Incoming.Tests.html": {
    "href": "code/Fibula.Communications.Packets.Incoming.Tests.html",
    "title": "Namespace Fibula.Communications.Packets.Incoming.Tests | Fibula MMO",
    "keywords": "Namespace Fibula.Communications.Packets.Incoming.Tests Classes IncomingPacketTests Tests for packets that implement the IIncomingPacket interface. OutgoingPacketTests Tests for packets that implement the IOutboundPacket interface."
  },
  "code/Fibula.Communications.Packets.Incoming.Tests.IncomingPacketTests.html": {
    "href": "code/Fibula.Communications.Packets.Incoming.Tests.IncomingPacketTests.html",
    "title": "Class IncomingPacketTests | Fibula MMO",
    "keywords": "Class IncomingPacketTests Tests for packets that implement the IIncomingPacket interface. Inheritance System.Object IncomingPacketTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Incoming.Tests Assembly : Fibula.Communications.Packets.Tests.dll Syntax [TestClass] public class IncomingPacketTests Methods | Improve this Doc View Source AttackPacket_Initialization() Checks AttackPacket initialization. Declaration [TestMethod] public void AttackPacket_Initialization() | Improve this Doc View Source AutoMoveCancelPacket_Initialization() Checks AutoMoveCancelPacket initialization. Declaration [TestMethod] public void AutoMoveCancelPacket_Initialization() | Improve this Doc View Source AutoMovePacket_Initialization() Checks AutoMovePacket initialization. Declaration [TestMethod] public void AutoMovePacket_Initialization() | Improve this Doc View Source DefaultReadPacket_Initialization() Checks DefaultReadPacket initialization. Declaration [TestMethod] public void DefaultReadPacket_Initialization() | Improve this Doc View Source GameLogInPacket_Initialization() Checks GameLogInPacket initialization. Declaration [TestMethod] public void GameLogInPacket_Initialization() | Improve this Doc View Source GameLogOutPacket_Initialization() Checks GameLogOutPacket initialization. Declaration [TestMethod] public void GameLogOutPacket_Initialization() | Improve this Doc View Source GatewayLogInPacket_Initialization() Checks GatewayLogInPacket initialization. Declaration [TestMethod] public void GatewayLogInPacket_Initialization() | Improve this Doc View Source HeartbeatPacket_Initialization() Checks HeartbeatPacket initialization. Declaration [TestMethod] public void HeartbeatPacket_Initialization() | Improve this Doc View Source HeartbeatResponsePacket_Initialization() Checks HeartbeatResponsePacket initialization. Declaration [TestMethod] public void HeartbeatResponsePacket_Initialization() | Improve this Doc View Source LookAtPacket_Initialization() Checks LookAtPacket initialization. Declaration [TestMethod] public void LookAtPacket_Initialization() | Improve this Doc View Source ModesPacket_Initialization() Checks ModesPacket initialization. Declaration [TestMethod] public void ModesPacket_Initialization() | Improve this Doc View Source SpeechPacket_Initialization() Checks SpeechPacket initialization. Declaration [TestMethod] public void SpeechPacket_Initialization() | Improve this Doc View Source StopAllActionsPacket_Initialization() Checks StopAllActionsPacket initialization. Declaration [TestMethod] public void StopAllActionsPacket_Initialization() | Improve this Doc View Source ThingMovePacket_Initialization() Checks ThingMovePacket initialization. Declaration [TestMethod] public void ThingMovePacket_Initialization() | Improve this Doc View Source TurnOnDemandPacket_Initialization() Checks TurnOnDemandPacket initialization. Declaration [TestMethod] public void TurnOnDemandPacket_Initialization() | Improve this Doc View Source WalkOnDemandPacket_Initialization() Checks WalkOnDemandPacket initialization. Declaration [TestMethod] public void WalkOnDemandPacket_Initialization() Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Incoming.Tests.OutgoingPacketTests.html": {
    "href": "code/Fibula.Communications.Packets.Incoming.Tests.OutgoingPacketTests.html",
    "title": "Class OutgoingPacketTests | Fibula MMO",
    "keywords": "Class OutgoingPacketTests Tests for packets that implement the IOutboundPacket interface. Inheritance System.Object OutgoingPacketTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Incoming.Tests Assembly : Fibula.Communications.Packets.Tests.dll Syntax [TestClass] public class OutgoingPacketTests Methods | Improve this Doc View Source AddCreaturePacket_Initialization() Checks AddCreaturePacket initialization. Declaration [TestMethod] public void AddCreaturePacket_Initialization() | Improve this Doc View Source AnimatedTextPacket_Initialization() Checks AnimatedTextPacket initialization. Declaration [TestMethod] public void AnimatedTextPacket_Initialization() | Improve this Doc View Source CharacterListPacket_Initialization() Checks CharacterListPacket initialization. Declaration [TestMethod] public void CharacterListPacket_Initialization() Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Incoming.ThingMovePacket.html": {
    "href": "code/Fibula.Communications.Packets.Incoming.ThingMovePacket.html",
    "title": "Class ThingMovePacket | Fibula MMO",
    "keywords": "Class ThingMovePacket Class that represents a thing movement packet. Inheritance System.Object ThingMovePacket Implements IThingMoveInfo IIncomingPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Incoming Assembly : Fibula.Communications.Packets.dll Syntax public class ThingMovePacket : IThingMoveInfo, IIncomingPacket Constructors | Improve this Doc View Source ThingMovePacket(Location, UInt16, Byte, Location, Byte) Initializes a new instance of the ThingMovePacket class. Declaration public ThingMovePacket(Location fromLocation, ushort thingClientId, byte fromStackPos, Location toLocation, byte count) Parameters Type Name Description Location fromLocation The location from which the thing is being moved. System.UInt16 thingClientId The id of the thing being moved. System.Byte fromStackPos The position in the stack of the thing being moved. Location toLocation The location to which the thing is being moved. System.Byte count The amount of the thing being moved. Properties | Improve this Doc View Source Amount Gets the amount of the thing being moved. Declaration public byte Amount { get; } Property Value Type Description System.Byte | Improve this Doc View Source FromLocation Gets the location from which the thing is being moved. Declaration public Location FromLocation { get; } Property Value Type Description Location | Improve this Doc View Source FromStackPos Gets the position in the stack at the location from which the thing is being moved. Declaration public byte FromStackPos { get; } Property Value Type Description System.Byte | Improve this Doc View Source ThingClientId Gets the id of the thing, as seen by the client. Declaration public ushort ThingClientId { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source ToLocation Gets the location to which the thing is being moved. Declaration public Location ToLocation { get; } Property Value Type Description Location Implements IThingMoveInfo IIncomingPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Incoming.TurnOnDemandPacket.html": {
    "href": "code/Fibula.Communications.Packets.Incoming.TurnOnDemandPacket.html",
    "title": "Class TurnOnDemandPacket | Fibula MMO",
    "keywords": "Class TurnOnDemandPacket Class that represents a turn packet routed to the game server. Inheritance System.Object TurnOnDemandPacket Implements ITurnOnDemandInfo IIncomingPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Incoming Assembly : Fibula.Communications.Packets.dll Syntax public sealed class TurnOnDemandPacket : ITurnOnDemandInfo, IIncomingPacket Constructors | Improve this Doc View Source TurnOnDemandPacket(Direction) Initializes a new instance of the TurnOnDemandPacket class. Declaration public TurnOnDemandPacket(Direction direction) Parameters Type Name Description Direction direction The direction to turn to. Properties | Improve this Doc View Source Direction Gets the direction to walk to. Declaration public Direction Direction { get; } Property Value Type Description Direction Implements ITurnOnDemandInfo IIncomingPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Incoming.WalkOnDemandPacket.html": {
    "href": "code/Fibula.Communications.Packets.Incoming.WalkOnDemandPacket.html",
    "title": "Class WalkOnDemandPacket | Fibula MMO",
    "keywords": "Class WalkOnDemandPacket Class that represents a walk packet routed to the game server. Inheritance System.Object WalkOnDemandPacket Implements IWalkOnDemandInfo IIncomingPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Incoming Assembly : Fibula.Communications.Packets.dll Syntax public sealed class WalkOnDemandPacket : IWalkOnDemandInfo, IIncomingPacket Constructors | Improve this Doc View Source WalkOnDemandPacket(Direction) Initializes a new instance of the WalkOnDemandPacket class. Declaration public WalkOnDemandPacket(Direction direction) Parameters Type Name Description Direction direction The direction to walk to. Properties | Improve this Doc View Source Direction Gets the direction to walk to. Declaration public Direction Direction { get; } Property Value Type Description Direction Implements IWalkOnDemandInfo IIncomingPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.AddCreaturePacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.AddCreaturePacket.html",
    "title": "Class AddCreaturePacket | Fibula MMO",
    "keywords": "Class AddCreaturePacket Class that represents a packet with information about a creatue that was added to the game. Inheritance System.Object AddCreaturePacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class AddCreaturePacket : IOutboundPacket Constructors | Improve this Doc View Source AddCreaturePacket(ICreature, Boolean, UInt32) Initializes a new instance of the AddCreaturePacket class. Declaration public AddCreaturePacket(ICreature creature, bool asKnown, uint removeThisCreatureId) Parameters Type Name Description ICreature creature The creature that was added. System.Boolean asKnown A value indicating whether the creature was added as a known creature or not. System.UInt32 removeThisCreatureId An id of another creature to remove from the known list, and replace with this new creature. Properties | Improve this Doc View Source AsKnown Gets a value indicating whether the creature was added as a known creature or not. Declaration public bool AsKnown { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Creature Gets a reference to the creature added. Declaration public ICreature Creature { get; } Property Value Type Description ICreature | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte | Improve this Doc View Source RemoveThisCreatureId Gets an id of another creature to remove from the known list, and replace with this new creature. Declaration public uint RemoveThisCreatureId { get; } Property Value Type Description System.UInt32 Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.AnimatedTextPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.AnimatedTextPacket.html",
    "title": "Class AnimatedTextPacket | Fibula MMO",
    "keywords": "Class AnimatedTextPacket Class that represents a packet with information about animated text that should be displayed to the player. Inheritance System.Object AnimatedTextPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class AnimatedTextPacket : IOutboundPacket Constructors | Improve this Doc View Source AnimatedTextPacket(Location, TextColor, String) Initializes a new instance of the AnimatedTextPacket class. Declaration public AnimatedTextPacket(Location location, TextColor color, string text) Parameters Type Name Description Location location The location of the animated text. TextColor color The text color. System.String text The contents of the text. Properties | Improve this Doc View Source Color Gets the text color. Declaration public TextColor Color { get; } Property Value Type Description TextColor | Improve this Doc View Source Location Gets the location of the animated text. Declaration public Location Location { get; } Property Value Type Description Location | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte | Improve this Doc View Source Text Gets the content of the text. Declaration public string Text { get; } Property Value Type Description System.String Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.CharacterListPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.CharacterListPacket.html",
    "title": "Class CharacterListPacket | Fibula MMO",
    "keywords": "Class CharacterListPacket Class that represents an outgoing character list packet. Inheritance System.Object CharacterListPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public sealed class CharacterListPacket : IOutboundPacket Constructors | Improve this Doc View Source CharacterListPacket(IEnumerable<CharacterInfo>, UInt16) Initializes a new instance of the CharacterListPacket class. Declaration public CharacterListPacket(IEnumerable<CharacterInfo> characters, ushort premDays) Parameters Type Name Description System.Collections.Generic.IEnumerable < CharacterInfo > characters The list of characters in the account. System.UInt16 premDays The premium days left on the account. Properties | Improve this Doc View Source Characters Gets the list of characters in the account. Declaration public IEnumerable<CharacterInfo> Characters { get; } Property Value Type Description System.Collections.Generic.IEnumerable < CharacterInfo > | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte | Improve this Doc View Source PremiumDaysLeft Gets the premium days left on the account. Declaration public ushort PremiumDaysLeft { get; } Property Value Type Description System.UInt16 Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.ContainerAddItemPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.ContainerAddItemPacket.html",
    "title": "Class ContainerAddItemPacket | Fibula MMO",
    "keywords": "Class ContainerAddItemPacket Class that represents a packet for an item added to a container. Inheritance System.Object ContainerAddItemPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class ContainerAddItemPacket : IOutboundPacket Constructors | Improve this Doc View Source ContainerAddItemPacket(Byte, IItem) Initializes a new instance of the ContainerAddItemPacket class. Declaration public ContainerAddItemPacket(byte containerId, IItem item) Parameters Type Name Description System.Byte containerId The id of the container. IItem item The item being added. Properties | Improve this Doc View Source ContainerId Gets the id of the container, as seen by the target player. Declaration public byte ContainerId { get; } Property Value Type Description System.Byte | Improve this Doc View Source Item Gets the item being added. Declaration public IItem Item { get; } Property Value Type Description IItem | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.ContainerClosePacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.ContainerClosePacket.html",
    "title": "Class ContainerClosePacket | Fibula MMO",
    "keywords": "Class ContainerClosePacket Class that represents a packet for a container being closed. Inheritance System.Object ContainerClosePacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class ContainerClosePacket : IOutboundPacket Constructors | Improve this Doc View Source ContainerClosePacket(Byte) Initializes a new instance of the ContainerClosePacket class. Declaration public ContainerClosePacket(byte containerId) Parameters Type Name Description System.Byte containerId The id of the container being closed. Properties | Improve this Doc View Source ContainerId Gets the id of the container, as seen by the target player. Declaration public byte ContainerId { get; } Property Value Type Description System.Byte | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.ContainerOpenPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.ContainerOpenPacket.html",
    "title": "Class ContainerOpenPacket | Fibula MMO",
    "keywords": "Class ContainerOpenPacket Class that represents a packet for a container being opened. Inheritance System.Object ContainerOpenPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class ContainerOpenPacket : IOutboundPacket Constructors | Improve this Doc View Source ContainerOpenPacket(Byte, UInt16, String, Byte, Boolean, IList<IItem>) Initializes a new instance of the ContainerOpenPacket class. Declaration public ContainerOpenPacket(byte containerId, ushort clientItemId, string name, byte volume, bool hasParent, IList<IItem> contents) Parameters Type Name Description System.Byte containerId The id of the container, as seen by the target player. System.UInt16 clientItemId The id of the type of the container. System.String name The name of the container. System.Byte volume The capacity of the container. System.Boolean hasParent A value indicating whether the container has a parent. System.Collections.Generic.IList < IItem > contents The contents of the container. Properties | Improve this Doc View Source ContainerId Gets the id of the container, as seen by the target player. Declaration public byte ContainerId { get; } Property Value Type Description System.Byte | Improve this Doc View Source Contents Gets the contents of the container. Declaration public IList<IItem> Contents { get; } Property Value Type Description System.Collections.Generic.IList < IItem > | Improve this Doc View Source HasParent Gets a value indicating whether the container has a parent. Declaration public bool HasParent { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Gets the name of the container. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte | Improve this Doc View Source TypeId Gets the id of the type of container. Declaration public ushort TypeId { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source Volume Gets the capacity of the container. Declaration public byte Volume { get; } Property Value Type Description System.Byte Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.ContainerRemoveItemPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.ContainerRemoveItemPacket.html",
    "title": "Class ContainerRemoveItemPacket | Fibula MMO",
    "keywords": "Class ContainerRemoveItemPacket Class that represents a packet for an item being removed to a container. Inheritance System.Object ContainerRemoveItemPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class ContainerRemoveItemPacket : IOutboundPacket Constructors | Improve this Doc View Source ContainerRemoveItemPacket(Byte, Byte) Initializes a new instance of the ContainerRemoveItemPacket class. Declaration public ContainerRemoveItemPacket(byte index, byte containerId) Parameters Type Name Description System.Byte index The index within the container, at which the item is being removed. System.Byte containerId The id of the container. Properties | Improve this Doc View Source ContainerId Gets the id of the container. Declaration public byte ContainerId { get; } Property Value Type Description System.Byte | Improve this Doc View Source Index Gets the index within the container, at which the item is being removed. Declaration public byte Index { get; } Property Value Type Description System.Byte | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.ContainerUpdateItemPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.ContainerUpdateItemPacket.html",
    "title": "Class ContainerUpdateItemPacket | Fibula MMO",
    "keywords": "Class ContainerUpdateItemPacket Class that represents a packet for an item being updated within a container. Inheritance System.Object ContainerUpdateItemPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class ContainerUpdateItemPacket : IOutboundPacket Constructors | Improve this Doc View Source ContainerUpdateItemPacket(Byte, Byte, IItem) Initializes a new instance of the ContainerUpdateItemPacket class. Declaration public ContainerUpdateItemPacket(byte index, byte containerId, IItem item) Parameters Type Name Description System.Byte index The index within the container, at which the item being updated is. System.Byte containerId The id of the container. IItem item The item being updated. Properties | Improve this Doc View Source ContainerId Gets the id of the container. Declaration public byte ContainerId { get; } Property Value Type Description System.Byte | Improve this Doc View Source Index Gets the index within the container, at which the item being updated is. Declaration public byte Index { get; } Property Value Type Description System.Byte | Improve this Doc View Source Item Gets the item being updated. Declaration public IItem Item { get; } Property Value Type Description IItem | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.CreatureHealthPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.CreatureHealthPacket.html",
    "title": "Class CreatureHealthPacket | Fibula MMO",
    "keywords": "Class CreatureHealthPacket Class that represents a creature health packet. Inheritance System.Object CreatureHealthPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class CreatureHealthPacket : IOutboundPacket Constructors | Improve this Doc View Source CreatureHealthPacket(ICreature) Initializes a new instance of the CreatureHealthPacket class. Declaration public CreatureHealthPacket(ICreature creature) Parameters Type Name Description ICreature creature The creature reference. Properties | Improve this Doc View Source Creature Gets the creature reference. Declaration public ICreature Creature { get; } Property Value Type Description ICreature | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.CreatureLightPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.CreatureLightPacket.html",
    "title": "Class CreatureLightPacket | Fibula MMO",
    "keywords": "Class CreatureLightPacket Class that represents a creature light packet. Inheritance System.Object CreatureLightPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class CreatureLightPacket : IOutboundPacket Constructors | Improve this Doc View Source CreatureLightPacket(ICreature) Initializes a new instance of the CreatureLightPacket class. Declaration public CreatureLightPacket(ICreature creature) Parameters Type Name Description ICreature creature The creature reference. Properties | Improve this Doc View Source Creature Gets the creature reference. Declaration public ICreature Creature { get; } Property Value Type Description ICreature | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.CreatureMovedPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.CreatureMovedPacket.html",
    "title": "Class CreatureMovedPacket | Fibula MMO",
    "keywords": "Class CreatureMovedPacket Class that represents a packet for when a creature has moved. Inheritance System.Object CreatureMovedPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class CreatureMovedPacket : IOutboundPacket Constructors | Improve this Doc View Source CreatureMovedPacket(Location, Byte, Location) Initializes a new instance of the CreatureMovedPacket class. Declaration public CreatureMovedPacket(Location fromLocation, byte fromStackpos, Location toLocation) Parameters Type Name Description Location fromLocation The location from which the move happened. System.Byte fromStackpos The position in the stack within the location from which the move happened. Location toLocation The location to which the move happened. Properties | Improve this Doc View Source FromLocation Gets the location from which the creature moved from. Declaration public Location FromLocation { get; } Property Value Type Description Location | Improve this Doc View Source FromStackpos Gets the position in the stack of the creatue in the source location. Declaration public byte FromStackpos { get; } Property Value Type Description System.Byte | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte | Improve this Doc View Source ToLocation Gets the location to which the creature moved. Declaration public Location ToLocation { get; } Property Value Type Description Location Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.CreatureSkullPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.CreatureSkullPacket.html",
    "title": "Class CreatureSkullPacket | Fibula MMO",
    "keywords": "Class CreatureSkullPacket Class that represents a creature skull packet. Inheritance System.Object CreatureSkullPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class CreatureSkullPacket : IOutboundPacket Constructors | Improve this Doc View Source CreatureSkullPacket(ICreature) Initializes a new instance of the CreatureSkullPacket class. Declaration public CreatureSkullPacket(ICreature creature) Parameters Type Name Description ICreature creature The creature reference. Properties | Improve this Doc View Source Creature Gets the creature reference. Declaration public ICreature Creature { get; } Property Value Type Description ICreature | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.CreatureSpeechPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.CreatureSpeechPacket.html",
    "title": "Class CreatureSpeechPacket | Fibula MMO",
    "keywords": "Class CreatureSpeechPacket Class that represents a packet for when a creature speaks. Inheritance System.Object CreatureSpeechPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class CreatureSpeechPacket : IOutboundPacket Constructors | Improve this Doc View Source CreatureSpeechPacket(UInt32, String, SpeechType, String, Location, ChatChannelType, UInt32) Initializes a new instance of the CreatureSpeechPacket class. Declaration public CreatureSpeechPacket(uint senderId, string senderName, SpeechType speechType, string text, Location location, ChatChannelType channelType, uint time) Parameters Type Name Description System.UInt32 senderId The id of the creature that spoke. System.String senderName The name of the creature that spoke. SpeechType speechType The type of speech. System.String text The content of the speech. Location location The location at which the speech originated. ChatChannelType channelType The type of channel in which the speech happened. System.UInt32 time The time at which the speech happened. Properties | Improve this Doc View Source Channel Gets the type of channel in which the speech happened. Declaration public ChatChannelType Channel { get; } Property Value Type Description ChatChannelType | Improve this Doc View Source Location Gets the location at which the speech originated. Declaration public Location Location { get; } Property Value Type Description Location | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte | Improve this Doc View Source SenderId Gets the id of the creature that spoke. Declaration public uint SenderId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source SenderName Gets the name of the creature that spoke. Declaration public string SenderName { get; } Property Value Type Description System.String | Improve this Doc View Source SpeechType Gets the type of speech. Declaration public SpeechType SpeechType { get; } Property Value Type Description SpeechType | Improve this Doc View Source Text Gets the content of the speech. Declaration public string Text { get; } Property Value Type Description System.String | Improve this Doc View Source Time Gets the time at which the speech happened. Declaration public uint Time { get; } Property Value Type Description System.UInt32 Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.CreatureSpeedChangePacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.CreatureSpeedChangePacket.html",
    "title": "Class CreatureSpeedChangePacket | Fibula MMO",
    "keywords": "Class CreatureSpeedChangePacket Class that represents a creature speed change packet. Inheritance System.Object CreatureSpeedChangePacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class CreatureSpeedChangePacket : IOutboundPacket Constructors | Improve this Doc View Source CreatureSpeedChangePacket(ICreature) Initializes a new instance of the CreatureSpeedChangePacket class. Declaration public CreatureSpeedChangePacket(ICreature creature) Parameters Type Name Description ICreature creature The creature reference. Properties | Improve this Doc View Source Creature Gets the creature reference. Declaration public ICreature Creature { get; } Property Value Type Description ICreature | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.CreatureTurnedPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.CreatureTurnedPacket.html",
    "title": "Class CreatureTurnedPacket | Fibula MMO",
    "keywords": "Class CreatureTurnedPacket Class that represents a packet for when a creature has turned. Inheritance System.Object CreatureTurnedPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class CreatureTurnedPacket : IOutboundPacket Constructors | Improve this Doc View Source CreatureTurnedPacket(ICreature, Byte) Initializes a new instance of the CreatureTurnedPacket class. Declaration public CreatureTurnedPacket(ICreature creature, byte creatureStackPosition) Parameters Type Name Description ICreature creature The creature that turned. System.Byte creatureStackPosition The position in the stack of the creature that turned. Properties | Improve this Doc View Source Creature Gets the creature that turned. Declaration public ICreature Creature { get; } Property Value Type Description ICreature | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte | Improve this Doc View Source StackPosition Gets the position in the stack of the creatue. Declaration public byte StackPosition { get; } Property Value Type Description System.Byte Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.GameServerDisconnectPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.GameServerDisconnectPacket.html",
    "title": "Class GameServerDisconnectPacket | Fibula MMO",
    "keywords": "Class GameServerDisconnectPacket Class that represents a game server disconnect packet. Inheritance System.Object GameServerDisconnectPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class GameServerDisconnectPacket : IOutboundPacket Constructors | Improve this Doc View Source GameServerDisconnectPacket(String) Initializes a new instance of the GameServerDisconnectPacket class. Declaration public GameServerDisconnectPacket(string reason = \"\") Parameters Type Name Description System.String reason Optional. A reason for the disconnection. Properties | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte | Improve this Doc View Source Reason Gets the reason given for the disconnection, if any. Declaration public string Reason { get; } Property Value Type Description System.String Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.GatewayServerDisconnectPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.GatewayServerDisconnectPacket.html",
    "title": "Class GatewayServerDisconnectPacket | Fibula MMO",
    "keywords": "Class GatewayServerDisconnectPacket Class that represents an outgoing login server disconnection packet. Inheritance System.Object GatewayServerDisconnectPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public sealed class GatewayServerDisconnectPacket : IOutboundPacket Constructors | Improve this Doc View Source GatewayServerDisconnectPacket(String) Initializes a new instance of the GatewayServerDisconnectPacket class. Declaration public GatewayServerDisconnectPacket(string reason = \"\") Parameters Type Name Description System.String reason Optional. The reason given for the disconnection, if any. Properties | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte | Improve this Doc View Source Reason Gets the reason given for the disconnection, if any. Declaration public string Reason { get; } Property Value Type Description System.String Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.HeartbeatPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.HeartbeatPacket.html",
    "title": "Class HeartbeatPacket | Fibula MMO",
    "keywords": "Class HeartbeatPacket Class that represents a packet for cancelling a player's walk. Inheritance System.Object HeartbeatPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class HeartbeatPacket : IOutboundPacket Constructors | Improve this Doc View Source HeartbeatPacket() Initializes a new instance of the HeartbeatPacket class. Declaration public HeartbeatPacket() Properties | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.HeartbeatResponsePacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.HeartbeatResponsePacket.html",
    "title": "Class HeartbeatResponsePacket | Fibula MMO",
    "keywords": "Class HeartbeatResponsePacket Class that represents a packet for cancelling a player's walk. Inheritance System.Object HeartbeatResponsePacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class HeartbeatResponsePacket : IOutboundPacket Constructors | Improve this Doc View Source HeartbeatResponsePacket() Initializes a new instance of the HeartbeatResponsePacket class. Declaration public HeartbeatResponsePacket() Properties | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.html",
    "title": "Namespace Fibula.Communications.Packets.Outgoing | Fibula MMO",
    "keywords": "Namespace Fibula.Communications.Packets.Outgoing Classes AddCreaturePacket Class that represents a packet with information about a creatue that was added to the game. AnimatedTextPacket Class that represents a packet with information about animated text that should be displayed to the player. CharacterListPacket Class that represents an outgoing character list packet. ContainerAddItemPacket Class that represents a packet for an item added to a container. ContainerClosePacket Class that represents a packet for a container being closed. ContainerOpenPacket Class that represents a packet for a container being opened. ContainerRemoveItemPacket Class that represents a packet for an item being removed to a container. ContainerUpdateItemPacket Class that represents a packet for an item being updated within a container. CreatureHealthPacket Class that represents a creature health packet. CreatureLightPacket Class that represents a creature light packet. CreatureMovedPacket Class that represents a packet for when a creature has moved. CreatureSkullPacket Class that represents a creature skull packet. CreatureSpeechPacket Class that represents a packet for when a creature speaks. CreatureSpeedChangePacket Class that represents a creature speed change packet. CreatureTurnedPacket Class that represents a packet for when a creature has turned. GameServerDisconnectPacket Class that represents a game server disconnect packet. GatewayServerDisconnectPacket Class that represents an outgoing login server disconnection packet. HeartbeatPacket Class that represents a packet for cancelling a player's walk. HeartbeatResponsePacket Class that represents a packet for cancelling a player's walk. MagicEffectPacket Class that represents a magic effect packet. MapDescriptionPacket Class that represents a map description packet. MapPartialDescriptionPacket Class that represents a partial map description packet. MessageOfTheDayPacket Class that represents an outgoing message of the day packet. PlayerCancelAttackPacket Class that represents a packet for cancelling a player's attack. PlayerCancelWalkPacket Class that represents a packet for cancelling a player's walk. PlayerConditionsPacket Class that represents a player's conditions packet. PlayerInventoryClearSlotPacket Class that represents a player's clear inventory slot packet. PlayerInventorySetSlotPacket Class that represents a player's filled inventory slot packet. PlayerLoginPacket Class that represents a player login packet. PlayerSkillsPacket Class that represents a player's skills packet. PlayerStatsPacket Class that represents a player stats packet. RemoveAtLocationPacket Class that represents a remove at positiion packet. SquarePacket Class that represents a square around a creature packet. TextMessagePacket Class that represents a text message packet. TileUpdatePacket Class that represents a tile update packet. WaitingListPacket Class that represents a waiting list packet. WorldLightPacket Class that represents a world light packet."
  },
  "code/Fibula.Communications.Packets.Outgoing.MagicEffectPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.MagicEffectPacket.html",
    "title": "Class MagicEffectPacket | Fibula MMO",
    "keywords": "Class MagicEffectPacket Class that represents a magic effect packet. Inheritance System.Object MagicEffectPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class MagicEffectPacket : IOutboundPacket Constructors | Improve this Doc View Source MagicEffectPacket(Location, AnimatedEffect) Initializes a new instance of the MagicEffectPacket class. Declaration public MagicEffectPacket(Location location, AnimatedEffect effect) Parameters Type Name Description Location location The location of the effect. AnimatedEffect effect The effect. Properties | Improve this Doc View Source Effect Gets the actual effect. Declaration public AnimatedEffect Effect { get; } Property Value Type Description AnimatedEffect | Improve this Doc View Source Location Gets the location of the effect. Declaration public Location Location { get; } Property Value Type Description Location | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.MapDescriptionPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.MapDescriptionPacket.html",
    "title": "Class MapDescriptionPacket | Fibula MMO",
    "keywords": "Class MapDescriptionPacket Class that represents a map description packet. Inheritance System.Object MapDescriptionPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class MapDescriptionPacket : IOutboundPacket Constructors | Improve this Doc View Source MapDescriptionPacket(Location, ReadOnlySequence<Byte>) Initializes a new instance of the MapDescriptionPacket class. Declaration public MapDescriptionPacket(Location origin, ReadOnlySequence<byte> descriptionBytes) Parameters Type Name Description Location origin The origin location. System.Buffers.ReadOnlySequence < System.Byte > descriptionBytes The description bytes. Properties | Improve this Doc View Source DescriptionBytes Gets the description bytes. Declaration public ReadOnlySequence<byte> DescriptionBytes { get; } Property Value Type Description System.Buffers.ReadOnlySequence < System.Byte > | Improve this Doc View Source Origin Gets the origin location. Declaration public Location Origin { get; } Property Value Type Description Location | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.MapPartialDescriptionPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.MapPartialDescriptionPacket.html",
    "title": "Class MapPartialDescriptionPacket | Fibula MMO",
    "keywords": "Class MapPartialDescriptionPacket Class that represents a partial map description packet. Inheritance System.Object MapPartialDescriptionPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class MapPartialDescriptionPacket : IOutboundPacket Constructors | Improve this Doc View Source MapPartialDescriptionPacket(OutgoingGamePacketType, ReadOnlySequence<Byte>) Initializes a new instance of the MapPartialDescriptionPacket class. Declaration public MapPartialDescriptionPacket(OutgoingGamePacketType mapDescriptionType, ReadOnlySequence<byte> descriptionBytes) Parameters Type Name Description OutgoingGamePacketType mapDescriptionType The type of map description. System.Buffers.ReadOnlySequence < System.Byte > descriptionBytes The description bytes. Properties | Improve this Doc View Source DescriptionBytes Gets the description bytes. Declaration public ReadOnlySequence<byte> DescriptionBytes { get; } Property Value Type Description System.Buffers.ReadOnlySequence < System.Byte > | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.MessageOfTheDayPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.MessageOfTheDayPacket.html",
    "title": "Class MessageOfTheDayPacket | Fibula MMO",
    "keywords": "Class MessageOfTheDayPacket Class that represents an outgoing message of the day packet. Inheritance System.Object MessageOfTheDayPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public sealed class MessageOfTheDayPacket : IOutboundPacket Constructors | Improve this Doc View Source MessageOfTheDayPacket(String) Initializes a new instance of the MessageOfTheDayPacket class. Declaration public MessageOfTheDayPacket(string messageOfTheDay) Parameters Type Name Description System.String messageOfTheDay The message. Properties | Improve this Doc View Source MessageOfTheDay Gets the message of the day. Declaration public string MessageOfTheDay { get; } Property Value Type Description System.String | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.PlayerCancelAttackPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.PlayerCancelAttackPacket.html",
    "title": "Class PlayerCancelAttackPacket | Fibula MMO",
    "keywords": "Class PlayerCancelAttackPacket Class that represents a packet for cancelling a player's attack. Inheritance System.Object PlayerCancelAttackPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class PlayerCancelAttackPacket : IOutboundPacket Properties | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.PlayerCancelWalkPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.PlayerCancelWalkPacket.html",
    "title": "Class PlayerCancelWalkPacket | Fibula MMO",
    "keywords": "Class PlayerCancelWalkPacket Class that represents a packet for cancelling a player's walk. Inheritance System.Object PlayerCancelWalkPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class PlayerCancelWalkPacket : IOutboundPacket Constructors | Improve this Doc View Source PlayerCancelWalkPacket(Direction) Initializes a new instance of the PlayerCancelWalkPacket class. Declaration public PlayerCancelWalkPacket(Direction turnToDirection) Parameters Type Name Description Direction turnToDirection The direction to leave the player facing after cancellation. Properties | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte | Improve this Doc View Source ResultingDirection Gets the direction in which the creature will be left facing. Declaration public Direction ResultingDirection { get; } Property Value Type Description Direction Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.PlayerConditionsPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.PlayerConditionsPacket.html",
    "title": "Class PlayerConditionsPacket | Fibula MMO",
    "keywords": "Class PlayerConditionsPacket Class that represents a player's conditions packet. Inheritance System.Object PlayerConditionsPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class PlayerConditionsPacket : IOutboundPacket Constructors | Improve this Doc View Source PlayerConditionsPacket(IPlayer) Initializes a new instance of the PlayerConditionsPacket class. Declaration public PlayerConditionsPacket(IPlayer player) Parameters Type Name Description IPlayer player The player referenced. Properties | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte | Improve this Doc View Source Player Gets a reference to the player. Declaration public IPlayer Player { get; } Property Value Type Description IPlayer Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.PlayerInventoryClearSlotPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.PlayerInventoryClearSlotPacket.html",
    "title": "Class PlayerInventoryClearSlotPacket | Fibula MMO",
    "keywords": "Class PlayerInventoryClearSlotPacket Class that represents a player's clear inventory slot packet. Inheritance System.Object PlayerInventoryClearSlotPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class PlayerInventoryClearSlotPacket : IOutboundPacket Constructors | Improve this Doc View Source PlayerInventoryClearSlotPacket(Slot) Initializes a new instance of the PlayerInventoryClearSlotPacket class. Declaration public PlayerInventoryClearSlotPacket(Slot slot) Parameters Type Name Description Slot slot The slot that this packet is about. Properties | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte | Improve this Doc View Source Slot Gets the slot. Declaration public Slot Slot { get; } Property Value Type Description Slot Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.PlayerInventorySetSlotPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.PlayerInventorySetSlotPacket.html",
    "title": "Class PlayerInventorySetSlotPacket | Fibula MMO",
    "keywords": "Class PlayerInventorySetSlotPacket Class that represents a player's filled inventory slot packet. Inheritance System.Object PlayerInventorySetSlotPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class PlayerInventorySetSlotPacket : IOutboundPacket Constructors | Improve this Doc View Source PlayerInventorySetSlotPacket(Slot, IItem) Initializes a new instance of the PlayerInventorySetSlotPacket class. Declaration public PlayerInventorySetSlotPacket(Slot slot, IItem item) Parameters Type Name Description Slot slot The slot that this packet is about. IItem item The item that the slot contains. Properties | Improve this Doc View Source Item Gets the item filling the slot. Declaration public IItem Item { get; } Property Value Type Description IItem | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte | Improve this Doc View Source Slot Gets the slot. Declaration public Slot Slot { get; } Property Value Type Description Slot Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.PlayerLoginPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.PlayerLoginPacket.html",
    "title": "Class PlayerLoginPacket | Fibula MMO",
    "keywords": "Class PlayerLoginPacket Class that represents a player login packet. Inheritance System.Object PlayerLoginPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class PlayerLoginPacket : IOutboundPacket Constructors | Improve this Doc View Source PlayerLoginPacket(UInt32, IPlayer) Initializes a new instance of the PlayerLoginPacket class. Declaration public PlayerLoginPacket(uint creatureId, IPlayer player) Parameters Type Name Description System.UInt32 creatureId The id of the creature. IPlayer player A reference to the player. Properties | Improve this Doc View Source CanReportBugs Gets a value indicating whether the player can report bugs. Declaration public byte CanReportBugs { get; } Property Value Type Description System.Byte | Improve this Doc View Source CreatureId Gets the id of this creature. Declaration public uint CreatureId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source GraphicsSpeed Gets the graphics speed. Should always be 50 apparently. Declaration public byte GraphicsSpeed { get; } Property Value Type Description System.Byte | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte | Improve this Doc View Source Player Gets a reference to the player. Declaration public IPlayer Player { get; } Property Value Type Description IPlayer Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.PlayerSkillsPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.PlayerSkillsPacket.html",
    "title": "Class PlayerSkillsPacket | Fibula MMO",
    "keywords": "Class PlayerSkillsPacket Class that represents a player's skills packet. Inheritance System.Object PlayerSkillsPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class PlayerSkillsPacket : IOutboundPacket Constructors | Improve this Doc View Source PlayerSkillsPacket(IPlayer) Initializes a new instance of the PlayerSkillsPacket class. Declaration public PlayerSkillsPacket(IPlayer player) Parameters Type Name Description IPlayer player The player referenced. Properties | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte | Improve this Doc View Source Player Gets a reference to the player. Declaration public IPlayer Player { get; } Property Value Type Description IPlayer Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.PlayerStatsPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.PlayerStatsPacket.html",
    "title": "Class PlayerStatsPacket | Fibula MMO",
    "keywords": "Class PlayerStatsPacket Class that represents a player stats packet. Inheritance System.Object PlayerStatsPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class PlayerStatsPacket : IOutboundPacket Constructors | Improve this Doc View Source PlayerStatsPacket(IPlayer) Initializes a new instance of the PlayerStatsPacket class. Declaration public PlayerStatsPacket(IPlayer player) Parameters Type Name Description IPlayer player The player referenced. Properties | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte | Improve this Doc View Source Player Gets a reference to the player. Declaration public IPlayer Player { get; } Property Value Type Description IPlayer Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.RemoveAtLocationPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.RemoveAtLocationPacket.html",
    "title": "Class RemoveAtLocationPacket | Fibula MMO",
    "keywords": "Class RemoveAtLocationPacket Class that represents a remove at positiion packet. Inheritance System.Object RemoveAtLocationPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class RemoveAtLocationPacket : IOutboundPacket Constructors | Improve this Doc View Source RemoveAtLocationPacket(Location, Byte) Initializes a new instance of the RemoveAtLocationPacket class. Declaration public RemoveAtLocationPacket(Location location, byte stackpos) Parameters Type Name Description Location location The location at which the removal happened. System.Byte stackpos The position in the stack within the location at which the removal happened. Properties | Improve this Doc View Source Location Gets the location at which the removal happened. Declaration public Location Location { get; } Property Value Type Description Location | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte | Improve this Doc View Source Stackpos Gets the position in the stack within the location at which the removal happened. Declaration public byte Stackpos { get; } Property Value Type Description System.Byte Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.SquarePacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.SquarePacket.html",
    "title": "Class SquarePacket | Fibula MMO",
    "keywords": "Class SquarePacket Class that represents a square around a creature packet. Inheritance System.Object SquarePacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class SquarePacket : IOutboundPacket Constructors | Improve this Doc View Source SquarePacket(UInt32, SquareColor) Initializes a new instance of the SquarePacket class. Declaration public SquarePacket(uint onCreatureId, SquareColor color) Parameters Type Name Description System.UInt32 onCreatureId The Id of the creature on which to draw the square. SquareColor color The color of the square to draw. Properties | Improve this Doc View Source Color Gets the color of the square. Declaration public SquareColor Color { get; } Property Value Type Description SquareColor | Improve this Doc View Source OnCreatureId Gets the Id of the creature on which the square goes. Declaration public uint OnCreatureId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.TextMessagePacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.TextMessagePacket.html",
    "title": "Class TextMessagePacket | Fibula MMO",
    "keywords": "Class TextMessagePacket Class that represents a text message packet. Inheritance System.Object TextMessagePacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class TextMessagePacket : IOutboundPacket Constructors | Improve this Doc View Source TextMessagePacket(MessageType, String) Initializes a new instance of the TextMessagePacket class. Declaration public TextMessagePacket(MessageType type, string message) Parameters Type Name Description MessageType type The messsage type. System.String message The message. Properties | Improve this Doc View Source Message Gets the message contents. Declaration public string Message { get; } Property Value Type Description System.String | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte | Improve this Doc View Source Type Gets the message type. Declaration public MessageType Type { get; } Property Value Type Description MessageType Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.TileUpdatePacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.TileUpdatePacket.html",
    "title": "Class TileUpdatePacket | Fibula MMO",
    "keywords": "Class TileUpdatePacket Class that represents a tile update packet. Inheritance System.Object TileUpdatePacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class TileUpdatePacket : IOutboundPacket Constructors | Improve this Doc View Source TileUpdatePacket(Location, ReadOnlySequence<Byte>) Initializes a new instance of the TileUpdatePacket class. Declaration public TileUpdatePacket(Location location, ReadOnlySequence<byte> descriptionBytes) Parameters Type Name Description Location location The location of the tile. System.Buffers.ReadOnlySequence < System.Byte > descriptionBytes The description bytes of the tile. Properties | Improve this Doc View Source DescriptionBytes Gets the description bytes. Declaration public ReadOnlySequence<byte> DescriptionBytes { get; } Property Value Type Description System.Buffers.ReadOnlySequence < System.Byte > | Improve this Doc View Source Location Gets the tile location. Declaration public Location Location { get; } Property Value Type Description Location | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.WaitingListPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.WaitingListPacket.html",
    "title": "Class WaitingListPacket | Fibula MMO",
    "keywords": "Class WaitingListPacket Class that represents a waiting list packet. Inheritance System.Object WaitingListPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class WaitingListPacket : IOutboundPacket Constructors | Improve this Doc View Source WaitingListPacket(String, Byte) Initializes a new instance of the WaitingListPacket class. Declaration public WaitingListPacket(string message, byte waitTimeInSeconds) Parameters Type Name Description System.String message The message to send along. System.Byte waitTimeInSeconds The wait time in seconds to instruct the client to wait before re-checking. Properties | Improve this Doc View Source Message Gets the message to send. Declaration public string Message { get; } Property Value Type Description System.String | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte | Improve this Doc View Source WaitTime Gets the wait time in seconds to instruct the client to wait before re-checking. Declaration public byte WaitTime { get; } Property Value Type Description System.Byte Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Packets.Outgoing.WorldLightPacket.html": {
    "href": "code/Fibula.Communications.Packets.Outgoing.WorldLightPacket.html",
    "title": "Class WorldLightPacket | Fibula MMO",
    "keywords": "Class WorldLightPacket Class that represents a world light packet. Inheritance System.Object WorldLightPacket Implements IOutboundPacket Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Packets.Outgoing Assembly : Fibula.Communications.Packets.dll Syntax public class WorldLightPacket : IOutboundPacket Constructors | Improve this Doc View Source WorldLightPacket(Byte, Byte) Initializes a new instance of the WorldLightPacket class. Declaration public WorldLightPacket(byte level, byte color) Parameters Type Name Description System.Byte level The light level. System.Byte color The color level. Properties | Improve this Doc View Source Color Gets the color of the light. Declaration public byte Color { get; } Property Value Type Description System.Byte | Improve this Doc View Source Level Gets the level of the light. Declaration public byte Level { get; } Property Value Type Description System.Byte | Improve this Doc View Source PacketType Gets the type of this packet. Declaration public byte PacketType { get; } Property Value Type Description System.Byte Implements IOutboundPacket Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Tests.DefaultPacketReaderTests.html": {
    "href": "code/Fibula.Communications.Tests.DefaultPacketReaderTests.html",
    "title": "Class DefaultPacketReaderTests | Fibula MMO",
    "keywords": "Class DefaultPacketReaderTests Tests for the DefaultPacketReader class. Inheritance System.Object DefaultPacketReaderTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Tests Assembly : Fibula.Communications.Tests.dll Syntax [TestClass] public class DefaultPacketReaderTests Methods | Improve this Doc View Source DefaultPacketReader_CallsReadAsBytesInfo() Checks that the DefaultPacketReader calls ReadAsBytesInfo() . Declaration [TestMethod] public void DefaultPacketReader_CallsReadAsBytesInfo() | Improve this Doc View Source DefaultPacketReader_Initialization() Checks DefaultPacketReader initialization. Declaration [TestMethod] public void DefaultPacketReader_Initialization() Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Communications.Tests.html": {
    "href": "code/Fibula.Communications.Tests.html",
    "title": "Namespace Fibula.Communications.Tests | Fibula MMO",
    "keywords": "Namespace Fibula.Communications.Tests Classes DefaultPacketReaderTests Tests for the DefaultPacketReader class. NetworkMessageTests Tests for the NetworkMessage class."
  },
  "code/Fibula.Communications.Tests.NetworkMessageTests.html": {
    "href": "code/Fibula.Communications.Tests.NetworkMessageTests.html",
    "title": "Class NetworkMessageTests | Fibula MMO",
    "keywords": "Class NetworkMessageTests Tests for the NetworkMessage class. Inheritance System.Object NetworkMessageTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Communications.Tests Assembly : Fibula.Communications.Tests.dll Syntax [TestClass] public class NetworkMessageTests Methods | Improve this Doc View Source NetworkMessage_AddBytesTest() Checks that the AddBytes(ReadOnlySpan<Byte>) works as expected. Declaration [TestMethod] public void NetworkMessage_AddBytesTest() | Improve this Doc View Source NetworkMessage_AddByteTest() Checks that the AddByte(Byte) works as expected. Declaration [TestMethod] public void NetworkMessage_AddByteTest() | Improve this Doc View Source NetworkMessage_AddStringTest() Checks that the AddString(String) works as expected. Declaration [TestMethod] public void NetworkMessage_AddStringTest() | Improve this Doc View Source NetworkMessage_AddUInt16Test() Checks that the AddUInt16(UInt16) works as expected. Declaration [TestMethod] public void NetworkMessage_AddUInt16Test() | Improve this Doc View Source NetworkMessage_AddUInt32Test() Checks that the AddUInt32(UInt32) works as expected. Declaration [TestMethod] public void NetworkMessage_AddUInt32Test() | Improve this Doc View Source NetworkMessage_CopyTest() Checks that the Copy(Nullable<Int32>) works as expected. Declaration [TestMethod] public void NetworkMessage_CopyTest() | Improve this Doc View Source NetworkMessage_GetByteTest() Checks that the GetByte() works as expected. Declaration [TestMethod] public void NetworkMessage_GetByteTest() | Improve this Doc View Source NetworkMessage_GetStringTest() Checks that the GetString() works as expected. Declaration [TestMethod] public void NetworkMessage_GetStringTest() | Improve this Doc View Source NetworkMessage_GetUInt16Test() Checks that the GetUInt16() works as expected. Declaration [TestMethod] public void NetworkMessage_GetUInt16Test() | Improve this Doc View Source NetworkMessage_GetUInt32Test() Checks that the GetUInt32() works as expected. Declaration [TestMethod] public void NetworkMessage_GetUInt32Test() | Improve this Doc View Source NetworkMessage_Initialization() Checks the NetworkMessage initialization. Declaration [TestMethod] public void NetworkMessage_Initialization() | Improve this Doc View Source NetworkMessage_PeekByteTest() Checks that the PeekByte() works as expected. Declaration [TestMethod] public void NetworkMessage_PeekByteTest() | Improve this Doc View Source NetworkMessage_ReadAsBytesInfoTest() Checks that the ReadAsBytesInfo() works as expected. Declaration [TestMethod] public void NetworkMessage_ReadAsBytesInfoTest() | Improve this Doc View Source NetworkMessage_ResetTest() Checks that the Reset() works as expected. Declaration [TestMethod] public void NetworkMessage_ResetTest() | Improve this Doc View Source NetworkMessage_ResizeTest() Checks that the Resize(Int32, Boolean) works as expected. Declaration [TestMethod] public void NetworkMessage_ResizeTest() | Improve this Doc View Source NetworkMessage_SkipBytesTest() Checks that the SkipBytes(Int32) works as expected. Declaration [TestMethod] public void NetworkMessage_SkipBytesTest() Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Creatures.CombatantCreature.html": {
    "href": "code/Fibula.Creatures.CombatantCreature.html",
    "title": "Class CombatantCreature | Fibula MMO",
    "keywords": "Class CombatantCreature Class that represents all creatures in the game. Inheritance System.Object Thing Creature CombatantCreature Player Implements ICombatant ICreatureWithExhaustion ICreature IThing IContainedThing IThingContainer ILocatable System.IEquatable < ICreature > Inherited Members Creature.ThingId Creature.Id Creature.Article Creature.Name Creature.Corpse Creature.HitpointPercentage Creature.Hitpoints Creature.MaxHitpoints Creature.Manapoints Creature.MaxManapoints Creature.CarryLocation Creature.CarryStrength Creature.Outfit Creature.Direction Creature.LastMovementCostModifier Creature.EmittedLightLevel Creature.EmittedLightColor Creature.Speed Creature.VariableSpeed Creature.BaseSpeed Creature.Flags Creature.Blood Creature.Inventory Creature.WalkPlan Creature.IsDead Creature.TurnToDirection(Direction) Creature.SetOutfit(Outfit) Creature.CanSee(ICreature) Creature.CanSee(Location) Creature.AddContent(IThingFactory, IThing, Byte) Creature.RemoveContent(IThingFactory, IThing, Byte, Byte) Creature.ReplaceContent(IThingFactory, IThing, IThing, Byte, Byte) Creature.FindThingAtIndex(Byte) Creature.DescribeForLogger() Creature.Equals(ICreature) Creature.CalculateMovementBaseSpeed() Thing.ThingChanged Thing.CanBeMoved Thing.ParentContainer Thing.Location Thing.InvokePropertyChanged(String) Thing.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Fibula.Creatures Assembly : Fibula.Creatures.dll Syntax public abstract class CombatantCreature : Creature, ICombatant, ICreatureWithExhaustion, ICreature, IThing, IContainedThing, IThingContainer, ILocatable, IEquatable<ICreature> Constructors | Improve this Doc View Source CombatantCreature(String, String, UInt16, UInt16, UInt16, UInt16, UInt16, Decimal, Decimal) Initializes a new instance of the CombatantCreature class. Declaration protected CombatantCreature(string name, string article, ushort maxHitpoints, ushort maxManapoints, ushort corpse, ushort hitpoints = 0, ushort manapoints = 0, decimal baseAttackSpeed = 1.0M, decimal baseDefenseSpeed = 2.0M) Parameters Type Name Description System.String name The name of this creature. System.String article An article for the name of this creature. System.UInt16 maxHitpoints The maximum hitpoints of the creature. System.UInt16 maxManapoints The maximum manapoints of the creature. System.UInt16 corpse The corpse of the creature. System.UInt16 hitpoints The current hitpoints of the creature. System.UInt16 manapoints The current manapoints of the creature. System.Decimal baseAttackSpeed Optional. The base attack speed for this creature. Bounded between [ MinimumCombatSpeed , MaximumCombatSpeed ] inclusive. Defaults to DefaultAttackSpeed . System.Decimal baseDefenseSpeed Optional. The base defense speed for this creature. Bounded between [ MinimumCombatSpeed , MaximumCombatSpeed ] inclusive. Defaults to DefaultDefenseSpeed . Properties | Improve this Doc View Source AttackedBy Gets the collection of ids of attackers of this combatant. Declaration public IEnumerable<uint> AttackedBy { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.UInt32 > | Improve this Doc View Source AttackSpeed Gets a metric of how fast a combatant can earn an attack credit per combat round. Declaration public decimal AttackSpeed { get; } Property Value Type Description System.Decimal | Improve this Doc View Source AutoAttackCredits Gets the number of attack credits available. Declaration public int AutoAttackCredits { get; } Property Value Type Description System.Int32 | Improve this Doc View Source AutoAttackMaximumCredits Gets the number of maximum attack credits. Declaration public ushort AutoAttackMaximumCredits { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source AutoAttackRange Gets the range that the auto attack has. Declaration public abstract byte AutoAttackRange { get; } Property Value Type Description System.Byte | Improve this Doc View Source AutoAttackTarget Gets the current target combatant. Declaration public ICombatant AutoAttackTarget { get; } Property Value Type Description ICombatant | Improve this Doc View Source AutoDefenseCredits Gets the number of auto defense credits available. Declaration public int AutoDefenseCredits { get; } Property Value Type Description System.Int32 | Improve this Doc View Source AutoDefenseMaximumCredits Gets the number of maximum defense credits. Declaration public ushort AutoDefenseMaximumCredits { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source ChaseMode Gets or sets the chase mode selected by this combatant. Declaration public ChaseMode ChaseMode { get; set; } Property Value Type Description ChaseMode | Improve this Doc View Source ChasingTarget Gets the target being chased, if any. Declaration public ICombatant ChasingTarget { get; } Property Value Type Description ICombatant | Improve this Doc View Source DamageTakenDistribution Gets the distribution of damage taken by any combatant that has attacked this combatant while the current combat is active. Declaration public IEnumerable<(uint, uint)> DamageTakenDistribution { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.ValueTuple < System.UInt32 , System.UInt32 >> | Improve this Doc View Source DefenseSpeed Gets a metric of how fast a combatant can earn a defense credit per combat round. Declaration public decimal DefenseSpeed { get; } Property Value Type Description System.Decimal | Improve this Doc View Source ExhaustionInformation Gets the current exhaustion information for the entity. Declaration public IDictionary<ExhaustionType, DateTimeOffset> ExhaustionInformation { get; } Property Value Type Description System.Collections.Generic.IDictionary < ExhaustionType , System.DateTimeOffset > Remarks The key is a ExhaustionType , and the value is a System.DateTimeOffset : the date and time at which exhaustion is completely recovered. | Improve this Doc View Source FightMode Gets or sets the fight mode selected by this combatant. Declaration public FightMode FightMode { get; set; } Property Value Type Description FightMode | Improve this Doc View Source PendingAutoAttackOperation Gets or sets the pending auto attack operation of this player, if any. Declaration public IOperation PendingAutoAttackOperation { get; set; } Property Value Type Description IOperation Methods | Improve this Doc View Source AddExhaustion(ExhaustionType, DateTimeOffset, TimeSpan) Adds exhaustion of the given type. Declaration public void AddExhaustion(ExhaustionType type, DateTimeOffset fromTime, TimeSpan timeSpan) Parameters Type Name Description ExhaustionType type The type of exhaustion to add. System.DateTimeOffset fromTime The reference time from which to add. System.TimeSpan timeSpan The amount of time to add exhaustion for. | Improve this Doc View Source AddExhaustion(ExhaustionType, DateTimeOffset, UInt32) Adds exhaustion of the given type. Declaration public void AddExhaustion(ExhaustionType type, DateTimeOffset fromTime, uint milliseconds) Parameters Type Name Description ExhaustionType type The type of exhaustion to add. System.DateTimeOffset fromTime The reference time from which to add. System.UInt32 milliseconds The amount of time in milliseconds to add exhaustion for. | Improve this Doc View Source ApplyDamage(DamageInfo, UInt32) Applies damage to the combatant, which is expected to apply reductions and protections. Declaration public DamageInfo ApplyDamage(DamageInfo damageInfo, uint fromCombatantId = 0U) Parameters Type Name Description DamageInfo damageInfo The information of the damage to make, without reductions. System.UInt32 fromCombatantId The combatant from which to track the damage, if any. Returns Type Description DamageInfo The information about the damage actually done. | Improve this Doc View Source ApplyDamageModifiers(ref DamageInfo) Applies damage modifiers to the damage information provided. Declaration protected abstract void ApplyDamageModifiers(ref DamageInfo damageInfo) Parameters Type Name Description DamageInfo damageInfo The damage information. | Improve this Doc View Source CalculateRemainingCooldownTime(ExhaustionType, DateTimeOffset) Calculates the remaining System.TimeSpan until the entity's exhaustion is recovered from. Declaration public TimeSpan CalculateRemainingCooldownTime(ExhaustionType type, DateTimeOffset currentTime) Parameters Type Name Description ExhaustionType type The type of exhaustion. System.DateTimeOffset currentTime The current time to calculate from. Returns Type Description System.TimeSpan The System.TimeSpan result. | Improve this Doc View Source ConsumeCredits(CombatCreditType, Byte) Consumes combat credits to the combatant. Declaration public void ConsumeCredits(CombatCreditType creditType, byte amount) Parameters Type Name Description CombatCreditType creditType The type of combat credits to consume. System.Byte amount The amount of credits to consume. | Improve this Doc View Source DecreaseAttackSpeed(Decimal) Decreases the attack speed of this combatant. Declaration public void DecreaseAttackSpeed(decimal decreaseAmount) Parameters Type Name Description System.Decimal decreaseAmount The amount by which to decrease. | Improve this Doc View Source DecreaseDefenseSpeed(Decimal) Decreases the defense speed of this combatant. Declaration public void DecreaseDefenseSpeed(decimal decreaseAmount) Parameters Type Name Description System.Decimal decreaseAmount The amount by which to decrease. | Improve this Doc View Source IncreaseAttackSpeed(Decimal) Increases the attack speed of this combatant. Declaration public void IncreaseAttackSpeed(decimal increaseAmount) Parameters Type Name Description System.Decimal increaseAmount The amount by which to increase. | Improve this Doc View Source IncreaseDefenseSpeed(Decimal) Increases the defense speed of this combatant. Declaration public void IncreaseDefenseSpeed(decimal increaseAmount) Parameters Type Name Description System.Decimal increaseAmount The amount by which to increase. | Improve this Doc View Source RestoreCredits(CombatCreditType, Byte) Restores combat credits to the combatant. Declaration public void RestoreCredits(CombatCreditType creditType, byte amount) Parameters Type Name Description CombatCreditType creditType The type of combat credits to restore. System.Byte amount The amount of credits to restore. | Improve this Doc View Source SetAttackTarget(ICombatant) Sets the attack target of this combatant. Declaration public bool SetAttackTarget(ICombatant otherCombatant) Parameters Type Name Description ICombatant otherCombatant The other target combatant, if any. Returns Type Description System.Boolean True if the target was actually changed, false otherwise. | Improve this Doc View Source SetChaseTarget(ICombatant) Sets the chasing target of this combatant. Declaration public bool SetChaseTarget(ICombatant target) Parameters Type Name Description ICombatant target The target to chase, if any. Returns Type Description System.Boolean True if the target was actually changed, false otherwise. Events | Improve this Doc View Source Death Event to call when the combatant dies. Declaration public event OnDeath Death Event Type Type Description OnDeath | Improve this Doc View Source HealthChanged Event to call when the combatant's health changes. Declaration public event OnHealthChange HealthChanged Event Type Type Description OnHealthChange Implements ICombatant ICreatureWithExhaustion ICreature IThing IContainedThing IThingContainer ILocatable System.IEquatable<T> Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Creatures.Contracts.Abstractions.html": {
    "href": "code/Fibula.Creatures.Contracts.Abstractions.html",
    "title": "Namespace Fibula.Creatures.Contracts.Abstractions | Fibula MMO",
    "keywords": "Namespace Fibula.Creatures.Contracts.Abstractions Interfaces ICreature Interface for all creatures in the game. ICreatureCreationMetadata Interface for creature creation metadata information. ICreatureFactory Interface for an ICreature factory. ICreatureFinder Interface for a creature finder. ICreatureManager Interface for a creature manager. IInventory Interface for a creature that keeps an inventory of IItem s in itself, and the properties it imbues the owner ICreature with. IPlayer Interface for character players in the game."
  },
  "code/Fibula.Creatures.Contracts.Abstractions.ICreature.html": {
    "href": "code/Fibula.Creatures.Contracts.Abstractions.ICreature.html",
    "title": "Interface ICreature | Fibula MMO",
    "keywords": "Interface ICreature Interface for all creatures in the game. Inherited Members IThing.ThingChanged IThing.ThingId IThing.CanBeMoved IThing.DescribeForLogger() IContainedThing.ParentContainer IThingContainer.FindThingAtIndex(Byte) IThingContainer.AddContent(IThingFactory, IThing, Byte) IThingContainer.RemoveContent(IThingFactory, IThing, Byte, Byte) IThingContainer.ReplaceContent(IThingFactory, IThing, IThing, Byte, Byte) ILocatable.Location ILocatable.CarryLocation System.IEquatable<Fibula.Creatures.Contracts.Abstractions.ICreature>.Equals(Fibula.Creatures.Contracts.Abstractions.ICreature) Namespace : Fibula.Creatures.Contracts.Abstractions Assembly : Fibula.Creatures.Contracts.dll Syntax public interface ICreature : IThing, IContainedThing, IThingContainer, ILocatable, IEquatable<ICreature> Properties | Improve this Doc View Source Article Gets the article in the name of the creature. Declaration string Article { get; } Property Value Type Description System.String | Improve this Doc View Source Blood Gets the creature's blood type. Declaration BloodType Blood { get; } Property Value Type Description BloodType | Improve this Doc View Source CarryStrength Gets the creature's strength value for carrying stuff. Declaration decimal CarryStrength { get; } Property Value Type Description System.Decimal | Improve this Doc View Source Corpse Gets the creature's corpse. Declaration ushort Corpse { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source Direction Gets the creature's facing direction. Declaration Direction Direction { get; } Property Value Type Description Direction | Improve this Doc View Source EmittedLightColor Gets this creature's emitted light color. Declaration byte EmittedLightColor { get; } Property Value Type Description System.Byte | Improve this Doc View Source EmittedLightLevel Gets this creature's emitted light level. Declaration byte EmittedLightLevel { get; } Property Value Type Description System.Byte | Improve this Doc View Source Flags Gets this creature's flags. Declaration uint Flags { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source HitpointPercentage Gets the percentage of Hitpoints left out of MaxHitpoints . Declaration byte HitpointPercentage { get; } Property Value Type Description System.Byte | Improve this Doc View Source Hitpoints Gets the creature's current hitpoints. Declaration ushort Hitpoints { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source Id Gets the creature's in-game id. Declaration uint Id { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source Inventory Gets the inventory for the entity. Declaration IInventory Inventory { get; } Property Value Type Description IInventory | Improve this Doc View Source IsDead Gets a value indicating whether the creature is dead. Declaration bool IsDead { get; } Property Value Type Description System.Boolean | Improve this Doc View Source LastMovementCostModifier Gets or sets the creature's last move modifier. Declaration decimal LastMovementCostModifier { get; set; } Property Value Type Description System.Decimal | Improve this Doc View Source Manapoints Gets the creature's current manapoints. Declaration ushort Manapoints { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source MaxHitpoints Gets the creature's maximum hitpoints. Declaration ushort MaxHitpoints { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source MaxManapoints Gets the creature's maximum manapoints. Declaration ushort MaxManapoints { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source Name Gets the name of the creature. Declaration string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Outfit Gets the creature's outfit. Declaration Outfit Outfit { get; } Property Value Type Description Outfit | Improve this Doc View Source Speed Gets this creature's movement speed. Declaration ushort Speed { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source WalkPlan Gets or sets this creature's walk plan. Declaration WalkPlan WalkPlan { get; set; } Property Value Type Description WalkPlan Methods | Improve this Doc View Source CanSee(Location) Checks if this creature can see a given location. Declaration bool CanSee(Location location) Parameters Type Name Description Location location The location to check against. Returns Type Description System.Boolean True if this creature can see the given location, false otherwise. | Improve this Doc View Source CanSee(ICreature) Checks if this creature can see a given creature. Declaration bool CanSee(ICreature creature) Parameters Type Name Description ICreature creature The creature to check against. Returns Type Description System.Boolean True if this creature can see the given creature, false otherwise. | Improve this Doc View Source SetOutfit(Outfit) Attempts to set this creature's Outfit . Declaration void SetOutfit(Outfit outfit) Parameters Type Name Description Outfit outfit The new outfit to change to. | Improve this Doc View Source TurnToDirection(Direction) Turns this creature to a given direction. Declaration void TurnToDirection(Direction direction) Parameters Type Name Description Direction direction The direction to turn the creature to. Extension Methods ContainerExtensions.GetParentContainerHierarchy(IContainedThing, Boolean) ContainerExtensions.GetParentContainerHierarchy(IThingContainer, Boolean) CreatureExtensions.CalculateStepDuration(ICreature, ITile) ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Creatures.Contracts.Abstractions.ICreatureCreationMetadata.html": {
    "href": "code/Fibula.Creatures.Contracts.Abstractions.ICreatureCreationMetadata.html",
    "title": "Interface ICreatureCreationMetadata | Fibula MMO",
    "keywords": "Interface ICreatureCreationMetadata Interface for creature creation metadata information. Namespace : Fibula.Creatures.Contracts.Abstractions Assembly : Fibula.Creatures.Contracts.dll Syntax public interface ICreatureCreationMetadata Properties | Improve this Doc View Source Corpse Gets the corpse id to give to the creature. Declaration ushort Corpse { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source Id Gets the identifier to use when creating the creature. Declaration string Id { get; } Property Value Type Description System.String | Improve this Doc View Source MaxHitpoints Gets the max hitpoints to create the creature with. Declaration ushort MaxHitpoints { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source MaxManapoints Gets the max manapoints to create the creature with. Declaration ushort MaxManapoints { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source Name Gets the name to use for the creature. Declaration string Name { get; } Property Value Type Description System.String Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Creatures.Contracts.Abstractions.ICreatureFactory.html": {
    "href": "code/Fibula.Creatures.Contracts.Abstractions.ICreatureFactory.html",
    "title": "Interface ICreatureFactory | Fibula MMO",
    "keywords": "Interface ICreatureFactory Interface for an ICreature factory. Inherited Members IThingFactory.Create(IThingCreationArguments) Namespace : Fibula.Creatures.Contracts.Abstractions Assembly : Fibula.Creatures.Contracts.dll Syntax public interface ICreatureFactory : IThingFactory Methods | Improve this Doc View Source CreateCreature(IThingCreationArguments) Creates a new implementation instance of ICreature depending on the chosen type. Declaration ICreature CreateCreature(IThingCreationArguments creationArguments) Parameters Type Name Description IThingCreationArguments creationArguments The creation arguments for the new creature. Returns Type Description ICreature A new instance of the chosen ICreature implementation. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Creatures.Contracts.Abstractions.ICreatureFinder.html": {
    "href": "code/Fibula.Creatures.Contracts.Abstractions.ICreatureFinder.html",
    "title": "Interface ICreatureFinder | Fibula MMO",
    "keywords": "Interface ICreatureFinder Interface for a creature finder. Namespace : Fibula.Creatures.Contracts.Abstractions Assembly : Fibula.Creatures.Contracts.dll Syntax public interface ICreatureFinder Methods | Improve this Doc View Source FindAllCreatures() Gets all creatures known to this finder. Declaration IEnumerable<ICreature> FindAllCreatures() Returns Type Description System.Collections.Generic.IEnumerable < ICreature > A collection of creature instances. | Improve this Doc View Source FindAllPlayers() Gets all players known to this finder. Declaration IEnumerable<IPlayer> FindAllPlayers() Returns Type Description System.Collections.Generic.IEnumerable < IPlayer > A collection of player instances. | Improve this Doc View Source FindCreatureById(UInt32) Looks for a single creature with the id. Declaration ICreature FindCreatureById(uint creatureId) Parameters Type Name Description System.UInt32 creatureId The creature id for which to look. Returns Type Description ICreature The creature instance, if found, and null otherwise. | Improve this Doc View Source FindPlayerById(UInt32) Looks for a single player with the id. Declaration IPlayer FindPlayerById(uint playerId) Parameters Type Name Description System.UInt32 playerId The player id for which to look. Returns Type Description IPlayer The player instance, if found, and null otherwise. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Creatures.Contracts.Abstractions.ICreatureManager.html": {
    "href": "code/Fibula.Creatures.Contracts.Abstractions.ICreatureManager.html",
    "title": "Interface ICreatureManager | Fibula MMO",
    "keywords": "Interface ICreatureManager Interface for a creature manager. Inherited Members ICreatureFinder.FindCreatureById(UInt32) ICreatureFinder.FindPlayerById(UInt32) ICreatureFinder.FindAllCreatures() ICreatureFinder.FindAllPlayers() Namespace : Fibula.Creatures.Contracts.Abstractions Assembly : Fibula.Creatures.Contracts.dll Syntax public interface ICreatureManager : ICreatureFinder Methods | Improve this Doc View Source RegisterCreature(ICreature) Registers a new creature to the manager. Declaration void RegisterCreature(ICreature creature) Parameters Type Name Description ICreature creature The creature to register. | Improve this Doc View Source UnregisterCreature(ICreature) Unregisters a creature from the manager. Declaration void UnregisterCreature(ICreature creature) Parameters Type Name Description ICreature creature The creature to unregister. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Creatures.Contracts.Abstractions.IInventory.html": {
    "href": "code/Fibula.Creatures.Contracts.Abstractions.IInventory.html",
    "title": "Interface IInventory | Fibula MMO",
    "keywords": "Interface IInventory Interface for a creature that keeps an inventory of IItem s in itself, and the properties it imbues the owner ICreature with. Namespace : Fibula.Creatures.Contracts.Abstractions Assembly : Fibula.Creatures.Contracts.dll Syntax public interface IInventory Properties | Improve this Doc View Source Item[Byte] Gets the IItem at a given position of this inventory. Declaration IItem this[byte position] { get; } Parameters Type Name Description System.Byte position The position where to get the item from. Property Value Type Description IItem The IItem , if any was found. | Improve this Doc View Source Owner Gets a reference to the owner of this inventory. Declaration ICreature Owner { get; } Property Value Type Description ICreature Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Creatures.Contracts.Abstractions.IPlayer.html": {
    "href": "code/Fibula.Creatures.Contracts.Abstractions.IPlayer.html",
    "title": "Interface IPlayer | Fibula MMO",
    "keywords": "Interface IPlayer Interface for character players in the game. Inherited Members ICreature.Id ICreature.Blood ICreature.Article ICreature.Name ICreature.Corpse ICreature.HitpointPercentage ICreature.Hitpoints ICreature.MaxHitpoints ICreature.Manapoints ICreature.MaxManapoints ICreature.CarryStrength ICreature.Outfit ICreature.Direction ICreature.LastMovementCostModifier ICreature.EmittedLightLevel ICreature.EmittedLightColor ICreature.Speed ICreature.Flags ICreature.Inventory ICreature.IsDead ICreature.WalkPlan ICreature.CanSee(ICreature) ICreature.CanSee(Location) ICreature.TurnToDirection(Direction) ICreature.SetOutfit(Outfit) IThing.ThingChanged IThing.ThingId IThing.CanBeMoved IThing.DescribeForLogger() IContainedThing.ParentContainer IThingContainer.FindThingAtIndex(Byte) IThingContainer.AddContent(IThingFactory, IThing, Byte) IThingContainer.RemoveContent(IThingFactory, IThing, Byte, Byte) IThingContainer.ReplaceContent(IThingFactory, IThing, IThing, Byte, Byte) ILocatable.Location ILocatable.CarryLocation System.IEquatable<Fibula.Creatures.Contracts.Abstractions.ICreature>.Equals(Fibula.Creatures.Contracts.Abstractions.ICreature) Namespace : Fibula.Creatures.Contracts.Abstractions Assembly : Fibula.Creatures.Contracts.dll Syntax public interface IPlayer : ICreature, IThing, IContainedThing, IThingContainer, ILocatable, IEquatable<ICreature> Properties | Improve this Doc View Source CharacterId Gets the player's character id. Declaration string CharacterId { get; } Property Value Type Description System.String | Improve this Doc View Source Client Gets this player's client. Declaration IClient Client { get; } Property Value Type Description IClient | Improve this Doc View Source IsAllowedToLogOut Gets a value indicating whether this player is allowed to logout. Declaration bool IsAllowedToLogOut { get; } Property Value Type Description System.Boolean | Improve this Doc View Source PermissionsLevel Gets the player's permissions level. Declaration byte PermissionsLevel { get; } Property Value Type Description System.Byte | Improve this Doc View Source SoulPoints Gets the player's soul points. Declaration byte SoulPoints { get; } Property Value Type Description System.Byte Extension Methods ContainerExtensions.GetParentContainerHierarchy(IContainedThing, Boolean) ContainerExtensions.GetParentContainerHierarchy(IThingContainer, Boolean) CreatureExtensions.CalculateStepDuration(ICreature, ITile) ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Creatures.Contracts.Constants.CreatureConstants.html": {
    "href": "code/Fibula.Creatures.Contracts.Constants.CreatureConstants.html",
    "title": "Class CreatureConstants | Fibula MMO",
    "keywords": "Class CreatureConstants Static class that contains contants for ICreature derived clases. Inheritance System.Object CreatureConstants Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Creatures.Contracts.Constants Assembly : Fibula.Creatures.Contracts.dll Syntax public static class CreatureConstants Fields | Improve this Doc View Source CreatureThingId The id for things that are creatures. Declaration public const ushort CreatureThingId = 99 Field Value Type Description System.UInt16 | Improve this Doc View Source MaxCreatureSpeed The maximum speed allowed for creatures. Declaration public const ushort MaxCreatureSpeed = 1500 Field Value Type Description System.UInt16 | Improve this Doc View Source MaxPlayerSpeed The maximum speed allowed for players. Declaration public const ushort MaxPlayerSpeed = 1500 Field Value Type Description System.UInt16 | Improve this Doc View Source MinCreatureSpeed The minimum speed allowed for creatures. Declaration public const ushort MinCreatureSpeed = 0 Field Value Type Description System.UInt16 | Improve this Doc View Source MinPlayerSpeed The minimum speed allowed for players. Declaration public const ushort MinPlayerSpeed = 10 Field Value Type Description System.UInt16"
  },
  "code/Fibula.Creatures.Contracts.Constants.html": {
    "href": "code/Fibula.Creatures.Contracts.Constants.html",
    "title": "Namespace Fibula.Creatures.Contracts.Constants | Fibula MMO",
    "keywords": "Namespace Fibula.Creatures.Contracts.Constants Classes CreatureConstants Static class that contains contants for ICreature derived clases."
  },
  "code/Fibula.Creatures.Contracts.Enumerations.CreatureFlag.html": {
    "href": "code/Fibula.Creatures.Contracts.Enumerations.CreatureFlag.html",
    "title": "Enum CreatureFlag | Fibula MMO",
    "keywords": "Enum CreatureFlag Enumerates the distinct flags of creatures. Namespace : Fibula.Creatures.Contracts.Enumerations Assembly : Fibula.Creatures.Contracts.dll Syntax public enum CreatureFlag : uint Fields Name Description DistanceFighting The creature figths at a distance. KickBoxes The creature can kick movable objects and destroy them. KickCreatures The creature can push or kill other cretuatures that don't have the Unpushable flag. NoBurning The creature is immune to fire. NoConvince The creature cannot be convinced. NoEnergy The creature is immune to energy. NoHit The creature cannot be targeted. NoIllusion The illusion spell cannot be used to turn into this creature. NoLifeDrain The creature is immune to life draining. None No flags. NoParalyze The creature is immune to movement impairness spells. NoPoison The creature is immune to poison. NoSummon The creature cannot be summoned. SeeInvisible The creature can see invisible players. Unpushable The creature cannot pushed or killed by other cretuatures with the KickCreatures flag. Extension Methods ObjectExtensions.YieldSingleItem<CreatureFlag>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<CreatureFlag>(String)"
  },
  "code/Fibula.Creatures.Contracts.Enumerations.CreatureType.html": {
    "href": "code/Fibula.Creatures.Contracts.Enumerations.CreatureType.html",
    "title": "Enum CreatureType | Fibula MMO",
    "keywords": "Enum CreatureType Enumerates the different types of creatures. Namespace : Fibula.Creatures.Contracts.Enumerations Assembly : Fibula.Creatures.Contracts.dll Syntax public enum CreatureType Fields Name Description Monster A monster. NonPlayerCharacter An NPC. Player A player. Extension Methods ObjectExtensions.YieldSingleItem<CreatureType>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<CreatureType>(String)"
  },
  "code/Fibula.Creatures.Contracts.Enumerations.html": {
    "href": "code/Fibula.Creatures.Contracts.Enumerations.html",
    "title": "Namespace Fibula.Creatures.Contracts.Enumerations | Fibula MMO",
    "keywords": "Namespace Fibula.Creatures.Contracts.Enumerations Enums CreatureFlag Enumerates the distinct flags of creatures. CreatureType Enumerates the different types of creatures."
  },
  "code/Fibula.Creatures.Contracts.Structs.html": {
    "href": "code/Fibula.Creatures.Contracts.Structs.html",
    "title": "Namespace Fibula.Creatures.Contracts.Structs | Fibula MMO",
    "keywords": "Namespace Fibula.Creatures.Contracts.Structs Structs Outfit Structure for creature outfits. Spawn Structure that represents spawns."
  },
  "code/Fibula.Creatures.Contracts.Structs.Outfit.html": {
    "href": "code/Fibula.Creatures.Contracts.Structs.Outfit.html",
    "title": "Struct Outfit | Fibula MMO",
    "keywords": "Struct Outfit Structure for creature outfits. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Fibula.Creatures.Contracts.Structs Assembly : Fibula.Creatures.Contracts.dll Syntax public struct Outfit Properties | Improve this Doc View Source Body Gets or sets this outfit's body value. Declaration public byte Body { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source Feet Gets or sets this outfit's feet value. Declaration public byte Feet { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source Head Gets or sets this outfit's head value. Declaration public byte Head { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source Id Gets or sets this outfit's id. Declaration public ushort Id { get; set; } Property Value Type Description System.UInt16 | Improve this Doc View Source ItemIdLookAlike Gets or sets the outfit's look alike id of an item. Declaration public ushort ItemIdLookAlike { get; set; } Property Value Type Description System.UInt16 | Improve this Doc View Source Legs Gets or sets this outfit's legs value. Declaration public byte Legs { get; set; } Property Value Type Description System.Byte Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Creatures.Contracts.Structs.Spawn.html": {
    "href": "code/Fibula.Creatures.Contracts.Structs.Spawn.html",
    "title": "Struct Spawn | Fibula MMO",
    "keywords": "Struct Spawn Structure that represents spawns. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Fibula.Creatures.Contracts.Structs Assembly : Fibula.Creatures.Contracts.dll Syntax public struct Spawn Properties | Improve this Doc View Source Count Gets or sets the count of entities to spawn. Declaration public byte Count { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source Id Gets or sets the id of entities in this spawn. Declaration public ushort Id { get; set; } Property Value Type Description System.UInt16 | Improve this Doc View Source Location Gets or sets the location of the spawn. Declaration public Location Location { get; set; } Property Value Type Description Location | Improve this Doc View Source Radius Gets or sets the radius of the spawn. Declaration public ushort Radius { get; set; } Property Value Type Description System.UInt16 | Improve this Doc View Source Regen Gets or sets the regeneration time of this spawn. Declaration public TimeSpan Regen { get; set; } Property Value Type Description System.TimeSpan Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Creatures.Creature.html": {
    "href": "code/Fibula.Creatures.Creature.html",
    "title": "Class Creature | Fibula MMO",
    "keywords": "Class Creature Class that represents all creatures in the game. Inheritance System.Object Thing Creature CombatantCreature Implements ICreature IThing IContainedThing IThingContainer ILocatable System.IEquatable < ICreature > Inherited Members Thing.ThingChanged Thing.CanBeMoved Thing.ParentContainer Thing.Location Thing.InvokePropertyChanged(String) Thing.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Fibula.Creatures Assembly : Fibula.Creatures.dll Syntax public abstract class Creature : Thing, ICreature, IThing, IContainedThing, IThingContainer, ILocatable, IEquatable<ICreature> Constructors | Improve this Doc View Source Creature(String, String, UInt16, UInt16, UInt16, UInt16, UInt16) Initializes a new instance of the Creature class. Declaration protected Creature(string name, string article, ushort maxHitpoints, ushort maxManapoints, ushort corpse = 0, ushort hitpoints = 0, ushort manapoints = 0) Parameters Type Name Description System.String name The name of this creature. System.String article An article for the name of this creature. System.UInt16 maxHitpoints The maximum hitpoints of the creature. System.UInt16 maxManapoints The maximum manapoints of the creature. System.UInt16 corpse The corpse of the creature. System.UInt16 hitpoints The current hitpoints of the creature. System.UInt16 manapoints The current manapoints of the creature. Properties | Improve this Doc View Source Article Gets the article in the name of the creature. Declaration public string Article { get; } Property Value Type Description System.String | Improve this Doc View Source BaseSpeed Gets or sets this creature's base speed. Declaration public int BaseSpeed { get; protected set; } Property Value Type Description System.Int32 | Improve this Doc View Source Blood Gets or sets this creature's blood type. Declaration public BloodType Blood { get; protected set; } Property Value Type Description BloodType | Improve this Doc View Source CarryLocation Gets the location where this thing is being carried at, which is null for creatures. Declaration public override Location? CarryLocation { get; } Property Value Type Description System.Nullable < Location > Overrides Thing.CarryLocation | Improve this Doc View Source CarryStrength Gets or sets the creature's strength to carry stuff. Declaration public decimal CarryStrength { get; protected set; } Property Value Type Description System.Decimal | Improve this Doc View Source Corpse Gets the corpse of the creature. Declaration public ushort Corpse { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source Direction Gets or sets the direction that this creature is facing. Declaration public Direction Direction { get; protected set; } Property Value Type Description Direction | Improve this Doc View Source EmittedLightColor Gets or sets this creature's light color. Declaration public byte EmittedLightColor { get; protected set; } Property Value Type Description System.Byte | Improve this Doc View Source EmittedLightLevel Gets or sets this creature's light level. Declaration public byte EmittedLightLevel { get; protected set; } Property Value Type Description System.Byte | Improve this Doc View Source Flags Gets this creature's flags. Declaration public uint Flags { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source HitpointPercentage Gets the percentage of Hitpoints left out of MaxHitpoints . Declaration public byte HitpointPercentage { get; } Property Value Type Description System.Byte | Improve this Doc View Source Hitpoints Gets or sets thre current hitpoints. Declaration public ushort Hitpoints { get; protected set; } Property Value Type Description System.UInt16 | Improve this Doc View Source Id Gets the creature's in-game id. Declaration public uint Id { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source Inventory Gets or sets the inventory for the creature. Declaration public abstract IInventory Inventory { get; protected set; } Property Value Type Description IInventory | Improve this Doc View Source IsDead Gets a value indicating whether the creature is dead. Declaration public bool IsDead { get; } Property Value Type Description System.Boolean | Improve this Doc View Source LastMovementCostModifier Gets or sets the creature's last move modifier. Declaration public decimal LastMovementCostModifier { get; set; } Property Value Type Description System.Decimal | Improve this Doc View Source Manapoints Gets the current manapoints. Declaration public ushort Manapoints { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source MaxHitpoints Gets the maximum hitpoints. Declaration public ushort MaxHitpoints { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source MaxManapoints Gets the maximum manapoints. Declaration public ushort MaxManapoints { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source Name Gets the name of the creature. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Outfit Gets or sets the outfit of this creature. Declaration public Outfit Outfit { get; protected set; } Property Value Type Description Outfit | Improve this Doc View Source Speed Gets or sets this creature's speed. Declaration public abstract ushort Speed { get; protected set; } Property Value Type Description System.UInt16 | Improve this Doc View Source ThingId Gets the id of this creature. Declaration public override ushort ThingId { get; } Property Value Type Description System.UInt16 Overrides Thing.ThingId | Improve this Doc View Source VariableSpeed Gets or sets this creature's variable speed. Declaration public int VariableSpeed { get; protected set; } Property Value Type Description System.Int32 | Improve this Doc View Source WalkPlan Gets or sets this creature's walk plan. Declaration public WalkPlan WalkPlan { get; set; } Property Value Type Description WalkPlan Methods | Improve this Doc View Source AddContent(IThingFactory, IThing, Byte) Attempts to add a IThing to this container. Declaration public (bool result, IThing remainder) AddContent(IThingFactory thingFactory, IThing thing, byte index = 255) Parameters Type Name Description IThingFactory thingFactory A reference to the factory of things to use. IThing thing The IThing to add to the container. System.Byte index Optional. The index at which to add the IThing . Defaults to byte.MaxValue, which instructs to add the IThing at any free index. Returns Type Description System.ValueTuple < System.Boolean , IThing > A tuple with a value indicating whether the attempt was at least partially successful, and false otherwise. If the result was only partially successful, a remainder of the thing may be returned. | Improve this Doc View Source CalculateMovementBaseSpeed() Calculates the base movement speed of the creature. Declaration protected virtual ushort CalculateMovementBaseSpeed() Returns Type Description System.UInt16 The base movement speed of the creature. | Improve this Doc View Source CanSee(Location) Checks if this creature can see a given location. Declaration public bool CanSee(Location location) Parameters Type Name Description Location location The location to check against. Returns Type Description System.Boolean True if this creature can see the given location, false otherwise. | Improve this Doc View Source CanSee(ICreature) Checks if this creature can see a given creature. Declaration public bool CanSee(ICreature otherCreature) Parameters Type Name Description ICreature otherCreature The creature to check against. Returns Type Description System.Boolean True if this creature can see the given creature, false otherwise. | Improve this Doc View Source DescribeForLogger() Provides a string describing the current creature for logging purposes. Declaration public override string DescribeForLogger() Returns Type Description System.String The string to log. Overrides Thing.DescribeForLogger() | Improve this Doc View Source Equals(ICreature) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(ICreature other) Parameters Type Name Description ICreature other The other object to compare against. Returns Type Description System.Boolean True if the current object is equal to the other parameter, false otherwise. | Improve this Doc View Source FindThingAtIndex(Byte) Attempts to find an IThing whitin this container. Declaration public IThing FindThingAtIndex(byte index) Parameters Type Name Description System.Byte index The index at which to look for the IThing . Returns Type Description IThing The IThing found at the index, if any was found. | Improve this Doc View Source RemoveContent(IThingFactory, ref IThing, Byte, Byte) Attempts to remove a thing from this container. Declaration public (bool result, IThing remainder) RemoveContent(IThingFactory thingFactory, ref IThing thing, byte index = 255, byte amount = 1) Parameters Type Name Description IThingFactory thingFactory A reference to the factory of things to use. IThing thing The IThing to remove from the container. System.Byte index Optional. The index from which to remove the IThing . Defaults to byte.MaxValue, which instructs to remove the IThing if found at any index. System.Byte amount Optional. The amount of the thing to remove. Returns Type Description System.ValueTuple < System.Boolean , IThing > A tuple with a value indicating whether the attempt was at least partially successful, and false otherwise. If the result was only partially successful, a remainder of the thing may be returned. | Improve this Doc View Source ReplaceContent(IThingFactory, IThing, IThing, Byte, Byte) Attempts to replace a IThing from this container with another. Declaration public (bool result, IThing remainderToChange) ReplaceContent(IThingFactory thingFactory, IThing fromThing, IThing toThing, byte index = 255, byte amount = 1) Parameters Type Name Description IThingFactory thingFactory A reference to the factory of things to use. IThing fromThing The IThing to remove from the container. IThing toThing The IThing to add to the container. System.Byte index Optional. The index from which to replace the IThing . Defaults to byte.MaxValue, which instructs to replace the IThing if found at any index. System.Byte amount Optional. The amount of the fromThing to replace. Returns Type Description System.ValueTuple < System.Boolean , IThing > A tuple with a value indicating whether the attempt was at least partially successful, and false otherwise. If the result was only partially successful, a remainder of the thing may be returned. | Improve this Doc View Source SetOutfit(Outfit) Attempts to set this creature's Outfit . Declaration public void SetOutfit(Outfit outfit) Parameters Type Name Description Outfit outfit The new outfit to change to. | Improve this Doc View Source TurnToDirection(Direction) Turns this creature to a given direction. Declaration public void TurnToDirection(Direction direction) Parameters Type Name Description Direction direction The direction to turn the creature to. Implements ICreature IThing IContainedThing IThingContainer ILocatable System.IEquatable<T> Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Creatures.CreatureCreationArguments.html": {
    "href": "code/Fibula.Creatures.CreatureCreationArguments.html",
    "title": "Class CreatureCreationArguments | Fibula MMO",
    "keywords": "Class CreatureCreationArguments Class that represents creation arguments for creatures. Inheritance System.Object CreatureCreationArguments PlayerCreationArguments Implements IThingCreationArguments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Creatures Assembly : Fibula.Creatures.dll Syntax public class CreatureCreationArguments : IThingCreationArguments Properties | Improve this Doc View Source Metadata Gets or sets the metadata for the creature being created. Declaration public ICreatureCreationMetadata Metadata { get; set; } Property Value Type Description ICreatureCreationMetadata | Improve this Doc View Source Type Gets or sets the type of creature being created. Declaration public CreatureType Type { get; set; } Property Value Type Description CreatureType Implements IThingCreationArguments Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Creatures.CreatureFactory.html": {
    "href": "code/Fibula.Creatures.CreatureFactory.html",
    "title": "Class CreatureFactory | Fibula MMO",
    "keywords": "Class CreatureFactory Class that represents a factory of creatures. Inheritance System.Object CreatureFactory Implements ICreatureFactory IThingFactory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Creatures Assembly : Fibula.Creatures.dll Syntax public class CreatureFactory : ICreatureFactory, IThingFactory Properties | Improve this Doc View Source ItemFactory Gets the item factory in use. Declaration public IItemFactory ItemFactory { get; } Property Value Type Description IItemFactory Methods | Improve this Doc View Source Create(IThingCreationArguments) Creates a new IThing . Declaration public IThing Create(IThingCreationArguments creationArguments) Parameters Type Name Description IThingCreationArguments creationArguments The arguments for the IThing creation. Returns Type Description IThing A new instance of the IThing . | Improve this Doc View Source CreateCreature(IThingCreationArguments) Creates a new implementation instance of ICreature depending on the chosen type. Declaration public ICreature CreateCreature(IThingCreationArguments creationArguments) Parameters Type Name Description IThingCreationArguments creationArguments The arguments for the IThing creation. Returns Type Description ICreature A new instance of the chosen ICreature implementation. Implements ICreatureFactory IThingFactory Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Creatures.CreatureManager.html": {
    "href": "code/Fibula.Creatures.CreatureManager.html",
    "title": "Class CreatureManager | Fibula MMO",
    "keywords": "Class CreatureManager Class that represents a creature manager. Inheritance System.Object CreatureManager Implements ICreatureManager ICreatureFinder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Creatures Assembly : Fibula.Creatures.dll Syntax public class CreatureManager : ICreatureManager, ICreatureFinder Constructors | Improve this Doc View Source CreatureManager(ILogger) Initializes a new instance of the CreatureManager class. Declaration public CreatureManager(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger to use. Properties | Improve this Doc View Source Logger Gets a reference to the logger. Declaration public ILogger Logger { get; } Property Value Type Description Serilog.ILogger Methods | Improve this Doc View Source FindAllCreatures() Gets all creatures known to this manager. Declaration public IEnumerable<ICreature> FindAllCreatures() Returns Type Description System.Collections.Generic.IEnumerable < ICreature > A collection of creature instances. | Improve this Doc View Source FindAllPlayers() Gets all players known to this manager. Declaration public IEnumerable<IPlayer> FindAllPlayers() Returns Type Description System.Collections.Generic.IEnumerable < IPlayer > A collection of creature instances. | Improve this Doc View Source FindCreatureById(UInt32) Looks for a single creature with the id. Declaration public ICreature FindCreatureById(uint creatureId) Parameters Type Name Description System.UInt32 creatureId The creature id for which to look. Returns Type Description ICreature The creature instance, if found, and null otherwise. | Improve this Doc View Source FindPlayerById(UInt32) Looks for a single player with the id. Declaration public IPlayer FindPlayerById(uint playerId) Parameters Type Name Description System.UInt32 playerId The player id for which to look. Returns Type Description IPlayer The player instance, if found, and null otherwise. | Improve this Doc View Source RegisterCreature(ICreature) Registers a new creature to the manager. Declaration public void RegisterCreature(ICreature creature) Parameters Type Name Description ICreature creature The creature to register. | Improve this Doc View Source UnregisterCreature(ICreature) Unregisters a creature from the manager. Declaration public void UnregisterCreature(ICreature creature) Parameters Type Name Description ICreature creature The creature to unregister. Implements ICreatureManager ICreatureFinder Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Creatures.html": {
    "href": "code/Fibula.Creatures.html",
    "title": "Namespace Fibula.Creatures | Fibula MMO",
    "keywords": "Namespace Fibula.Creatures Classes CombatantCreature Class that represents all creatures in the game. Creature Class that represents all creatures in the game. CreatureCreationArguments Class that represents creation arguments for creatures. CreatureFactory Class that represents a factory of creatures. CreatureManager Class that represents a creature manager. Player Class that represents all players in the game. PlayerCreationArguments Class that represents creation arguments for players."
  },
  "code/Fibula.Creatures.Player.html": {
    "href": "code/Fibula.Creatures.Player.html",
    "title": "Class Player | Fibula MMO",
    "keywords": "Class Player Class that represents all players in the game. Inheritance System.Object Thing Creature CombatantCreature Player Implements ICombatant ICreatureWithExhaustion IPlayer ICreature IThing IContainedThing IThingContainer ILocatable System.IEquatable < ICreature > Inherited Members CombatantCreature.HealthChanged CombatantCreature.Death CombatantCreature.AutoAttackTarget CombatantCreature.AutoAttackCredits CombatantCreature.AutoAttackMaximumCredits CombatantCreature.AutoDefenseCredits CombatantCreature.AutoDefenseMaximumCredits CombatantCreature.AttackSpeed CombatantCreature.DefenseSpeed CombatantCreature.ChasingTarget CombatantCreature.ChaseMode CombatantCreature.FightMode CombatantCreature.DamageTakenDistribution CombatantCreature.AttackedBy CombatantCreature.ExhaustionInformation CombatantCreature.PendingAutoAttackOperation CombatantCreature.ConsumeCredits(CombatCreditType, Byte) CombatantCreature.RestoreCredits(CombatCreditType, Byte) CombatantCreature.SetAttackTarget(ICombatant) CombatantCreature.SetChaseTarget(ICombatant) CombatantCreature.CalculateRemainingCooldownTime(ExhaustionType, DateTimeOffset) CombatantCreature.AddExhaustion(ExhaustionType, DateTimeOffset, TimeSpan) CombatantCreature.AddExhaustion(ExhaustionType, DateTimeOffset, UInt32) CombatantCreature.ApplyDamage(DamageInfo, UInt32) CombatantCreature.IncreaseAttackSpeed(Decimal) CombatantCreature.DecreaseAttackSpeed(Decimal) CombatantCreature.IncreaseDefenseSpeed(Decimal) CombatantCreature.DecreaseDefenseSpeed(Decimal) Creature.ThingId Creature.Id Creature.Article Creature.Name Creature.Corpse Creature.HitpointPercentage Creature.Hitpoints Creature.MaxHitpoints Creature.Manapoints Creature.MaxManapoints Creature.CarryLocation Creature.CarryStrength Creature.Outfit Creature.Direction Creature.LastMovementCostModifier Creature.EmittedLightLevel Creature.EmittedLightColor Creature.VariableSpeed Creature.BaseSpeed Creature.Flags Creature.Blood Creature.WalkPlan Creature.IsDead Creature.TurnToDirection(Direction) Creature.SetOutfit(Outfit) Creature.CanSee(ICreature) Creature.CanSee(Location) Creature.AddContent(IThingFactory, IThing, Byte) Creature.RemoveContent(IThingFactory, IThing, Byte, Byte) Creature.ReplaceContent(IThingFactory, IThing, IThing, Byte, Byte) Creature.FindThingAtIndex(Byte) Creature.DescribeForLogger() Creature.Equals(ICreature) Thing.ThingChanged Thing.ParentContainer Thing.Location Thing.InvokePropertyChanged(String) Thing.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Fibula.Creatures Assembly : Fibula.Creatures.dll Syntax public class Player : CombatantCreature, ICombatant, ICreatureWithExhaustion, IPlayer, ICreature, IThing, IContainedThing, IThingContainer, ILocatable, IEquatable<ICreature> Constructors | Improve this Doc View Source Player(IClient, String, String, UInt16, UInt16, UInt16, UInt16, UInt16) Initializes a new instance of the Player class. Declaration public Player(IClient client, string characterId, string name, ushort maxHitpoints, ushort maxManapoints, ushort corpse, ushort hitpoints = 0, ushort manapoints = 0) Parameters Type Name Description IClient client The client to associate this player to. System.String characterId The id of the character that this player represents. System.String name The name of the player. System.UInt16 maxHitpoints The maximum number of hitpoints that the player starts with. System.UInt16 maxManapoints The maximum number of manapoints that the player starts with. System.UInt16 corpse The id of the corpse for the player. System.UInt16 hitpoints Optional. The number of hitpoints that the player starts with. Defaults to maxHitpoints . System.UInt16 manapoints Optional. The number of manapoints that the player starts with. Defaults to maxManapoints . Properties | Improve this Doc View Source AutoAttackRange Gets the range that the auto attack has. Declaration public override byte AutoAttackRange { get; } Property Value Type Description System.Byte Overrides CombatantCreature.AutoAttackRange | Improve this Doc View Source CanBeMoved Gets a value indicating whether this player can be moved by others. Declaration public override bool CanBeMoved { get; } Property Value Type Description System.Boolean Overrides Thing.CanBeMoved | Improve this Doc View Source CharacterId Gets the player's character id. Declaration public string CharacterId { get; } Property Value Type Description System.String | Improve this Doc View Source Client Gets the client associated to this player. Declaration public IClient Client { get; } Property Value Type Description IClient | Improve this Doc View Source Inventory Gets or sets the inventory for the player. Declaration public override sealed IInventory Inventory { get; protected set; } Property Value Type Description IInventory Overrides Creature.Inventory | Improve this Doc View Source IsAllowedToLogOut Gets a value indicating whether this player is allowed to logout. Declaration public bool IsAllowedToLogOut { get; } Property Value Type Description System.Boolean | Improve this Doc View Source PermissionsLevel Gets the player's permissions level. Declaration public byte PermissionsLevel { get; } Property Value Type Description System.Byte | Improve this Doc View Source SoulPoints Gets the player's soul points. Declaration public byte SoulPoints { get; } Property Value Type Description System.Byte | Improve this Doc View Source Speed Gets or sets this player's speed. Declaration public override ushort Speed { get; protected set; } Property Value Type Description System.UInt16 Overrides Creature.Speed Methods | Improve this Doc View Source ApplyDamageModifiers(ref DamageInfo) Applies damage modifiers to the damage information provided. Declaration protected override void ApplyDamageModifiers(ref DamageInfo damageInfo) Parameters Type Name Description DamageInfo damageInfo The damage information. Overrides CombatantCreature.ApplyDamageModifiers(ref DamageInfo) | Improve this Doc View Source CalculateMovementBaseSpeed() Calculates the base movement speed of the player. Declaration protected override ushort CalculateMovementBaseSpeed() Returns Type Description System.UInt16 The base movement speed of the player. Overrides Creature.CalculateMovementBaseSpeed() Implements ICombatant ICreatureWithExhaustion IPlayer ICreature IThing IContainedThing IThingContainer ILocatable System.IEquatable<T> Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Creatures.PlayerCreationArguments.html": {
    "href": "code/Fibula.Creatures.PlayerCreationArguments.html",
    "title": "Class PlayerCreationArguments | Fibula MMO",
    "keywords": "Class PlayerCreationArguments Class that represents creation arguments for players. Inheritance System.Object CreatureCreationArguments PlayerCreationArguments Implements IThingCreationArguments Inherited Members CreatureCreationArguments.Type CreatureCreationArguments.Metadata System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Creatures Assembly : Fibula.Creatures.dll Syntax public class PlayerCreationArguments : CreatureCreationArguments, IThingCreationArguments Properties | Improve this Doc View Source Client Gets or sets the client to initialize the player with. Declaration public IClient Client { get; set; } Property Value Type Description IClient Implements IThingCreationArguments Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Data.Contracts.Abstractions.html": {
    "href": "code/Fibula.Data.Contracts.Abstractions.html",
    "title": "Namespace Fibula.Data.Contracts.Abstractions | Fibula MMO",
    "keywords": "Namespace Fibula.Data.Contracts.Abstractions Interfaces IAccountRepository<TEntity> Interface for an accounts repository. ICharacterRepository<TEntity> Interface for a character repository. IFibulaDbContext Interface for the Fibula database context. IRepository<TEntity> Interface for a generic entity repository. IUnitOfWork<TAccounts, TCharacters> Interface for units of work that target the Fibula project."
  },
  "code/Fibula.Data.Contracts.Abstractions.IAccountRepository-1.html": {
    "href": "code/Fibula.Data.Contracts.Abstractions.IAccountRepository-1.html",
    "title": "Interface IAccountRepository<TEntity> | Fibula MMO",
    "keywords": "Interface IAccountRepository<TEntity> Interface for an accounts repository. Inherited Members IRepository<TEntity>.GetById(String) IRepository<TEntity>.GetAll() IRepository<TEntity>.FindMany(Expression<Func<TEntity, Boolean>>) IRepository<TEntity>.FindOne(Expression<Func<TEntity, Boolean>>) IRepository<TEntity>.Add(TEntity) IRepository<TEntity>.AddRange(IEnumerable<TEntity>) IRepository<TEntity>.Remove(TEntity) IRepository<TEntity>.RemoveRange(IEnumerable<TEntity>) Namespace : Fibula.Data.Contracts.Abstractions Assembly : Fibula.Data.Contracts.dll Syntax public interface IAccountRepository<TEntity> : IRepository<TEntity> where TEntity : IAccountEntity Type Parameters Name Description TEntity The type of entity. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Data.Contracts.Abstractions.ICharacterRepository-1.html": {
    "href": "code/Fibula.Data.Contracts.Abstractions.ICharacterRepository-1.html",
    "title": "Interface ICharacterRepository<TEntity> | Fibula MMO",
    "keywords": "Interface ICharacterRepository<TEntity> Interface for a character repository. Inherited Members IRepository<TEntity>.GetById(String) IRepository<TEntity>.GetAll() IRepository<TEntity>.FindMany(Expression<Func<TEntity, Boolean>>) IRepository<TEntity>.FindOne(Expression<Func<TEntity, Boolean>>) IRepository<TEntity>.Add(TEntity) IRepository<TEntity>.AddRange(IEnumerable<TEntity>) IRepository<TEntity>.Remove(TEntity) IRepository<TEntity>.RemoveRange(IEnumerable<TEntity>) Namespace : Fibula.Data.Contracts.Abstractions Assembly : Fibula.Data.Contracts.dll Syntax public interface ICharacterRepository<TEntity> : IRepository<TEntity> where TEntity : ICharacterEntity Type Parameters Name Description TEntity The type of entity. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Data.Contracts.Abstractions.IFibulaDbContext.html": {
    "href": "code/Fibula.Data.Contracts.Abstractions.IFibulaDbContext.html",
    "title": "Interface IFibulaDbContext | Fibula MMO",
    "keywords": "Interface IFibulaDbContext Interface for the Fibula database context. Namespace : Fibula.Data.Contracts.Abstractions Assembly : Fibula.Data.Contracts.dll Syntax public interface IFibulaDbContext Methods | Improve this Doc View Source AsDbContext() Gets this context as the Microsoft.EntityFrameworkCore.DbContext . This exists for the sole purpose of forcing implentations of this interface to inherit also to Microsoft.EntityFrameworkCore.DbContext . Declaration DbContext AsDbContext() Returns Type Description Microsoft.EntityFrameworkCore.DbContext This instance casted as Microsoft.EntityFrameworkCore.DbContext . Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Data.Contracts.Abstractions.IRepository-1.html": {
    "href": "code/Fibula.Data.Contracts.Abstractions.IRepository-1.html",
    "title": "Interface IRepository<TEntity> | Fibula MMO",
    "keywords": "Interface IRepository<TEntity> Interface for a generic entity repository. Namespace : Fibula.Data.Contracts.Abstractions Assembly : Fibula.Data.Contracts.dll Syntax public interface IRepository<TEntity> where TEntity : IIdentifiableEntity Type Parameters Name Description TEntity The entity type. Methods | Improve this Doc View Source Add(TEntity) Adds an entity to the repository. Declaration void Add(TEntity entity) Parameters Type Name Description TEntity entity The entity to add. | Improve this Doc View Source AddRange(IEnumerable<TEntity>) Adds multiple entities to the respository. Declaration void AddRange(IEnumerable<TEntity> entities) Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> entities The entities to add. | Improve this Doc View Source FindMany(Expression<Func<TEntity, Boolean>>) Finds all entities that match a predicate. Declaration IEnumerable<TEntity> FindMany(Expression<Func<TEntity, bool>> predicate) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> predicate The predicate to use for matching. Returns Type Description System.Collections.Generic.IEnumerable <TEntity> The entities that matched the predicate. | Improve this Doc View Source FindOne(Expression<Func<TEntity, Boolean>>) Finds an entity in the set within the context that satisfies an expression. If more than one entity satisfies the expression, one is picked up in an unknown criteria. Declaration TEntity FindOne(Expression<Func<TEntity, bool>> predicate) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> predicate The expression to satisfy. Returns Type Description TEntity The entity found. | Improve this Doc View Source GetAll() Gets a collection of all entities from a type. Declaration IEnumerable<TEntity> GetAll() Returns Type Description System.Collections.Generic.IEnumerable <TEntity> The collection of entities. | Improve this Doc View Source GetById(String) Gets a single entity matching the id supplied. Declaration TEntity GetById(string id) Parameters Type Name Description System.String id The id to search the entity by. Returns Type Description TEntity The entity that matched the id supplied. | Improve this Doc View Source Remove(TEntity) Removes an entity from the repository. Declaration void Remove(TEntity entity) Parameters Type Name Description TEntity entity The entity to remove. | Improve this Doc View Source RemoveRange(IEnumerable<TEntity>) Removes multiple entities from the repository. Declaration void RemoveRange(IEnumerable<TEntity> entities) Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> entities The entities to remove. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Data.Contracts.Abstractions.IUnitOfWork-2.html": {
    "href": "code/Fibula.Data.Contracts.Abstractions.IUnitOfWork-2.html",
    "title": "Interface IUnitOfWork<TAccounts, TCharacters> | Fibula MMO",
    "keywords": "Interface IUnitOfWork<TAccounts, TCharacters> Interface for units of work that target the Fibula project. Inherited Members System.IDisposable.Dispose() Namespace : Fibula.Data.Contracts.Abstractions Assembly : Fibula.Data.Contracts.dll Syntax public interface IUnitOfWork<TAccounts, TCharacters> : IDisposable where TAccounts : IAccountEntity where TCharacters : ICharacterEntity Type Parameters Name Description TAccounts The type of account entities. TCharacters The type of character entities. Properties | Improve this Doc View Source Accounts Gets the repository of accounts. Declaration IAccountRepository<TAccounts> Accounts { get; } Property Value Type Description IAccountRepository <TAccounts> | Improve this Doc View Source Characters Gets the repository of characters. Declaration ICharacterRepository<TCharacters> Characters { get; } Property Value Type Description ICharacterRepository <TCharacters> Methods | Improve this Doc View Source Complete() Saves all changes made during this unit of work to the persistent store. Declaration int Complete() Returns Type Description System.Int32 The number of changes saved. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Data.CosmosDB.ConfigurationRootExtensions.html": {
    "href": "code/Fibula.Data.CosmosDB.ConfigurationRootExtensions.html",
    "title": "Class ConfigurationRootExtensions | Fibula MMO",
    "keywords": "Class ConfigurationRootExtensions Static class that adds convenient methods to add the concrete implementations contained in this library. Inheritance System.Object ConfigurationRootExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Data.CosmosDB Assembly : Fibula.Data.CosmosDB.dll Syntax public static class ConfigurationRootExtensions Methods | Improve this Doc View Source AddCosmosDBDatabaseContext(IServiceCollection, IConfiguration) Adds all implementations related to CosmosDb contained in this library to the services collection. Additionally, registers the options related to the concrete implementations added, such as: FibulaCosmosDbContextOptions . Declaration public static void AddCosmosDBDatabaseContext(this IServiceCollection services, IConfiguration configuration) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services The services collection. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration reference."
  },
  "code/Fibula.Data.CosmosDB.FibulaCosmosDbContext.html": {
    "href": "code/Fibula.Data.CosmosDB.FibulaCosmosDbContext.html",
    "title": "Class FibulaCosmosDbContext | Fibula MMO",
    "keywords": "Class FibulaCosmosDbContext Class that represents a CosmosDB context. Inheritance System.Object Microsoft.EntityFrameworkCore.DbContext FibulaCosmosDbContext Implements System.IDisposable System.IAsyncDisposable Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure < System.IServiceProvider > Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies Microsoft.EntityFrameworkCore.Internal.IDbSetCache Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable Microsoft.EntityFrameworkCore.Infrastructure.IResettableService IFibulaDbContext Inherited Members Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet(Microsoft.EntityFrameworkCore.Internal.IDbSetSource, System.Type) Microsoft.EntityFrameworkCore.DbContext.Set<TEntity>() Microsoft.EntityFrameworkCore.DbContext.Query<TQuery>() Microsoft.EntityFrameworkCore.DbContext.SaveChanges() Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean) Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean, System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SetPool(Microsoft.EntityFrameworkCore.Internal.IDbContextPool) Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SnapshotConfiguration() Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.Resurrect(Microsoft.EntityFrameworkCore.Internal.DbContextPoolConfigurationSnapshot) Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IResettableService.ResetState() Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IResettableService.ResetStateAsync(System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Dispose() Microsoft.EntityFrameworkCore.DbContext.DisposeAsync() Microsoft.EntityFrameworkCore.DbContext.Entry<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object) Microsoft.EntityFrameworkCore.DbContext.Add<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.AddAsync<TEntity>(TEntity, System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Attach<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.Update<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.Remove<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.Add(System.Object) Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object, System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object) Microsoft.EntityFrameworkCore.DbContext.Update(System.Object) Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object) Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable<System.Object>) Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable<System.Object>, System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable<System.Object>) Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable<System.Object>) Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable<System.Object>) Microsoft.EntityFrameworkCore.DbContext.Find(System.Type, System.Object[]) Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, System.Object[]) Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, System.Object[], System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Find<TEntity>(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>(System.Object[], System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Database Microsoft.EntityFrameworkCore.DbContext.ChangeTracker Microsoft.EntityFrameworkCore.DbContext.Model Microsoft.EntityFrameworkCore.DbContext.ContextId Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.SetSource Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.EntityFinderFactory Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.QueryProvider Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.StateManager Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.ChangeDetector Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.EntityGraphAttacher Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.UpdateLogger Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.InfrastructureLogger Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Data.CosmosDB Assembly : Fibula.Data.CosmosDB.dll Syntax public class FibulaCosmosDbContext : DbContext, IDisposable, IAsyncDisposable, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IFibulaDbContext Constructors | Improve this Doc View Source FibulaCosmosDbContext(IOptions<FibulaCosmosDbContextOptions>, ISecretsProvider) Initializes a new instance of the FibulaCosmosDbContext class. Declaration public FibulaCosmosDbContext(IOptions<FibulaCosmosDbContextOptions> cosmosDbContextOptions, ISecretsProvider secretsProvider) Parameters Type Name Description Microsoft.Extensions.Options.IOptions < FibulaCosmosDbContextOptions > cosmosDbContextOptions A reference to the CosmosDb context options. ISecretsProvider secretsProvider A reference to the secrets provider. Properties | Improve this Doc View Source Options Gets the configuration options. Declaration public FibulaCosmosDbContextOptions Options { get; } Property Value Type Description FibulaCosmosDbContextOptions | Improve this Doc View Source SecretsProvider Gets the reference to the secrets provider. Declaration public ISecretsProvider SecretsProvider { get; } Property Value Type Description ISecretsProvider Methods | Improve this Doc View Source AsDbContext() Gets this context as the Microsoft.EntityFrameworkCore.DbContext . Declaration public DbContext AsDbContext() Returns Type Description Microsoft.EntityFrameworkCore.DbContext This instance casted as Microsoft.EntityFrameworkCore.DbContext . | Improve this Doc View Source OnConfiguring(DbContextOptionsBuilder) Declaration protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.DbContextOptionsBuilder optionsBuilder Overrides Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder) | Improve this Doc View Source OnModelCreating(ModelBuilder) Declaration protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder) Implements System.IDisposable System.IAsyncDisposable Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T> Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies Microsoft.EntityFrameworkCore.Internal.IDbSetCache Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable Microsoft.EntityFrameworkCore.Infrastructure.IResettableService IFibulaDbContext Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Data.CosmosDB.FibulaCosmosDbContextOptions.html": {
    "href": "code/Fibula.Data.CosmosDB.FibulaCosmosDbContextOptions.html",
    "title": "Class FibulaCosmosDbContextOptions | Fibula MMO",
    "keywords": "Class FibulaCosmosDbContextOptions Class that represents options for CosmosDB configuration. Inheritance System.Object FibulaCosmosDbContextOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Data.CosmosDB Assembly : Fibula.Data.CosmosDB.dll Syntax public class FibulaCosmosDbContextOptions Properties | Improve this Doc View Source AccountEndpointSecretName Gets or sets the secret name of the account endpoint, used to retrieve the value from the secrets provider. Declaration [Required(ErrorMessage = \"A name for the account endpoint secret is required.\")] public string AccountEndpointSecretName { get; set; } Property Value Type Description System.String | Improve this Doc View Source AccountKeySecretName Gets or sets the secret name of the account key, used to retrieve the value from the secrets provider. Declaration [Required(ErrorMessage = \"A name for the account key secret is required.\")] public string AccountKeySecretName { get; set; } Property Value Type Description System.String | Improve this Doc View Source DatabaseName Gets or sets the database name. Declaration [Required(ErrorMessage = \"A database name is required.\")] public string DatabaseName { get; set; } Property Value Type Description System.String Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Data.CosmosDB.html": {
    "href": "code/Fibula.Data.CosmosDB.html",
    "title": "Namespace Fibula.Data.CosmosDB | Fibula MMO",
    "keywords": "Namespace Fibula.Data.CosmosDB Classes ConfigurationRootExtensions Static class that adds convenient methods to add the concrete implementations contained in this library. FibulaCosmosDbContext Class that represents a CosmosDB context. FibulaCosmosDbContextOptions Class that represents options for CosmosDB configuration."
  },
  "code/Fibula.Data.Entities.AccountEntity.html": {
    "href": "code/Fibula.Data.Entities.AccountEntity.html",
    "title": "Class AccountEntity | Fibula MMO",
    "keywords": "Class AccountEntity Class that represents a character entity. Inheritance System.Object BaseEntity AccountEntity Implements IAccountEntity IIdentifiableEntity IEntity Inherited Members BaseEntity.Id System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Data.Entities Assembly : Fibula.Data.Entities.dll Syntax public class AccountEntity : BaseEntity, IAccountEntity, IIdentifiableEntity, IEntity Properties | Improve this Doc View Source AccessLevel Gets or sets the access level on the account. Declaration public byte AccessLevel { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source Banished Gets or sets a value indicating whether this account is currently banished. Declaration public bool Banished { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source BanishedUntil Gets or sets the date and time that the banishment on this accont lasts until. Declaration public DateTimeOffset BanishedUntil { get; set; } Property Value Type Description System.DateTimeOffset | Improve this Doc View Source Creation Gets or sets the account's creation date and time. Declaration public DateTimeOffset Creation { get; set; } Property Value Type Description System.DateTimeOffset | Improve this Doc View Source CreationIp Gets or sets the IP address that created this account. Declaration public string CreationIp { get; set; } Property Value Type Description System.String | Improve this Doc View Source Deleted Gets or sets a value indicating whether this account was deleted. Declaration public bool Deleted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Email Gets or sets the email on file for this account. Declaration public string Email { get; set; } Property Value Type Description System.String | Improve this Doc View Source LastLogin Gets or sets the account's last successfully login date and time. Declaration public DateTimeOffset LastLogin { get; set; } Property Value Type Description System.DateTimeOffset | Improve this Doc View Source LastLoginIp Gets or sets the last IP address that successfully connected to this account. Declaration public string LastLoginIp { get; set; } Property Value Type Description System.String | Improve this Doc View Source Number Gets or sets the number for this account. Declaration public uint Number { get; set; } Property Value Type Description System.UInt32 | Improve this Doc View Source Password Gets or sets the password on this account. Declaration public string Password { get; set; } Property Value Type Description System.String | Improve this Doc View Source Premium Gets or sets a value indicating whether this account is on premium status. Declaration public bool Premium { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source PremiumDays Gets or sets the number of premium days left on the account. Declaration public ushort PremiumDays { get; set; } Property Value Type Description System.UInt16 | Improve this Doc View Source SessionIp Gets or sets the current IP address in use for this account, if any. Declaration public string SessionIp { get; set; } Property Value Type Description System.String | Improve this Doc View Source SessionKey Gets or sets the session key in use for this account, if any. Declaration public string SessionKey { get; set; } Property Value Type Description System.String | Improve this Doc View Source TrialOrBonusPremiumDays Gets or sets the number of trial/bonus premium days left on the account. Declaration public ushort TrialOrBonusPremiumDays { get; set; } Property Value Type Description System.UInt16 | Improve this Doc View Source TrialPremium Gets or sets a value indicating whether this account is on premium status but only because of bonus/trial days. Declaration public bool TrialPremium { get; set; } Property Value Type Description System.Boolean Implements IAccountEntity IIdentifiableEntity IEntity Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Data.Entities.BaseEntity.html": {
    "href": "code/Fibula.Data.Entities.BaseEntity.html",
    "title": "Class BaseEntity | Fibula MMO",
    "keywords": "Class BaseEntity Abstract class that represents the base of all entities. Inheritance System.Object BaseEntity AccountEntity CharacterEntity Implements IIdentifiableEntity IEntity Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Data.Entities Assembly : Fibula.Data.Entities.dll Syntax public abstract class BaseEntity : IIdentifiableEntity, IEntity Properties | Improve this Doc View Source Id Gets or sets the id of this entity. Declaration public string Id { get; set; } Property Value Type Description System.String Implements IIdentifiableEntity IEntity Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Data.Entities.CharacterEntity.html": {
    "href": "code/Fibula.Data.Entities.CharacterEntity.html",
    "title": "Class CharacterEntity | Fibula MMO",
    "keywords": "Class CharacterEntity Class that represents a character entity. Inheritance System.Object BaseEntity CharacterEntity Implements ICharacterEntity IIdentifiableEntity IEntity ICreatureCreationMetadata Inherited Members BaseEntity.Id System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Data.Entities Assembly : Fibula.Data.Entities.dll Syntax public class CharacterEntity : BaseEntity, ICharacterEntity, IIdentifiableEntity, IEntity, ICreatureCreationMetadata Properties | Improve this Doc View Source AccountId Gets or sets the id of the account which this character belongs to. Declaration public string AccountId { get; set; } Property Value Type Description System.String | Improve this Doc View Source Corpse Gets the corpse id to give to the creature. Declaration public ushort Corpse { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source Creation Gets or sets this character's creation date and time. Declaration public DateTimeOffset Creation { get; set; } Property Value Type Description System.DateTimeOffset | Improve this Doc View Source Gender Gets or sets the character's chosen gender. Declaration public byte Gender { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source IsOnline Gets or sets a value indicating whether this character is currently online. Declaration public bool IsOnline { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source LastLogin Gets or sets the last observed date and time that this character successfully loged in. Declaration public DateTimeOffset LastLogin { get; set; } Property Value Type Description System.DateTimeOffset | Improve this Doc View Source Level Gets or sets the character's level. Declaration public short Level { get; set; } Property Value Type Description System.Int16 | Improve this Doc View Source MaxHitpoints Gets the max hitpoints to create the creature with. Declaration public ushort MaxHitpoints { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source MaxManapoints Gets the max manapoints to create the creature with. Declaration public ushort MaxManapoints { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source Name Gets or sets the character's name. Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Vocation Gets or sets the character's vocation. Declaration public string Vocation { get; set; } Property Value Type Description System.String | Improve this Doc View Source World Gets or sets the world where the character exists in. Declaration public string World { get; set; } Property Value Type Description System.String Implements ICharacterEntity IIdentifiableEntity IEntity ICreatureCreationMetadata Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Data.Entities.Contracts.Abstractions.html": {
    "href": "code/Fibula.Data.Entities.Contracts.Abstractions.html",
    "title": "Namespace Fibula.Data.Entities.Contracts.Abstractions | Fibula MMO",
    "keywords": "Namespace Fibula.Data.Entities.Contracts.Abstractions Interfaces IAccountEntity Interface for account entities. IBanishmentEntity Interface for banishment entities. ICharacterEntity Interface for character entities. IEntity Interface for all entities. IIdentifiableEntity Interface for all entities which contain an id. IOnlineCharacterEntity Interface for an online character list entry entity. IWorldStatusEntity Interface for a world status entry entity."
  },
  "code/Fibula.Data.Entities.Contracts.Abstractions.IAccountEntity.html": {
    "href": "code/Fibula.Data.Entities.Contracts.Abstractions.IAccountEntity.html",
    "title": "Interface IAccountEntity | Fibula MMO",
    "keywords": "Interface IAccountEntity Interface for account entities. Inherited Members IIdentifiableEntity.Id Namespace : Fibula.Data.Entities.Contracts.Abstractions Assembly : Fibula.Data.Entities.Contracts.dll Syntax public interface IAccountEntity : IIdentifiableEntity, IEntity Properties | Improve this Doc View Source AccessLevel Gets the access level on the account. Declaration byte AccessLevel { get; } Property Value Type Description System.Byte | Improve this Doc View Source Banished Gets a value indicating whether this account is currently banished. Declaration bool Banished { get; } Property Value Type Description System.Boolean | Improve this Doc View Source BanishedUntil Gets the date and time that the banishment on this accont lasts until. Declaration DateTimeOffset BanishedUntil { get; } Property Value Type Description System.DateTimeOffset | Improve this Doc View Source Creation Gets the account's creation date and time. Declaration DateTimeOffset Creation { get; } Property Value Type Description System.DateTimeOffset | Improve this Doc View Source CreationIp Gets the IP address that created this account. Declaration string CreationIp { get; } Property Value Type Description System.String | Improve this Doc View Source Deleted Gets a value indicating whether this account was deleted. Declaration bool Deleted { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Email Gets the email on file for this account. Declaration string Email { get; } Property Value Type Description System.String | Improve this Doc View Source LastLogin Gets the account's last successfully login date and time. Declaration DateTimeOffset LastLogin { get; } Property Value Type Description System.DateTimeOffset | Improve this Doc View Source LastLoginIp Gets the last IP address that successfully connected to this account. Declaration string LastLoginIp { get; } Property Value Type Description System.String | Improve this Doc View Source Number Gets the number for this account. Declaration uint Number { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source Password Gets the password on this account. Declaration string Password { get; } Property Value Type Description System.String | Improve this Doc View Source Premium Gets a value indicating whether this account is on premium status. Declaration bool Premium { get; } Property Value Type Description System.Boolean | Improve this Doc View Source PremiumDays Gets the number of premium days left on the account. Declaration ushort PremiumDays { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source SessionIp Gets the current IP address in use for this account, if any. Declaration string SessionIp { get; } Property Value Type Description System.String | Improve this Doc View Source TrialOrBonusPremiumDays Gets the number of trial/bonus premium days left on the account. Declaration ushort TrialOrBonusPremiumDays { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source TrialPremium Gets a value indicating whether this account is on premium status but only because of bonus/trial days. Declaration bool TrialPremium { get; } Property Value Type Description System.Boolean Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Data.Entities.Contracts.Abstractions.IBanishmentEntity.html": {
    "href": "code/Fibula.Data.Entities.Contracts.Abstractions.IBanishmentEntity.html",
    "title": "Interface IBanishmentEntity | Fibula MMO",
    "keywords": "Interface IBanishmentEntity Interface for banishment entities. Inherited Members IIdentifiableEntity.Id Namespace : Fibula.Data.Entities.Contracts.Abstractions Assembly : Fibula.Data.Entities.Contracts.dll Syntax public interface IBanishmentEntity : IIdentifiableEntity, IEntity Properties | Improve this Doc View Source AccountId Gets the id of the account to which this banishment references. Declaration Guid AccountId { get; } Property Value Type Description System.Guid | Improve this Doc View Source BanishedUntil Gets the date until which this banisment will last. Declaration DateTimeOffset BanishedUntil { get; } Property Value Type Description System.DateTimeOffset | Improve this Doc View Source Comment Gets the gamemaster's comment on this banishment. Declaration string Comment { get; } Property Value Type Description System.String | Improve this Doc View Source GamemasterId Gets the id of the gamemaster who issued this banishment. Declaration Guid GamemasterId { get; } Property Value Type Description System.Guid | Improve this Doc View Source IpAddress Gets the IP Address that was connected to the account at the time this banisment was issued. Declaration IPAddress IpAddress { get; } Property Value Type Description System.Net.IPAddress | Improve this Doc View Source PunishmentType Gets the type of punishment issued. Declaration byte PunishmentType { get; } Property Value Type Description System.Byte | Improve this Doc View Source Timestamp Gets the timestamp of this banishment. Declaration DateTimeOffset Timestamp { get; } Property Value Type Description System.DateTimeOffset | Improve this Doc View Source Violation Gets the violation description of the banishment. Declaration string Violation { get; } Property Value Type Description System.String Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Data.Entities.Contracts.Abstractions.ICharacterEntity.html": {
    "href": "code/Fibula.Data.Entities.Contracts.Abstractions.ICharacterEntity.html",
    "title": "Interface ICharacterEntity | Fibula MMO",
    "keywords": "Interface ICharacterEntity Interface for character entities. Inherited Members IIdentifiableEntity.Id Namespace : Fibula.Data.Entities.Contracts.Abstractions Assembly : Fibula.Data.Entities.Contracts.dll Syntax public interface ICharacterEntity : IIdentifiableEntity, IEntity Properties | Improve this Doc View Source AccountId Gets the id of the account to which this character belongs to. Declaration string AccountId { get; } Property Value Type Description System.String | Improve this Doc View Source Creation Gets the character's creation date and time. Declaration DateTimeOffset Creation { get; } Property Value Type Description System.DateTimeOffset | Improve this Doc View Source Gender Gets the character's gender. Declaration byte Gender { get; } Property Value Type Description System.Byte | Improve this Doc View Source IsOnline Gets a value indicating whether this character is currently online. Declaration bool IsOnline { get; } Property Value Type Description System.Boolean | Improve this Doc View Source LastLogin Gets the character's last login date and time. Declaration DateTimeOffset LastLogin { get; } Property Value Type Description System.DateTimeOffset | Improve this Doc View Source Level Gets the character's level. Declaration short Level { get; } Property Value Type Description System.Int16 | Improve this Doc View Source Name Gets the name of the character. Declaration string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Vocation Gets the character's vocation. Declaration string Vocation { get; } Property Value Type Description System.String | Improve this Doc View Source World Gets the world where the character exists. Declaration string World { get; } Property Value Type Description System.String Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Data.Entities.Contracts.Abstractions.IEntity.html": {
    "href": "code/Fibula.Data.Entities.Contracts.Abstractions.IEntity.html",
    "title": "Interface IEntity | Fibula MMO",
    "keywords": "Interface IEntity Interface for all entities. Namespace : Fibula.Data.Entities.Contracts.Abstractions Assembly : Fibula.Data.Entities.Contracts.dll Syntax public interface IEntity Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Data.Entities.Contracts.Abstractions.IIdentifiableEntity.html": {
    "href": "code/Fibula.Data.Entities.Contracts.Abstractions.IIdentifiableEntity.html",
    "title": "Interface IIdentifiableEntity | Fibula MMO",
    "keywords": "Interface IIdentifiableEntity Interface for all entities which contain an id. Namespace : Fibula.Data.Entities.Contracts.Abstractions Assembly : Fibula.Data.Entities.Contracts.dll Syntax public interface IIdentifiableEntity : IEntity Properties | Improve this Doc View Source Id Gets the id of this entity. Declaration string Id { get; } Property Value Type Description System.String Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Data.Entities.Contracts.Abstractions.IOnlineCharacterEntity.html": {
    "href": "code/Fibula.Data.Entities.Contracts.Abstractions.IOnlineCharacterEntity.html",
    "title": "Interface IOnlineCharacterEntity | Fibula MMO",
    "keywords": "Interface IOnlineCharacterEntity Interface for an online character list entry entity. Namespace : Fibula.Data.Entities.Contracts.Abstractions Assembly : Fibula.Data.Entities.Contracts.dll Syntax public interface IOnlineCharacterEntity : IEntity Properties | Improve this Doc View Source CharacterName Gets the name of the character. Declaration string CharacterName { get; } Property Value Type Description System.String | Improve this Doc View Source Level Gets the character level. Declaration ushort Level { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source Vocation Gets the vocation of the character. Declaration string Vocation { get; } Property Value Type Description System.String | Improve this Doc View Source World Gets the world where the character is currently online in. Declaration string World { get; } Property Value Type Description System.String Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Data.Entities.Contracts.Abstractions.IWorldStatusEntity.html": {
    "href": "code/Fibula.Data.Entities.Contracts.Abstractions.IWorldStatusEntity.html",
    "title": "Interface IWorldStatusEntity | Fibula MMO",
    "keywords": "Interface IWorldStatusEntity Interface for a world status entry entity. Namespace : Fibula.Data.Entities.Contracts.Abstractions Assembly : Fibula.Data.Entities.Contracts.dll Syntax public interface IWorldStatusEntity : IEntity Properties | Improve this Doc View Source LastUpdated Gets the last time that this entry was updated. Declaration DateTimeOffset LastUpdated { get; } Property Value Type Description System.DateTimeOffset | Improve this Doc View Source PlayersOnline Gets the number of players online in this world. Declaration ushort PlayersOnline { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source RecordOnline Gets the peak number of players ever observed in this world. Declaration ushort RecordOnline { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source World Gets the name of the world this entry is for. Declaration string World { get; } Property Value Type Description System.String Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Data.Entities.html": {
    "href": "code/Fibula.Data.Entities.html",
    "title": "Namespace Fibula.Data.Entities | Fibula MMO",
    "keywords": "Namespace Fibula.Data.Entities Classes AccountEntity Class that represents a character entity. BaseEntity Abstract class that represents the base of all entities. CharacterEntity Class that represents a character entity."
  },
  "code/Fibula.Data.html": {
    "href": "code/Fibula.Data.html",
    "title": "Namespace Fibula.Data | Fibula MMO",
    "keywords": "Namespace Fibula.Data Classes UnitOfWork Class that represents a unit of work for the Fibula project."
  },
  "code/Fibula.Data.InMemoryDatabase.ConfigurationRootExtensions.html": {
    "href": "code/Fibula.Data.InMemoryDatabase.ConfigurationRootExtensions.html",
    "title": "Class ConfigurationRootExtensions | Fibula MMO",
    "keywords": "Class ConfigurationRootExtensions Static class that adds convenient methods to add the concrete implementations contained in this library. Inheritance System.Object ConfigurationRootExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Data.InMemoryDatabase Assembly : Fibula.Data.InMemoryDatabase.dll Syntax public static class ConfigurationRootExtensions Methods | Improve this Doc View Source AddInMemoryDatabaseContext(IServiceCollection, IConfiguration) Adds all implementations related to In-memory database contained in this library to the services collection. Declaration public static void AddInMemoryDatabaseContext(this IServiceCollection services, IConfiguration configuration) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services The services collection. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration reference."
  },
  "code/Fibula.Data.InMemoryDatabase.FibulaInMemoryDatabaseContext.html": {
    "href": "code/Fibula.Data.InMemoryDatabase.FibulaInMemoryDatabaseContext.html",
    "title": "Class FibulaInMemoryDatabaseContext | Fibula MMO",
    "keywords": "Class FibulaInMemoryDatabaseContext Class that represents a context for an in-memory database. Inheritance System.Object Microsoft.EntityFrameworkCore.DbContext FibulaInMemoryDatabaseContext Implements System.IDisposable System.IAsyncDisposable Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure < System.IServiceProvider > Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies Microsoft.EntityFrameworkCore.Internal.IDbSetCache Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable Microsoft.EntityFrameworkCore.Infrastructure.IResettableService IFibulaDbContext Inherited Members Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet(Microsoft.EntityFrameworkCore.Internal.IDbSetSource, System.Type) Microsoft.EntityFrameworkCore.DbContext.Set<TEntity>() Microsoft.EntityFrameworkCore.DbContext.Query<TQuery>() Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder) Microsoft.EntityFrameworkCore.DbContext.SaveChanges() Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean) Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean, System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SetPool(Microsoft.EntityFrameworkCore.Internal.IDbContextPool) Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SnapshotConfiguration() Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.Resurrect(Microsoft.EntityFrameworkCore.Internal.DbContextPoolConfigurationSnapshot) Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IResettableService.ResetState() Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IResettableService.ResetStateAsync(System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Dispose() Microsoft.EntityFrameworkCore.DbContext.DisposeAsync() Microsoft.EntityFrameworkCore.DbContext.Entry<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object) Microsoft.EntityFrameworkCore.DbContext.Add<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.AddAsync<TEntity>(TEntity, System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Attach<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.Update<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.Remove<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.Add(System.Object) Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object, System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object) Microsoft.EntityFrameworkCore.DbContext.Update(System.Object) Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object) Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable<System.Object>) Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable<System.Object>, System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable<System.Object>) Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable<System.Object>) Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable<System.Object>) Microsoft.EntityFrameworkCore.DbContext.Find(System.Type, System.Object[]) Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, System.Object[]) Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, System.Object[], System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Find<TEntity>(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>(System.Object[], System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Database Microsoft.EntityFrameworkCore.DbContext.ChangeTracker Microsoft.EntityFrameworkCore.DbContext.Model Microsoft.EntityFrameworkCore.DbContext.ContextId Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.SetSource Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.EntityFinderFactory Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.QueryProvider Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.StateManager Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.ChangeDetector Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.EntityGraphAttacher Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.UpdateLogger Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.InfrastructureLogger Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Data.InMemoryDatabase Assembly : Fibula.Data.InMemoryDatabase.dll Syntax public class FibulaInMemoryDatabaseContext : DbContext, IDisposable, IAsyncDisposable, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IFibulaDbContext Constructors | Improve this Doc View Source FibulaInMemoryDatabaseContext(DbContextOptions<FibulaInMemoryDatabaseContext>) Initializes a new instance of the FibulaInMemoryDatabaseContext class. Declaration public FibulaInMemoryDatabaseContext(DbContextOptions<FibulaInMemoryDatabaseContext> options) Parameters Type Name Description Microsoft.EntityFrameworkCore.DbContextOptions < FibulaInMemoryDatabaseContext > options The options to initialize this context with. Properties | Improve this Doc View Source Accounts Gets or sets the set of accounts. Declaration public DbSet<AccountEntity> Accounts { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < AccountEntity > | Improve this Doc View Source Characters Gets or sets the set of characters. Declaration public DbSet<CharacterEntity> Characters { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < CharacterEntity > Methods | Improve this Doc View Source AsDbContext() Gets this context as the Microsoft.EntityFrameworkCore.DbContext . Declaration public DbContext AsDbContext() Returns Type Description Microsoft.EntityFrameworkCore.DbContext This instance casted as Microsoft.EntityFrameworkCore.DbContext . | Improve this Doc View Source OnModelCreating(ModelBuilder) Declaration protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder) Implements System.IDisposable System.IAsyncDisposable Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T> Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies Microsoft.EntityFrameworkCore.Internal.IDbSetCache Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable Microsoft.EntityFrameworkCore.Infrastructure.IResettableService IFibulaDbContext Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Data.InMemoryDatabase.html": {
    "href": "code/Fibula.Data.InMemoryDatabase.html",
    "title": "Namespace Fibula.Data.InMemoryDatabase | Fibula MMO",
    "keywords": "Namespace Fibula.Data.InMemoryDatabase Classes ConfigurationRootExtensions Static class that adds convenient methods to add the concrete implementations contained in this library. FibulaInMemoryDatabaseContext Class that represents a context for an in-memory database."
  },
  "code/Fibula.Data.Repositories.AccountRepository.html": {
    "href": "code/Fibula.Data.Repositories.AccountRepository.html",
    "title": "Class AccountRepository | Fibula MMO",
    "keywords": "Class AccountRepository Class that represents an accounts repository. Inheritance System.Object GenericRepository < AccountEntity > AccountRepository Implements IAccountRepository < AccountEntity > IRepository < AccountEntity > Inherited Members GenericRepository<AccountEntity>.Context GenericRepository<AccountEntity>.GetById(String) GenericRepository<AccountEntity>.GetAll() GenericRepository<AccountEntity>.FindMany(Expression<Func<AccountEntity, Boolean>>) GenericRepository<AccountEntity>.FindOne(Expression<Func<AccountEntity, Boolean>>) GenericRepository<AccountEntity>.Add(AccountEntity) GenericRepository<AccountEntity>.AddRange(IEnumerable<AccountEntity>) GenericRepository<AccountEntity>.Remove(AccountEntity) GenericRepository<AccountEntity>.RemoveRange(IEnumerable<AccountEntity>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Data.Repositories Assembly : Fibula.Data.Repositories.dll Syntax public class AccountRepository : GenericRepository<AccountEntity>, IAccountRepository<AccountEntity>, IRepository<AccountEntity> Constructors | Improve this Doc View Source AccountRepository(DbContext) Initializes a new instance of the AccountRepository class. Declaration public AccountRepository(DbContext context) Parameters Type Name Description Microsoft.EntityFrameworkCore.DbContext context The context to initialize the repository with. Implements IAccountRepository<TEntity> IRepository<TEntity> Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Data.Repositories.CharacterRepository.html": {
    "href": "code/Fibula.Data.Repositories.CharacterRepository.html",
    "title": "Class CharacterRepository | Fibula MMO",
    "keywords": "Class CharacterRepository Class that represents a character repository. Inheritance System.Object GenericRepository < CharacterEntity > CharacterRepository Implements ICharacterRepository < CharacterEntity > IRepository < CharacterEntity > Inherited Members GenericRepository<CharacterEntity>.Context GenericRepository<CharacterEntity>.GetById(String) GenericRepository<CharacterEntity>.GetAll() GenericRepository<CharacterEntity>.FindMany(Expression<Func<CharacterEntity, Boolean>>) GenericRepository<CharacterEntity>.FindOne(Expression<Func<CharacterEntity, Boolean>>) GenericRepository<CharacterEntity>.Add(CharacterEntity) GenericRepository<CharacterEntity>.AddRange(IEnumerable<CharacterEntity>) GenericRepository<CharacterEntity>.Remove(CharacterEntity) GenericRepository<CharacterEntity>.RemoveRange(IEnumerable<CharacterEntity>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Data.Repositories Assembly : Fibula.Data.Repositories.dll Syntax public class CharacterRepository : GenericRepository<CharacterEntity>, ICharacterRepository<CharacterEntity>, IRepository<CharacterEntity> Constructors | Improve this Doc View Source CharacterRepository(DbContext) Initializes a new instance of the CharacterRepository class. Declaration public CharacterRepository(DbContext context) Parameters Type Name Description Microsoft.EntityFrameworkCore.DbContext context The context to initialize the repository with. Implements ICharacterRepository<TEntity> IRepository<TEntity> Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Data.Repositories.GenericRepository-1.html": {
    "href": "code/Fibula.Data.Repositories.GenericRepository-1.html",
    "title": "Class GenericRepository<TEntity> | Fibula MMO",
    "keywords": "Class GenericRepository<TEntity> Class that represents a repository for any entity in the context. Inheritance System.Object GenericRepository<TEntity> AccountRepository CharacterRepository Implements IRepository <TEntity> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Data.Repositories Assembly : Fibula.Data.Repositories.dll Syntax public abstract class GenericRepository<TEntity> : IRepository<TEntity> where TEntity : BaseEntity Type Parameters Name Description TEntity The type of entity. Constructors | Improve this Doc View Source GenericRepository(DbContext) Initializes a new instance of the GenericRepository<TEntity> class. Declaration public GenericRepository(DbContext context) Parameters Type Name Description Microsoft.EntityFrameworkCore.DbContext context The context to use with this repository. Properties | Improve this Doc View Source Context Gets the reference to the context. Declaration protected DbContext Context { get; } Property Value Type Description Microsoft.EntityFrameworkCore.DbContext Methods | Improve this Doc View Source Add(TEntity) Adds an entity to the set in the context. Declaration public void Add(TEntity entity) Parameters Type Name Description TEntity entity The entity to add. | Improve this Doc View Source AddRange(IEnumerable<TEntity>) Adds a range of entities to the set in the context. Declaration public void AddRange(IEnumerable<TEntity> entities) Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> entities The entity range to add. | Improve this Doc View Source FindMany(Expression<Func<TEntity, Boolean>>) Finds all the entities in the set within the context that satisfy an expression. Declaration public IEnumerable<TEntity> FindMany(Expression<Func<TEntity, bool>> predicate) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> predicate The expression to satisfy. Returns Type Description System.Collections.Generic.IEnumerable <TEntity> The collection of entities retrieved. | Improve this Doc View Source FindOne(Expression<Func<TEntity, Boolean>>) Finds an entity in the set within the context that satisfies an expression. If more than one entity satisfies the expression, one is picked up in an unknown criteria. Declaration public TEntity FindOne(Expression<Func<TEntity, bool>> predicate) Parameters Type Name Description System.Linq.Expressions.Expression < System.Func <TEntity, System.Boolean >> predicate The expression to satisfy. Returns Type Description TEntity The entity found. | Improve this Doc View Source GetAll() Gets all the entities from the set in the context. Declaration public IEnumerable<TEntity> GetAll() Returns Type Description System.Collections.Generic.IEnumerable <TEntity> The collection of entities retrieved. | Improve this Doc View Source GetById(String) Gets an entity that matches an id, from the context. Declaration public TEntity GetById(string id) Parameters Type Name Description System.String id The id to match. Returns Type Description TEntity The entity found, if any. | Improve this Doc View Source Remove(TEntity) Removes an entity from the set in the context. Declaration public void Remove(TEntity entity) Parameters Type Name Description TEntity entity The entity to remove. | Improve this Doc View Source RemoveRange(IEnumerable<TEntity>) Removes a range of entities from the set in the context. Declaration public void RemoveRange(IEnumerable<TEntity> entities) Parameters Type Name Description System.Collections.Generic.IEnumerable <TEntity> entities The entity range to remove. Implements IRepository<TEntity> Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Data.Repositories.html": {
    "href": "code/Fibula.Data.Repositories.html",
    "title": "Namespace Fibula.Data.Repositories | Fibula MMO",
    "keywords": "Namespace Fibula.Data.Repositories Classes AccountRepository Class that represents an accounts repository. CharacterRepository Class that represents a character repository. GenericRepository<TEntity> Class that represents a repository for any entity in the context."
  },
  "code/Fibula.Data.UnitOfWork.html": {
    "href": "code/Fibula.Data.UnitOfWork.html",
    "title": "Class UnitOfWork | Fibula MMO",
    "keywords": "Class UnitOfWork Class that represents a unit of work for the Fibula project. Inheritance System.Object UnitOfWork Implements IUnitOfWork < AccountEntity , CharacterEntity > System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Data Assembly : Fibula.Data.dll Syntax public class UnitOfWork : IUnitOfWork<AccountEntity, CharacterEntity>, IDisposable Constructors | Improve this Doc View Source UnitOfWork(IFibulaDbContext) Initializes a new instance of the UnitOfWork class. Declaration public UnitOfWork(IFibulaDbContext context) Parameters Type Name Description IFibulaDbContext context The context to work on. Properties | Improve this Doc View Source Accounts Gets a reference to the accounts repository. Declaration public IAccountRepository<AccountEntity> Accounts { get; } Property Value Type Description IAccountRepository < AccountEntity > | Improve this Doc View Source Characters Gets a reference to the characters repository. Declaration public ICharacterRepository<CharacterEntity> Characters { get; } Property Value Type Description ICharacterRepository < CharacterEntity > Methods | Improve this Doc View Source Complete() Completes this unit of work. Declaration public int Complete() Returns Type Description System.Int32 The number of changes saved upon completion of this unit of work. | Improve this Doc View Source Dispose() Disposes this unit of work and it's resources. Declaration public void Dispose() Implements IUnitOfWork<TAccounts, TCharacters> System.IDisposable Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Items.BodyContainerItem.html": {
    "href": "code/Fibula.Items.BodyContainerItem.html",
    "title": "Class BodyContainerItem | Fibula MMO",
    "keywords": "Class BodyContainerItem Class that represents a container item for body slots. Inheritance System.Object Thing Item ContainerItem BodyContainerItem Implements IContainerItem IItem IThing IContainedThing IThingContainer ILocatable Inherited Members ContainerItem.ContentAdded ContainerItem.ContentUpdated ContainerItem.ContentRemoved ContainerItem.Content ContainerItem.Item[Int32] ContainerItem.RemoveContent(IThingFactory, IThing, Byte, Byte) ContainerItem.ReplaceContent(IThingFactory, IThing, IThing, Byte, Byte) ContainerItem.CountAmountAt(Byte, UInt16) ContainerItem.IsChildOf(IItem) ContainerItem.FindThingAtIndex(Byte) ContainerItem.InvokeContentAdded(IItem) ContainerItem.InvokeContentRemoved(Byte) ContainerItem.InvokeContentUpdated(Byte, IItem) Item.UniqueId Item.Type Item.Attributes Item.ThingId Item.ChangesOnUse Item.ChangeOnUseTo Item.CanBeRotated Item.RotateTo Item.CanBeMoved Item.HasCollision Item.HasSeparation Item.IsCumulative Item.Amount Item.IsContainer Item.CanBeDressed Item.DressPosition Item.IsGround Item.MovementPenalty Item.IsGroundFix Item.StaysOnTop Item.StaysOnBottom Item.IsLiquidPool Item.IsLiquidSource Item.IsLiquidContainer Item.LiquidType Item.BlocksThrow Item.BlocksPass Item.BlocksLay Item.IsPathBlocking(Byte) Item.Merge(IItem) Item.Split(IItemFactory, Byte) Item.DescribeForLogger() Thing.ThingChanged Thing.ParentContainer Thing.InvokePropertyChanged(String) Thing.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Fibula.Items Assembly : Fibula.Items.dll Syntax public class BodyContainerItem : ContainerItem, IContainerItem, IItem, IThing, IContainedThing, IThingContainer, ILocatable Constructors | Improve this Doc View Source BodyContainerItem(Slot) Initializes a new instance of the BodyContainerItem class. Declaration public BodyContainerItem(Slot slot) Parameters Type Name Description Slot slot The slot at which this body container is. Properties | Improve this Doc View Source Capacity Gets the capacity of this container. Declaration public override byte Capacity { get; } Property Value Type Description System.Byte Overrides ContainerItem.Capacity | Improve this Doc View Source CarryLocation Gets the location where this thing is being carried at, which is none for creatures. Declaration public override Location? CarryLocation { get; } Property Value Type Description System.Nullable < Location > Overrides Item.CarryLocation | Improve this Doc View Source Location Gets this body container's location. Declaration public override Location Location { get; } Property Value Type Description Location Overrides Thing.Location | Improve this Doc View Source Slot Gets this body container's slot. Declaration public Slot Slot { get; } Property Value Type Description Slot Methods | Improve this Doc View Source AddContent(IThingFactory, IThing, Byte) Attempts to add a IThing to this container. Declaration public override (bool result, IThing remainder) AddContent(IThingFactory thingFactory, IThing thing, byte index = 255) Parameters Type Name Description IThingFactory thingFactory A reference to the factory of things to use. IThing thing The IThing to add to the container. System.Byte index Optional. The index at which to add the IThing . Defaults to byte.MaxValue, which instructs to add the IThing at any free index. Returns Type Description System.ValueTuple < System.Boolean , IThing > A tuple with a value indicating whether the attempt was at least partially successful, and false otherwise. If the result was only partially successful, a remainder of the thing may be returned. Overrides ContainerItem.AddContent(IThingFactory, IThing, Byte) Implements IContainerItem IItem IThing IContainedThing IThingContainer ILocatable Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Items.ContainerItem.html": {
    "href": "code/Fibula.Items.ContainerItem.html",
    "title": "Class ContainerItem | Fibula MMO",
    "keywords": "Class ContainerItem Class that represents all container items in the game. Inheritance System.Object Thing Item ContainerItem BodyContainerItem Implements IContainerItem IItem IThing IContainedThing IThingContainer ILocatable Inherited Members Item.UniqueId Item.Type Item.Attributes Item.ThingId Item.ChangesOnUse Item.ChangeOnUseTo Item.CanBeRotated Item.RotateTo Item.CanBeMoved Item.HasCollision Item.HasSeparation Item.IsCumulative Item.Amount Item.IsContainer Item.CanBeDressed Item.DressPosition Item.IsGround Item.MovementPenalty Item.CarryLocation Item.IsGroundFix Item.StaysOnTop Item.StaysOnBottom Item.IsLiquidPool Item.IsLiquidSource Item.IsLiquidContainer Item.LiquidType Item.BlocksThrow Item.BlocksPass Item.BlocksLay Item.IsPathBlocking(Byte) Item.Merge(IItem) Item.Split(IItemFactory, Byte) Item.DescribeForLogger() Thing.ThingChanged Thing.ParentContainer Thing.Location Thing.InvokePropertyChanged(String) Thing.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Fibula.Items Assembly : Fibula.Items.dll Syntax public class ContainerItem : Item, IContainerItem, IItem, IThing, IContainedThing, IThingContainer, ILocatable Constructors | Improve this Doc View Source ContainerItem(IItemType) Initializes a new instance of the ContainerItem class. Declaration public ContainerItem(IItemType type) Parameters Type Name Description IItemType type The type of this item. Properties | Improve this Doc View Source Capacity Gets the capacity of this container. Declaration public virtual byte Capacity { get; } Property Value Type Description System.Byte | Improve this Doc View Source Content Gets the collection of items contained in this container. Declaration public IList<IItem> Content { get; } Property Value Type Description System.Collections.Generic.IList < IItem > | Improve this Doc View Source Item[Int32] Attempts to retrieve an item from the contents of this container based on a given index. Declaration public IItem this[int index] { get; } Parameters Type Name Description System.Int32 index The index to retrieve. Property Value Type Description IItem The item retrieved, if any, or null. Methods | Improve this Doc View Source AddContent(IThingFactory, IThing, Byte) Attempts to add a IThing to this container. Declaration public virtual (bool result, IThing remainder) AddContent(IThingFactory thingFactory, IThing thing, byte index = 255) Parameters Type Name Description IThingFactory thingFactory A reference to the factory of things to use. IThing thing The IThing to add to the container. System.Byte index Optional. The index at which to add the IThing . Defaults to byte.MaxValue, which instructs to add the IThing at any free index. Returns Type Description System.ValueTuple < System.Boolean , IThing > A tuple with a value indicating whether the attempt was at least partially successful, and false otherwise. If the result was only partially successful, a remainder of the thing may be returned. | Improve this Doc View Source CountAmountAt(Byte, UInt16) Counts the amount of the specified content item at a given index within this container. Declaration public sbyte CountAmountAt(byte index, ushort typeIdExpected = 0) Parameters Type Name Description System.Byte index The index at which to count. System.UInt16 typeIdExpected Optional. The type id of the content item expected to be found. Returns Type Description System.SByte The count of the item at the index. If typeIdExpected is specified, the value returned will only count if the type matches, otherwise -1 will be returned. | Improve this Doc View Source FindThingAtIndex(Byte) Attempts to find an IThing whitin this container. Declaration public IThing FindThingAtIndex(byte index) Parameters Type Name Description System.Byte index The index at which to look for the IThing . Returns Type Description IThing The IThing found at the index, if any was found. | Improve this Doc View Source InvokeContentAdded(IItem) Invokes the ContentAdded event on this container. Declaration protected void InvokeContentAdded(IItem itemAdded) Parameters Type Name Description IItem itemAdded The item added. | Improve this Doc View Source InvokeContentRemoved(Byte) Invokes the ContentRemoved event on this container. Declaration protected void InvokeContentRemoved(byte index) Parameters Type Name Description System.Byte index The index within the container from where the item was removed. | Improve this Doc View Source InvokeContentUpdated(Byte, IItem) Invokes the ContentUpdated event on this container. Declaration protected void InvokeContentUpdated(byte index, IItem updatedItem) Parameters Type Name Description System.Byte index The index within the container from where the item was updated. IItem updatedItem The item that was updated. | Improve this Doc View Source IsChildOf(IItem) Checks that this item's parents are not this same item. Declaration public bool IsChildOf(IItem item) Parameters Type Name Description IItem item The parent item to check. Returns Type Description System.Boolean True if the given item is a parent of this item, at any level of the parent hierarchy, false otherwise. | Improve this Doc View Source RemoveContent(IThingFactory, ref IThing, Byte, Byte) Attempts to remove a thing from this container. Declaration public virtual (bool result, IThing remainder) RemoveContent(IThingFactory thingFactory, ref IThing thing, byte index = 255, byte amount = 1) Parameters Type Name Description IThingFactory thingFactory A reference to the factory of things to use. IThing thing The IThing to remove from the container. System.Byte index Optional. The index from which to remove the IThing . Defaults to byte.MaxValue, which instructs to remove the IThing if found at any index. System.Byte amount Optional. The amount of the thing to remove. Returns Type Description System.ValueTuple < System.Boolean , IThing > A tuple with a value indicating whether the attempt was at least partially successful, and false otherwise. If the result was only partially successful, a remainder of the thing may be returned. | Improve this Doc View Source ReplaceContent(IThingFactory, IThing, IThing, Byte, Byte) Attempts to replace a IThing from this container with another. Declaration public (bool result, IThing remainderToChange) ReplaceContent(IThingFactory thingFactory, IThing fromThing, IThing toThing, byte index = 255, byte amount = 1) Parameters Type Name Description IThingFactory thingFactory A reference to the factory of things to use. IThing fromThing The IThing to remove from the container. IThing toThing The IThing to add to the container. System.Byte index Optional. The index from which to replace the IThing . Defaults to byte.MaxValue, which instructs to replace the IThing if found at any index. System.Byte amount Optional. The amount of the fromThing to replace. Returns Type Description System.ValueTuple < System.Boolean , IThing > A tuple with a value indicating whether the attempt was at least partially successful, and false otherwise. If the result was only partially successful, a remainder of the thing may be returned. Events | Improve this Doc View Source ContentAdded A delegate to invoke when new content is added to this container. Declaration public event OnContentAdded ContentAdded Event Type Type Description OnContentAdded | Improve this Doc View Source ContentRemoved A delegate to invoke when content is removed from this container. Declaration public event OnContentRemoved ContentRemoved Event Type Type Description OnContentRemoved | Improve this Doc View Source ContentUpdated A delegate to invoke when content is updated in this container. Declaration public event OnContentUpdated ContentUpdated Event Type Type Description OnContentUpdated Implements IContainerItem IItem IThing IContainedThing IThingContainer ILocatable Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Items.Contracts.Abstractions.html": {
    "href": "code/Fibula.Items.Contracts.Abstractions.html",
    "title": "Namespace Fibula.Items.Contracts.Abstractions | Fibula MMO",
    "keywords": "Namespace Fibula.Items.Contracts.Abstractions Interfaces IContainerItem Interface for IItem s that are containers for other IItem s. IContainerManager Interface for a container manager. IItem Interface for all items in the game. IItemFactory Interface for an item factory. IItemType Interface for types of items. IItemTypeLoader Interface for an IItemType loader. IPredefinedItemSet Interface that defines pre-defined items that are used by the server logic."
  },
  "code/Fibula.Items.Contracts.Abstractions.IContainerItem.html": {
    "href": "code/Fibula.Items.Contracts.Abstractions.IContainerItem.html",
    "title": "Interface IContainerItem | Fibula MMO",
    "keywords": "Interface IContainerItem Interface for IItem s that are containers for other IItem s. Inherited Members IItem.UniqueId IItem.Type IItem.Attributes IItem.Amount IItem.IsGround IItem.MovementPenalty IItem.StaysOnTop IItem.StaysOnBottom IItem.ChangesOnUse IItem.ChangeOnUseTo IItem.CanBeRotated IItem.RotateTo IItem.IsLiquidPool IItem.IsLiquidSource IItem.IsLiquidContainer IItem.LiquidType IItem.BlocksThrow IItem.BlocksPass IItem.BlocksLay IItem.IsCumulative IItem.IsContainer IItem.CanBeDressed IItem.DressPosition IItem.HasCollision IItem.HasSeparation IItem.IsGroundFix IItem.Merge(IItem) IItem.Split(IItemFactory, Byte) IItem.IsPathBlocking(Byte) IThing.ThingChanged IThing.ThingId IThing.CanBeMoved IThing.DescribeForLogger() IContainedThing.ParentContainer IThingContainer.FindThingAtIndex(Byte) IThingContainer.AddContent(IThingFactory, IThing, Byte) IThingContainer.RemoveContent(IThingFactory, IThing, Byte, Byte) IThingContainer.ReplaceContent(IThingFactory, IThing, IThing, Byte, Byte) ILocatable.Location ILocatable.CarryLocation Namespace : Fibula.Items.Contracts.Abstractions Assembly : Fibula.Items.Contracts.dll Syntax public interface IContainerItem : IItem, IThing, IContainedThing, IThingContainer, ILocatable Fields | Improve this Doc View Source DefaultContainerCapacity The default container capacity value. Declaration public const int DefaultContainerCapacity = 8 Field Value Type Description System.Int32 Properties | Improve this Doc View Source Capacity Gets the capacity of this container. Declaration byte Capacity { get; } Property Value Type Description System.Byte | Improve this Doc View Source Content Gets the collection of items contained in this container. Declaration IList<IItem> Content { get; } Property Value Type Description System.Collections.Generic.IList < IItem > | Improve this Doc View Source Item[Int32] Attempts to retrieve an item from the contents of this container based on a given index. Declaration IItem this[int index] { get; } Parameters Type Name Description System.Int32 index The index to retrieve. Property Value Type Description IItem The item retrieved, if any, or null. Methods | Improve this Doc View Source CountAmountAt(Byte, UInt16) Counts the amount of the specified content item at a given index within this container. Declaration sbyte CountAmountAt(byte index, ushort typeIdExpected = 0) Parameters Type Name Description System.Byte index The index at which to count. System.UInt16 typeIdExpected Optional. The type id of the content item expected to be found. Returns Type Description System.SByte The count of the item at the index. If typeIdExpected is specified, the value returned will only count if the type matches, otherwise -1 will be returned. | Improve this Doc View Source IsChildOf(IItem) Checks that this item's parents are not this same item. Declaration bool IsChildOf(IItem item) Parameters Type Name Description IItem item The parent item to check. Returns Type Description System.Boolean True if this item is child of any item in the parent hierarchy, false otherwise. Events | Improve this Doc View Source ContentAdded A delegate to invoke when new content is added to this container. Declaration event OnContentAdded ContentAdded Event Type Type Description OnContentAdded | Improve this Doc View Source ContentRemoved A delegate to invoke when content is removed from this container. Declaration event OnContentRemoved ContentRemoved Event Type Type Description OnContentRemoved | Improve this Doc View Source ContentUpdated A delegate to invoke when content is updated in this container. Declaration event OnContentUpdated ContentUpdated Event Type Type Description OnContentUpdated Extension Methods ContainerExtensions.GetParentContainerHierarchy(IContainedThing, Boolean) ContainerExtensions.GetParentContainerHierarchy(IThingContainer, Boolean) ItemExtensions.GetCarrier(IItem) ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Items.Contracts.Abstractions.IContainerManager.html": {
    "href": "code/Fibula.Items.Contracts.Abstractions.IContainerManager.html",
    "title": "Interface IContainerManager | Fibula MMO",
    "keywords": "Interface IContainerManager Interface for a container manager. Namespace : Fibula.Items.Contracts.Abstractions Assembly : Fibula.Items.Contracts.dll Syntax public interface IContainerManager Methods | Improve this Doc View Source CloseContainer(UInt32, IContainerItem, Byte) Performs a container close action for a player. Declaration void CloseContainer(uint forCreatureId, IContainerItem containerItem, byte atPosition) Parameters Type Name Description System.UInt32 forCreatureId The id of the creature for which the container is being closed. IContainerItem containerItem The container being closed. System.Byte atPosition The position in which to close the container, for the player. | Improve this Doc View Source FindAllForCreature(UInt32) Finds all the containers known by the specified creature. Declaration IEnumerable<IContainerItem> FindAllForCreature(uint creatureId) Parameters Type Name Description System.UInt32 creatureId The id of the creature. Returns Type Description System.Collections.Generic.IEnumerable < IContainerItem > A collection of containers that the creature knows. | Improve this Doc View Source FindForCreature(UInt32, IContainerItem) Finds the position of a specified container as seen by a specific creature. Declaration byte FindForCreature(uint creatureId, IContainerItem container) Parameters Type Name Description System.UInt32 creatureId The id of the creature for which to find the container. IContainerItem container The container to look for. Returns Type Description System.Byte The position of container found, or UnsetContainerPosition > if not found. | Improve this Doc View Source FindForCreature(UInt32, Byte) Finds a container for a specific creature at the specified position. Declaration IContainerItem FindForCreature(uint creatureId, byte atPosition) Parameters Type Name Description System.UInt32 creatureId The id of the creature for which to find the container. System.Byte atPosition The position at which to look for the container. Returns Type Description IContainerItem The container found, or null if not found. | Improve this Doc View Source OpenContainer(UInt32, IContainerItem, Byte) Performs a container open action for a player. Declaration void OpenContainer(uint forCreatureId, IContainerItem containerItem, byte atPosition = 255) Parameters Type Name Description System.UInt32 forCreatureId The id of the creature for which the container is being opened. IContainerItem containerItem The container being opened. System.Byte atPosition The position in which to open the container, for the player. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Items.Contracts.Abstractions.IItem.html": {
    "href": "code/Fibula.Items.Contracts.Abstractions.IItem.html",
    "title": "Interface IItem | Fibula MMO",
    "keywords": "Interface IItem Interface for all items in the game. Inherited Members IThing.ThingChanged IThing.ThingId IThing.CanBeMoved IThing.DescribeForLogger() ILocatable.Location ILocatable.CarryLocation IContainedThing.ParentContainer Namespace : Fibula.Items.Contracts.Abstractions Assembly : Fibula.Items.Contracts.dll Syntax public interface IItem : IThing, ILocatable, IContainedThing Properties | Improve this Doc View Source Amount Gets or sets the amount of this item. Declaration byte Amount { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source Attributes Gets the attributes of this item. Declaration IDictionary<ItemAttribute, IConvertible> Attributes { get; } Property Value Type Description System.Collections.Generic.IDictionary < ItemAttribute , System.IConvertible > | Improve this Doc View Source BlocksLay Gets a value indicating whether the item blocks laying anything on it. Declaration bool BlocksLay { get; } Property Value Type Description System.Boolean | Improve this Doc View Source BlocksPass Gets a value indicating whether the item blocks walking on it. Declaration bool BlocksPass { get; } Property Value Type Description System.Boolean | Improve this Doc View Source BlocksThrow Gets a value indicating whether the item blocks throwing through it. Declaration bool BlocksThrow { get; } Property Value Type Description System.Boolean | Improve this Doc View Source CanBeDressed Gets a value indicating whether this item can be dressed. Declaration bool CanBeDressed { get; } Property Value Type Description System.Boolean | Improve this Doc View Source CanBeRotated Gets a value indicating whether this item can be rotated. Declaration bool CanBeRotated { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ChangeOnUseTo Gets the Id of the item into which this will change upon use. Callers must check ChangesOnUse to verify this item does indeed have a target. Declaration ushort ChangeOnUseTo { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source ChangesOnUse Gets a value indicating whether this item changes on use. Declaration bool ChangesOnUse { get; } Property Value Type Description System.Boolean | Improve this Doc View Source DressPosition Gets the position at which the item can be dressed. Declaration Slot DressPosition { get; } Property Value Type Description Slot | Improve this Doc View Source HasCollision Gets a value indicating whether this item triggers a collision event. Declaration bool HasCollision { get; } Property Value Type Description System.Boolean | Improve this Doc View Source HasSeparation Gets a value indicating whether this item triggers a separation event. Declaration bool HasSeparation { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsContainer Gets a value indicating whether this item is a container. Declaration bool IsContainer { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsCumulative Gets a value indicating whether this item can be accumulated. Declaration bool IsCumulative { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsGround Gets a value indicating whether this item is ground floor. Declaration bool IsGround { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsGroundFix Gets a value indicating whether this item is clipped to the ground. Declaration bool IsGroundFix { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsLiquidContainer Gets a value indicating whether this item is a liquid container. Declaration bool IsLiquidContainer { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsLiquidPool Gets a value indicating whether this item is a liquid pool. Declaration bool IsLiquidPool { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsLiquidSource Gets a value indicating whether this item is a liquid source. Declaration bool IsLiquidSource { get; } Property Value Type Description System.Boolean | Improve this Doc View Source LiquidType Gets the type of liquid in this item, assuming it: IsLiquidPool , IsLiquidSource , or IsLiquidContainer . Declaration LiquidType LiquidType { get; } Property Value Type Description LiquidType | Improve this Doc View Source MovementPenalty Gets the movement cost for walking over this item, assuming it IsGround . Declaration byte MovementPenalty { get; } Property Value Type Description System.Byte | Improve this Doc View Source RotateTo Gets the Id of the item into which this will rotate to. Callers must check CanBeRotated to verify this item does indeed have a target. Declaration ushort RotateTo { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source StaysOnBottom Gets a value indicating whether this item stays on the bottom of the stack. Declaration bool StaysOnBottom { get; } Property Value Type Description System.Boolean | Improve this Doc View Source StaysOnTop Gets a value indicating whether this item stays on top of the stack. Declaration bool StaysOnTop { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Type Gets a reference to this item's IItemType . Declaration IItemType Type { get; } Property Value Type Description IItemType | Improve this Doc View Source UniqueId Gets the unique id of this item. Declaration Guid UniqueId { get; } Property Value Type Description System.Guid Methods | Improve this Doc View Source IsPathBlocking(Byte) Determines if this item is blocks pathfinding. Declaration bool IsPathBlocking(byte avoidTypes = 14) Parameters Type Name Description System.Byte avoidTypes The damage types to avoid when checking for path blocking. By default, all types are considered path blocking. Returns Type Description System.Boolean True if the tile is considered path blocking, false otherwise. | Improve this Doc View Source Merge(IItem) Attempts to join an item to this item's content at the default index. Declaration (bool success, IItem surplusItem) Merge(IItem otherItem) Parameters Type Name Description IItem otherItem The item to join with. Returns Type Description System.ValueTuple < System.Boolean , IItem > True if the operation was successful, false otherwise. Along with any surplus of the item after merge. | Improve this Doc View Source Split(IItemFactory, Byte) Attempts to split this item into two based on the amount provided. Declaration (bool success, IItem itemProduced) Split(IItemFactory itemFactory, byte amount) Parameters Type Name Description IItemFactory itemFactory A reference to the item factory in use. System.Byte amount The amount of the item to split. Returns Type Description System.ValueTuple < System.Boolean , IItem > True if the operation was successful, false otherwise, along with the item produced, if any. Extension Methods ContainerExtensions.GetParentContainerHierarchy(IContainedThing, Boolean) ItemExtensions.GetCarrier(IItem) ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Items.Contracts.Abstractions.IItemFactory.html": {
    "href": "code/Fibula.Items.Contracts.Abstractions.IItemFactory.html",
    "title": "Interface IItemFactory | Fibula MMO",
    "keywords": "Interface IItemFactory Interface for an item factory. Inherited Members IThingFactory.Create(IThingCreationArguments) Namespace : Fibula.Items.Contracts.Abstractions Assembly : Fibula.Items.Contracts.dll Syntax public interface IItemFactory : IThingFactory Methods | Improve this Doc View Source CreateItem(IThingCreationArguments) Creates a new IItem . Declaration IItem CreateItem(IThingCreationArguments creationArguments) Parameters Type Name Description IThingCreationArguments creationArguments The arguments for the IItem creation. Returns Type Description IItem A new instance of the IItem . | Improve this Doc View Source FindTypeById(UInt16) Looks up an IItemType given a type id. Declaration IItemType FindTypeById(ushort typeId) Parameters Type Name Description System.UInt16 typeId The id of the type to look for. Returns Type Description IItemType A reference to the IItemType found, and null if not found. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Items.Contracts.Abstractions.IItemType.html": {
    "href": "code/Fibula.Items.Contracts.Abstractions.IItemType.html",
    "title": "Interface IItemType | Fibula MMO",
    "keywords": "Interface IItemType Interface for types of items. Inherited Members System.ICloneable.Clone() Namespace : Fibula.Items.Contracts.Abstractions Assembly : Fibula.Items.Contracts.dll Syntax public interface IItemType : ICloneable Properties | Improve this Doc View Source ClientId Gets the client id of the type of this item. Declaration ushort ClientId { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source DefaultAttributes Gets the attributes of this type of item. Declaration IDictionary<ItemAttribute, IConvertible> DefaultAttributes { get; } Property Value Type Description System.Collections.Generic.IDictionary < ItemAttribute , System.IConvertible > | Improve this Doc View Source Description Gets the decription of this type of item. Declaration string Description { get; } Property Value Type Description System.String | Improve this Doc View Source Flags Gets the flags for this type of item. Declaration ISet<ItemFlag> Flags { get; } Property Value Type Description System.Collections.Generic.ISet < ItemFlag > | Improve this Doc View Source Name Gets the name of this type of item. Declaration string Name { get; } Property Value Type Description System.String | Improve this Doc View Source TypeId Gets the id of the type of this item. Declaration ushort TypeId { get; } Property Value Type Description System.UInt16 Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Items.Contracts.Abstractions.IItemTypeLoader.html": {
    "href": "code/Fibula.Items.Contracts.Abstractions.IItemTypeLoader.html",
    "title": "Interface IItemTypeLoader | Fibula MMO",
    "keywords": "Interface IItemTypeLoader Interface for an IItemType loader. Namespace : Fibula.Items.Contracts.Abstractions Assembly : Fibula.Items.Contracts.dll Syntax public interface IItemTypeLoader Methods | Improve this Doc View Source LoadTypes() Attempts to load the item catalog. Declaration IDictionary<ushort, IItemType> LoadTypes() Returns Type Description System.Collections.Generic.IDictionary < System.UInt16 , IItemType > The catalog, containing a mapping of loaded id to the item types. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Items.Contracts.Abstractions.IPredefinedItemSet.html": {
    "href": "code/Fibula.Items.Contracts.Abstractions.IPredefinedItemSet.html",
    "title": "Interface IPredefinedItemSet | Fibula MMO",
    "keywords": "Interface IPredefinedItemSet Interface that defines pre-defined items that are used by the server logic. Namespace : Fibula.Items.Contracts.Abstractions Assembly : Fibula.Items.Contracts.dll Syntax public interface IPredefinedItemSet Methods | Improve this Doc View Source FindPoolForBloodType(BloodType) Finds the splatter IItemType for a given blood type. Declaration IItemType FindPoolForBloodType(BloodType bloodType) Parameters Type Name Description BloodType bloodType The type of blood to look the item type for. Returns Type Description IItemType The IItemType that's predefined for that blood type, or null if none is. | Improve this Doc View Source FindSplatterForBloodType(BloodType) Finds the splatter IItemType for a given blood type. Declaration IItemType FindSplatterForBloodType(BloodType bloodType) Parameters Type Name Description BloodType bloodType The type of blood to look the item type for. Returns Type Description IItemType The IItemType that's predefined for that blood type, or null if none is. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Items.Contracts.Constants.html": {
    "href": "code/Fibula.Items.Contracts.Constants.html",
    "title": "Namespace Fibula.Items.Contracts.Constants | Fibula MMO",
    "keywords": "Namespace Fibula.Items.Contracts.Constants Classes ItemConstants Static class that contains constants regarding items."
  },
  "code/Fibula.Items.Contracts.Constants.ItemConstants.html": {
    "href": "code/Fibula.Items.Contracts.Constants.ItemConstants.html",
    "title": "Class ItemConstants | Fibula MMO",
    "keywords": "Class ItemConstants Static class that contains constants regarding items. Inheritance System.Object ItemConstants Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Items.Contracts.Constants Assembly : Fibula.Items.Contracts.dll Syntax public static class ItemConstants Fields | Improve this Doc View Source MaxContainersPerCreature The maximum number of containers to maintain per creature. Declaration public const int MaxContainersPerCreature = 16 Field Value Type Description System.Int32 | Improve this Doc View Source MaximumAmountOfCummulativeItems The maximum amount value of cummulative items. Declaration public const byte MaximumAmountOfCummulativeItems = 100 Field Value Type Description System.Byte | Improve this Doc View Source UnsetContainerPosition The position to use for unset or new containers. Declaration public const byte UnsetContainerPosition = 255 Field Value Type Description System.Byte"
  },
  "code/Fibula.Items.Contracts.Delegates.html": {
    "href": "code/Fibula.Items.Contracts.Delegates.html",
    "title": "Namespace Fibula.Items.Contracts.Delegates | Fibula MMO",
    "keywords": "Namespace Fibula.Items.Contracts.Delegates Delegates OnContentAdded Delegate meant for when content is added to a container. OnContentRemoved Delegate meant for when content is removed from a container. OnContentUpdated Delegate meant for when content is updated in a container."
  },
  "code/Fibula.Items.Contracts.Delegates.OnContentAdded.html": {
    "href": "code/Fibula.Items.Contracts.Delegates.OnContentAdded.html",
    "title": "Delegate OnContentAdded | Fibula MMO",
    "keywords": "Delegate OnContentAdded Delegate meant for when content is added to a container. Namespace : Fibula.Items.Contracts.Delegates Assembly : Fibula.Items.Contracts.dll Syntax public delegate void OnContentAdded(IContainerItem container, IItem addedItem); Parameters Type Name Description IContainerItem container The container. IItem addedItem The added item. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Items.Contracts.Delegates.OnContentRemoved.html": {
    "href": "code/Fibula.Items.Contracts.Delegates.OnContentRemoved.html",
    "title": "Delegate OnContentRemoved | Fibula MMO",
    "keywords": "Delegate OnContentRemoved Delegate meant for when content is removed from a container. Namespace : Fibula.Items.Contracts.Delegates Assembly : Fibula.Items.Contracts.dll Syntax public delegate void OnContentRemoved(IContainerItem container, byte indexRemoved); Parameters Type Name Description IContainerItem container The container. System.Byte indexRemoved The index of the item removed. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Items.Contracts.Delegates.OnContentUpdated.html": {
    "href": "code/Fibula.Items.Contracts.Delegates.OnContentUpdated.html",
    "title": "Delegate OnContentUpdated | Fibula MMO",
    "keywords": "Delegate OnContentUpdated Delegate meant for when content is updated in a container. Namespace : Fibula.Items.Contracts.Delegates Assembly : Fibula.Items.Contracts.dll Syntax public delegate void OnContentUpdated(IContainerItem container, byte updatedIndex, IItem updatedItem); Parameters Type Name Description IContainerItem container The container. System.Byte updatedIndex The index of the updated item. IItem updatedItem The updated item. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Items.Contracts.Enumerations.BloodType.html": {
    "href": "code/Fibula.Items.Contracts.Enumerations.BloodType.html",
    "title": "Enum BloodType | Fibula MMO",
    "keywords": "Enum BloodType Enumerates the possible blood types. Namespace : Fibula.Items.Contracts.Enumerations Assembly : Fibula.Items.Contracts.dll Syntax public enum BloodType : byte Fields Name Description Blood Normal blood. Bones Bones. Fire Fire. Slime Slime. Extension Methods ObjectExtensions.YieldSingleItem<BloodType>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<BloodType>(String)"
  },
  "code/Fibula.Items.Contracts.Enumerations.html": {
    "href": "code/Fibula.Items.Contracts.Enumerations.html",
    "title": "Namespace Fibula.Items.Contracts.Enumerations | Fibula MMO",
    "keywords": "Namespace Fibula.Items.Contracts.Enumerations Enums BloodType Enumerates the possible blood types. ItemAttribute Enumerates all known item attributes. ItemFlag Enumerates all known item flags."
  },
  "code/Fibula.Items.Contracts.Enumerations.ItemAttribute.html": {
    "href": "code/Fibula.Items.Contracts.Enumerations.ItemAttribute.html",
    "title": "Enum ItemAttribute | Fibula MMO",
    "keywords": "Enum ItemAttribute Enumerates all known item attributes. Namespace : Fibula.Items.Contracts.Enumerations Assembly : Fibula.Items.Contracts.dll Syntax public enum ItemAttribute Fields Name Description Amount Tracks the amount for a cumulative item. Capacity The capacity available in a container item. ChangeOnUseTo The id of the item to change to on use. DamageTypesToAvoid The types of damage to avoid. DisguiseAs The id of the item to disguise as. DressPosition The position at which a dressable item can go. LiquidType The type of liquid that a liquid container, pool or source is of. MovementPenalty The movement penalty that a ground item has. ReadRange The range that a readable item can be read within. RotateTo The id of the item to rotate to. Text The content of a readable item. Extension Methods ObjectExtensions.YieldSingleItem<ItemAttribute>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<ItemAttribute>(String)"
  },
  "code/Fibula.Items.Contracts.Enumerations.ItemFlag.html": {
    "href": "code/Fibula.Items.Contracts.Enumerations.ItemFlag.html",
    "title": "Enum ItemFlag | Fibula MMO",
    "keywords": "Enum ItemFlag Enumerates all known item flags. Namespace : Fibula.Items.Contracts.Enumerations Assembly : Fibula.Items.Contracts.dll Syntax public enum ItemFlag Fields Name Description BlocksLay An item that blocks other items to be laid on top of it. BlocksThrow An item that blocks throwing or projectiles throught it. BlocksWalk An item that blocks walking on it. CanBePickedUp An item that can be picked up. CanBeRotated An item that can be rotated. ChangesOnUse An item that changes when used. IsContainer An item that is a container. IsCumulative An item that is cumulative. IsDisguised An item that disguises as another. IsDressable An item that is dressable. IsGround An item that is ground. IsGroundFix An item that is an aesthetic fix to the ground tile. IsHung And item that is hung. IsLiquidContainer An item that is a container for liquids. IsLiquidPool An item that is a pool of liquid. IsLiquidSource An item that is a source of a certain liquid. IsQuestChest An item that is a quest chest. IsReadable An item that contains text and is readable. IsUnmoveable An item that cannot be moved. ShouldBeAvoided An item that should be avoided by certain damage types, but does not actually BlocksWalk . StaysOnBottom An item that stays on bottom of the stack. StaysOnTop An item that stays on top of the stack. TriggersCollision An item that triggers collision. TriggersSeparation An item that triggers separation. Extension Methods ObjectExtensions.YieldSingleItem<ItemFlag>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<ItemFlag>(String)"
  },
  "code/Fibula.Items.html": {
    "href": "code/Fibula.Items.html",
    "title": "Namespace Fibula.Items | Fibula MMO",
    "keywords": "Namespace Fibula.Items Classes BodyContainerItem Class that represents a container item for body slots. ContainerItem Class that represents all container items in the game. Item Class that represents all items in the game. ItemCreationArguments Class that implements IThingCreationArguments , for the creation of an item. ItemFactory Class that represents an IItem factory. ItemType Class that represents an item type."
  },
  "code/Fibula.Items.Item.html": {
    "href": "code/Fibula.Items.Item.html",
    "title": "Class Item | Fibula MMO",
    "keywords": "Class Item Class that represents all items in the game. Inheritance System.Object Thing Item ContainerItem Implements IItem IThing ILocatable IContainedThing Inherited Members Thing.ThingChanged Thing.ParentContainer Thing.Location Thing.InvokePropertyChanged(String) Thing.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Fibula.Items Assembly : Fibula.Items.dll Syntax public class Item : Thing, IItem, IThing, ILocatable, IContainedThing Constructors | Improve this Doc View Source Item(IItemType) Initializes a new instance of the Item class. Declaration public Item(IItemType type) Parameters Type Name Description IItemType type The type of this item. Properties | Improve this Doc View Source Amount Gets or sets the amount of this item. Declaration public byte Amount { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source Attributes Gets the attributes of this item. Declaration public IDictionary<ItemAttribute, IConvertible> Attributes { get; } Property Value Type Description System.Collections.Generic.IDictionary < ItemAttribute , System.IConvertible > | Improve this Doc View Source BlocksLay Gets a value indicating whether the item blocks laying anything on it. Declaration public bool BlocksLay { get; } Property Value Type Description System.Boolean | Improve this Doc View Source BlocksPass Gets a value indicating whether the item blocks walking on it. Declaration public bool BlocksPass { get; } Property Value Type Description System.Boolean | Improve this Doc View Source BlocksThrow Gets a value indicating whether the item blocks throwing through it. Declaration public bool BlocksThrow { get; } Property Value Type Description System.Boolean | Improve this Doc View Source CanBeDressed Gets a value indicating whether this item can be dressed. Declaration public bool CanBeDressed { get; } Property Value Type Description System.Boolean | Improve this Doc View Source CanBeMoved Gets a value indicating whether this item can be moved. Declaration public override bool CanBeMoved { get; } Property Value Type Description System.Boolean Overrides Thing.CanBeMoved | Improve this Doc View Source CanBeRotated Gets a value indicating whether this item can be rotated. Declaration public bool CanBeRotated { get; } Property Value Type Description System.Boolean | Improve this Doc View Source CarryLocation Gets the location where this thing is being carried at, if any. Declaration public override Location? CarryLocation { get; } Property Value Type Description System.Nullable < Location > Overrides Thing.CarryLocation | Improve this Doc View Source ChangeOnUseTo Gets the Id of the item into which this will change upon use. Callers must check ChangesOnUse to verify this item does indeed have a target. Declaration public ushort ChangeOnUseTo { get; } Property Value Type Description System.UInt16 Exceptions Type Condition System.InvalidOperationException When there is no target to change to. | Improve this Doc View Source ChangesOnUse Gets a value indicating whether this item changes on use. Declaration public bool ChangesOnUse { get; } Property Value Type Description System.Boolean | Improve this Doc View Source DressPosition Gets the position at which the item can be dressed. Declaration public Slot DressPosition { get; } Property Value Type Description Slot | Improve this Doc View Source HasCollision Gets a value indicating whether this item triggers a collision event. Declaration public bool HasCollision { get; } Property Value Type Description System.Boolean | Improve this Doc View Source HasSeparation Gets a value indicating whether this item triggers a separation event. Declaration public bool HasSeparation { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsContainer Gets a value indicating whether this item is a container. Declaration public bool IsContainer { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsCumulative Gets a value indicating whether this item can be accumulated. Declaration public bool IsCumulative { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsGround Gets a value indicating whether this item is ground floor. Declaration public bool IsGround { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsGroundFix Gets a value indicating whether this item is a ground aesthetic fix. Declaration public bool IsGroundFix { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsLiquidContainer Gets a value indicating whether this item is a liquid container. Declaration public bool IsLiquidContainer { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsLiquidPool Gets a value indicating whether this item is a liquid pool. Declaration public bool IsLiquidPool { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsLiquidSource Gets a value indicating whether this item is a liquid source. Declaration public bool IsLiquidSource { get; } Property Value Type Description System.Boolean | Improve this Doc View Source LiquidType Gets the type of liquid in this item, assuming it: IsLiquidPool , IsLiquidSource , or IsLiquidContainer . Declaration public LiquidType LiquidType { get; } Property Value Type Description LiquidType | Improve this Doc View Source MovementPenalty Gets the movement cost for walking over this item, assuming it IsGround . Declaration public byte MovementPenalty { get; } Property Value Type Description System.Byte | Improve this Doc View Source RotateTo Gets the Id of the item into which this will rotate to. Callers must check CanBeRotated to verify this item does indeed have a target. Declaration public ushort RotateTo { get; } Property Value Type Description System.UInt16 Exceptions Type Condition System.InvalidOperationException When there is no target to rotate to. | Improve this Doc View Source StaysOnBottom Gets a value indicating whether this item stays on the bottom of the stack. Declaration public bool StaysOnBottom { get; } Property Value Type Description System.Boolean | Improve this Doc View Source StaysOnTop Gets a value indicating whether this item stays on top of the stack. Declaration public bool StaysOnTop { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ThingId Gets the id of this thing, which is the item's client id. Declaration public override ushort ThingId { get; } Property Value Type Description System.UInt16 Overrides Thing.ThingId | Improve this Doc View Source Type Gets a reference to this item's IItemType . Declaration public IItemType Type { get; } Property Value Type Description IItemType | Improve this Doc View Source UniqueId Gets the unique id of this item. Declaration public Guid UniqueId { get; } Property Value Type Description System.Guid Methods | Improve this Doc View Source DescribeForLogger() Provides a string describing the current thing for logging purposes. Declaration public override string DescribeForLogger() Returns Type Description System.String The string to log. Overrides Thing.DescribeForLogger() | Improve this Doc View Source IsPathBlocking(Byte) Determines if this item is blocks pathfinding. Declaration public bool IsPathBlocking(byte avoidTypes = 14) Parameters Type Name Description System.Byte avoidTypes The damage types to avoid when checking for path blocking. By default, all types are considered path blocking. Returns Type Description System.Boolean True if the tile is considered path blocking, false otherwise. | Improve this Doc View Source Merge(IItem) Attempts to join an item to this item's content at the default index. Declaration public (bool success, IItem surplusItem) Merge(IItem otherItem) Parameters Type Name Description IItem otherItem The item to join with. Returns Type Description System.ValueTuple < System.Boolean , IItem > True if the operation was successful, false otherwise. Along with any surplus of the item after merge. | Improve this Doc View Source Split(IItemFactory, Byte) Attempts to split this item into two based on the amount provided. Declaration public (bool success, IItem itemProduced) Split(IItemFactory itemFactory, byte amount) Parameters Type Name Description IItemFactory itemFactory A reference to the item factory in use. System.Byte amount The amount of the item to split. Returns Type Description System.ValueTuple < System.Boolean , IItem > True if the operation was successful, false otherwise, along with the item produced, if any. Implements IItem IThing ILocatable IContainedThing Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Items.ItemCreationArguments.html": {
    "href": "code/Fibula.Items.ItemCreationArguments.html",
    "title": "Class ItemCreationArguments | Fibula MMO",
    "keywords": "Class ItemCreationArguments Class that implements IThingCreationArguments , for the creation of an item. Inheritance System.Object ItemCreationArguments Implements IThingCreationArguments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Items Assembly : Fibula.Items.dll Syntax public class ItemCreationArguments : IThingCreationArguments Properties | Improve this Doc View Source Attributes Gets or sets the attributes to set in the item to create. Declaration public IReadOnlyCollection<(ItemAttribute, IConvertible)> Attributes { get; set; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < System.ValueTuple < ItemAttribute , System.IConvertible >> | Improve this Doc View Source TypeId Gets or sets the id of type for the item to create. Declaration public ushort TypeId { get; set; } Property Value Type Description System.UInt16 Implements IThingCreationArguments Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Items.ItemFactory.html": {
    "href": "code/Fibula.Items.ItemFactory.html",
    "title": "Class ItemFactory | Fibula MMO",
    "keywords": "Class ItemFactory Class that represents an IItem factory. Inheritance System.Object ItemFactory Implements IItemFactory IThingFactory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Items Assembly : Fibula.Items.dll Syntax public class ItemFactory : IItemFactory, IThingFactory Constructors | Improve this Doc View Source ItemFactory(IItemTypeLoader) Initializes a new instance of the ItemFactory class. Declaration public ItemFactory(IItemTypeLoader itemLoader) Parameters Type Name Description IItemTypeLoader itemLoader A reference to the item type loader to use. Methods | Improve this Doc View Source Create(IThingCreationArguments) Creates a new IThing . Declaration public IThing Create(IThingCreationArguments creationArguments) Parameters Type Name Description IThingCreationArguments creationArguments The arguments for the IThing creation. Returns Type Description IThing A new instance of the IThing . | Improve this Doc View Source CreateItem(IThingCreationArguments) Creates a new IItem given the id of its type. Declaration public IItem CreateItem(IThingCreationArguments creationArguments) Parameters Type Name Description IThingCreationArguments creationArguments The id of the type. Returns Type Description IItem The new IItem instance. | Improve this Doc View Source FindTypeById(UInt16) Looks up an IItemType given a type id. Declaration public IItemType FindTypeById(ushort typeId) Parameters Type Name Description System.UInt16 typeId The id of the type to look for. Returns Type Description IItemType A reference to the IItemType found, and null if not found. Implements IItemFactory IThingFactory Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Items.ItemType.html": {
    "href": "code/Fibula.Items.ItemType.html",
    "title": "Class ItemType | Fibula MMO",
    "keywords": "Class ItemType Class that represents an item type. Inheritance System.Object ItemType Implements IItemType System.ICloneable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Items Assembly : Fibula.Items.dll Syntax public class ItemType : IItemType, ICloneable Constructors | Improve this Doc View Source ItemType() Initializes a new instance of the ItemType class. Declaration public ItemType() Properties | Improve this Doc View Source ClientId Gets the client id of the type of this item. Declaration public ushort ClientId { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source DefaultAttributes Gets the attributes of this type of item. Declaration public IDictionary<ItemAttribute, IConvertible> DefaultAttributes { get; } Property Value Type Description System.Collections.Generic.IDictionary < ItemAttribute , System.IConvertible > | Improve this Doc View Source Description Gets or sets the decription of this type of item. Declaration public string Description { get; set; } Property Value Type Description System.String | Improve this Doc View Source Flags Gets the flags for this type of item. Declaration public ISet<ItemFlag> Flags { get; } Property Value Type Description System.Collections.Generic.ISet < ItemFlag > | Improve this Doc View Source Locked Gets a value indicating whether this item type is locked and no longer accepting changes. Declaration public bool Locked { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Gets or sets the name of this type of item. Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source TypeId Gets or sets the id of the type of this item. Declaration public ushort TypeId { get; set; } Property Value Type Description System.UInt16 Methods | Improve this Doc View Source LockChanges() Locks the type, preventing it from accepting changes. Declaration public void LockChanges() | Improve this Doc View Source SetAttribute(ItemAttribute, Int32) Sets an attribute in this type. Declaration public void SetAttribute(ItemAttribute attribute, int attributeValue) Parameters Type Name Description ItemAttribute attribute The attribute to set in the type. System.Int32 attributeValue The value of the attribute to set in the type. | Improve this Doc View Source SetFlag(ItemFlag) Sets a flag in this type. Declaration public void SetFlag(ItemFlag flag) Parameters Type Name Description ItemFlag flag The flag to set in the type. Explicit Interface Implementations | Improve this Doc View Source ICloneable.Clone() Clones the ItemType into a new instance without locking the clone. Declaration object ICloneable.Clone() Returns Type Description System.Object The cloned ItemType . Implements IItemType System.ICloneable Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Items.ObjectsFile.ConfigurationRootExtensions.html": {
    "href": "code/Fibula.Items.ObjectsFile.ConfigurationRootExtensions.html",
    "title": "Class ConfigurationRootExtensions | Fibula MMO",
    "keywords": "Class ConfigurationRootExtensions Static class that adds convenient methods to add the concrete implementations contained in this library. Inheritance System.Object ConfigurationRootExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Items.ObjectsFile Assembly : Fibula.Items.ObjectsFile.dll Syntax public static class ConfigurationRootExtensions Methods | Improve this Doc View Source AddObjectsFileItemTypeLoader(IServiceCollection, IConfiguration) Adds all implementations related to Objects item type files contained in this library to the services collection. Additionally, registers the options related to the concrete implementations added, such as: ObjectsFileItemTypeLoaderOptions . Declaration public static void AddObjectsFileItemTypeLoader(this IServiceCollection services, IConfiguration configuration) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services The services collection. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration reference."
  },
  "code/Fibula.Items.ObjectsFile.html": {
    "href": "code/Fibula.Items.ObjectsFile.html",
    "title": "Namespace Fibula.Items.ObjectsFile | Fibula MMO",
    "keywords": "Namespace Fibula.Items.ObjectsFile Classes ConfigurationRootExtensions Static class that adds convenient methods to add the concrete implementations contained in this library. ObjectsFileItemTypeLoader Class that represents an item type loader that reads from the objects file. ObjectsFileItemTypeLoaderOptions Class that represents options for the ObjectsFileItemTypeLoader ."
  },
  "code/Fibula.Items.ObjectsFile.ObjectsFileItemTypeLoader.html": {
    "href": "code/Fibula.Items.ObjectsFile.ObjectsFileItemTypeLoader.html",
    "title": "Class ObjectsFileItemTypeLoader | Fibula MMO",
    "keywords": "Class ObjectsFileItemTypeLoader Class that represents an item type loader that reads from the objects file. Inheritance System.Object ObjectsFileItemTypeLoader Implements IItemTypeLoader Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Items.ObjectsFile Assembly : Fibula.Items.ObjectsFile.dll Syntax public class ObjectsFileItemTypeLoader : IItemTypeLoader Remarks An item definition starts and ends with blank lines. TypeID = 1 # body container Name = \"\" Flags = {Container,Take} Attributes = {Capacity=1,Weight=0} . Constructors | Improve this Doc View Source ObjectsFileItemTypeLoader(ILogger, IOptions<ObjectsFileItemTypeLoaderOptions>) Initializes a new instance of the ObjectsFileItemTypeLoader class. Declaration public ObjectsFileItemTypeLoader(ILogger logger, IOptions<ObjectsFileItemTypeLoaderOptions> options) Parameters Type Name Description Serilog.ILogger logger A reference to the logger instance. Microsoft.Extensions.Options.IOptions < ObjectsFileItemTypeLoaderOptions > options The options for this loader. Fields | Improve this Doc View Source CommentSymbol Character for comments. Declaration public const char CommentSymbol = '#' Field Value Type Description System.Char | Improve this Doc View Source PropertyValueSeparator Separator used for property and value pairs. Declaration public const char PropertyValueSeparator = '=' Field Value Type Description System.Char Properties | Improve this Doc View Source LoaderOptions Gets the loader options. Declaration public ObjectsFileItemTypeLoaderOptions LoaderOptions { get; } Property Value Type Description ObjectsFileItemTypeLoaderOptions | Improve this Doc View Source Logger Gets the logger to use in this handler. Declaration public ILogger Logger { get; } Property Value Type Description Serilog.ILogger Methods | Improve this Doc View Source LoadTypes() Attempts to load the item catalog. Declaration public IDictionary<ushort, IItemType> LoadTypes() Returns Type Description System.Collections.Generic.IDictionary < System.UInt16 , IItemType > The catalog, containing a mapping of loaded id to the item types. Implements IItemTypeLoader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Items.ObjectsFile.ObjectsFileItemTypeLoaderOptions.html": {
    "href": "code/Fibula.Items.ObjectsFile.ObjectsFileItemTypeLoaderOptions.html",
    "title": "Class ObjectsFileItemTypeLoaderOptions | Fibula MMO",
    "keywords": "Class ObjectsFileItemTypeLoaderOptions Class that represents options for the ObjectsFileItemTypeLoader . Inheritance System.Object ObjectsFileItemTypeLoaderOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Items.ObjectsFile Assembly : Fibula.Items.ObjectsFile.dll Syntax public class ObjectsFileItemTypeLoaderOptions Properties | Improve this Doc View Source FilePath Gets or sets the path to the file to load. Declaration [Required(ErrorMessage = \"A path for the objects file must be specified.\")] public string FilePath { get; set; } Property Value Type Description System.String Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Map.Contracts.Abstractions.html": {
    "href": "code/Fibula.Map.Contracts.Abstractions.html",
    "title": "Namespace Fibula.Map.Contracts.Abstractions | Fibula MMO",
    "keywords": "Namespace Fibula.Map.Contracts.Abstractions Interfaces IMap Interface for a map. IMapDescriptor Interface for map descriptors. IMapLoader Common interface for map loaders. IProtocolTileDescriptor Interface for tile descriptors, which are per protocol. ITile Interface for all tiles."
  },
  "code/Fibula.Map.Contracts.Abstractions.IMap.html": {
    "href": "code/Fibula.Map.Contracts.Abstractions.IMap.html",
    "title": "Interface IMap | Fibula MMO",
    "keywords": "Interface IMap Interface for a map. Namespace : Fibula.Map.Contracts.Abstractions Assembly : Fibula.Map.Contracts.dll Syntax public interface IMap Methods | Improve this Doc View Source GetTileAt(Location) Attempts to get a ITile at a given Location , if any. Declaration ITile GetTileAt(Location location) Parameters Type Name Description Location location The location to get the file from. Returns Type Description ITile A reference to the ITile found, if any. | Improve this Doc View Source GetTileAt(Location, out ITile, Boolean) Attempts to get a ITile at a given Location , if any. Declaration bool GetTileAt(Location location, out ITile tile, bool loadAsNeeded = true) Parameters Type Name Description Location location The location to get the file from. ITile tile A reference to the ITile found, if any. System.Boolean loadAsNeeded Optional. A value indicating whether to attempt to load tiles if the loader hasn't loaded them yet. Returns Type Description System.Boolean A value indicating whether a ITile was found, false otherwise. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String) MapExtensions.CreaturesThatCanSee(IMap, Location[]) MapExtensions.PlayersThatCanSee(IMap, Location[])"
  },
  "code/Fibula.Map.Contracts.Abstractions.IMapDescriptor.html": {
    "href": "code/Fibula.Map.Contracts.Abstractions.IMapDescriptor.html",
    "title": "Interface IMapDescriptor | Fibula MMO",
    "keywords": "Interface IMapDescriptor Interface for map descriptors. Namespace : Fibula.Map.Contracts.Abstractions Assembly : Fibula.Map.Contracts.dll Syntax public interface IMapDescriptor Fields | Improve this Doc View Source CreatureIdsToForgetMetadataKeyName The key name for the metadata element returned for those ids of creatures to forget. Declaration public const string CreatureIdsToForgetMetadataKeyName = \"CreatureIdsToForget\" Field Value Type Description System.String | Improve this Doc View Source CreatureIdsToLearnMetadataKeyName The key name for the metadata element returned for those ids of creatures to learn. Declaration public const string CreatureIdsToLearnMetadataKeyName = \"CreatureIdsToLearn\" Field Value Type Description System.String Methods | Improve this Doc View Source DescribeAt(IPlayer, Location) Gets the description bytes of the map on behalf of a given player at a given location. Declaration (IDictionary<string, object> descriptionMetadata, ReadOnlySequence<byte> descriptionData) DescribeAt(IPlayer player, Location location) Parameters Type Name Description IPlayer player The player for which the description is being retrieved for. Location location The center location from which the description is being retrieved. Returns Type Description System.ValueTuple < System.Collections.Generic.IDictionary < System.String , System.Object >, System.Buffers.ReadOnlySequence < System.Byte >> A tuple containing the description metadata: a map of string to objects, and the description data: a sequence of bytes representing the description. | Improve this Doc View Source DescribeTile(IPlayer, Location) Gets the description bytes of a single tile of the map in behalf of a given player at a given location. Declaration (IDictionary<string, object> descriptionMetadata, ReadOnlySequence<byte> descriptionData) DescribeTile(IPlayer player, Location location) Parameters Type Name Description IPlayer player The player for which the description is being retrieved for. Location location The location from which the description of the tile is being retrieved. Returns Type Description System.ValueTuple < System.Collections.Generic.IDictionary < System.String , System.Object >, System.Buffers.ReadOnlySequence < System.Byte >> A tuple containing the description metadata: a map of string to objects, and the description data: a sequence of bytes representing the tile's description. | Improve this Doc View Source DescribeWindow(IPlayer, UInt16, UInt16, SByte, SByte, Byte, Byte, SByte) Gets the description bytes of the map on behalf of a given player for the specified window. Declaration (IDictionary<string, object> descriptionMetadata, ReadOnlySequence<byte> descriptionData) DescribeWindow(IPlayer player, ushort startX, ushort startY, sbyte startZ, sbyte endZ, byte windowSizeX = 18, byte windowSizeY = 14, sbyte startingZOffset = 0) Parameters Type Name Description IPlayer player The player for which the description is being retrieved for. System.UInt16 startX The starting X coordinate of the window. System.UInt16 startY The starting Y coordinate of the window. System.SByte startZ The starting Z coordinate of the window. System.SByte endZ The ending Z coordinate of the window. System.Byte windowSizeX The size of the window in X. System.Byte windowSizeY The size of the window in Y. System.SByte startingZOffset Optional. A starting offset for Z. Returns Type Description System.ValueTuple < System.Collections.Generic.IDictionary < System.String , System.Object >, System.Buffers.ReadOnlySequence < System.Byte >> A tuple containing the description metadata: a map of string to objects, and the description data: a sequence of bytes representing the description. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Map.Contracts.Abstractions.IMapLoader.html": {
    "href": "code/Fibula.Map.Contracts.Abstractions.IMapLoader.html",
    "title": "Interface IMapLoader | Fibula MMO",
    "keywords": "Interface IMapLoader Common interface for map loaders. Namespace : Fibula.Map.Contracts.Abstractions Assembly : Fibula.Map.Contracts.dll Syntax public interface IMapLoader Properties | Improve this Doc View Source PercentageComplete Gets the percentage completed loading the map [0, 100]. Declaration byte PercentageComplete { get; } Property Value Type Description System.Byte Methods | Improve this Doc View Source HasLoaded(Int32, Int32, SByte) Gets a value indicating whether this loader has previously loaded the given coordinates. Declaration bool HasLoaded(int x, int y, sbyte z) Parameters Type Name Description System.Int32 x The X coordinate. System.Int32 y The Y coordinate. System.SByte z The Z coordinate. Returns Type Description System.Boolean True if the loader has previously loaded the given coordinates, false otherwise. | Improve this Doc View Source Load(Int32, Int32, Int32, Int32, SByte, SByte) Attempts to load all tiles within a 3 dimensional coordinates window. Declaration IEnumerable<(Location Location, ITile Tile)> Load(int fromX, int toX, int fromY, int toY, sbyte fromZ, sbyte toZ) Parameters Type Name Description System.Int32 fromX The start X coordinate for the load window. System.Int32 toX The end X coordinate for the load window. System.Int32 fromY The start Y coordinate for the load window. System.Int32 toY The end Y coordinate for the load window. System.SByte fromZ The start Z coordinate for the load window. System.SByte toZ The end Z coordinate for the load window. Returns Type Description System.Collections.Generic.IEnumerable < System.ValueTuple < Location , ITile >> A collection of ordered pairs containing the Location and its corresponding ITile . Events | Improve this Doc View Source WindowLoaded Event invoked when a window of coordinates in the map is loaded. Declaration event WindowLoaded WindowLoaded Event Type Type Description WindowLoaded Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Map.Contracts.Abstractions.IProtocolTileDescriptor.html": {
    "href": "code/Fibula.Map.Contracts.Abstractions.IProtocolTileDescriptor.html",
    "title": "Interface IProtocolTileDescriptor | Fibula MMO",
    "keywords": "Interface IProtocolTileDescriptor Interface for tile descriptors, which are per protocol. Namespace : Fibula.Map.Contracts.Abstractions Assembly : Fibula.Map.Contracts.dll Syntax public interface IProtocolTileDescriptor Methods | Improve this Doc View Source DescribeTileForPlayer(IPlayer, ITile, out ISet<UInt32>, out ISet<UInt32>) Gets the description segments of a tile as seen by the given player . Declaration IEnumerable<MapDescriptionSegment> DescribeTileForPlayer(IPlayer player, ITile tile, out ISet<uint> creatureIdsToLearn, out ISet<uint> creatureIdsToForget) Parameters Type Name Description IPlayer player The player for which the tile is being described. ITile tile The tile being described. System.Collections.Generic.ISet < System.UInt32 > creatureIdsToLearn A set of ids of creatures to learn if this description is sent. System.Collections.Generic.ISet < System.UInt32 > creatureIdsToForget A set of ids of creatures to forget if this description is sent. Returns Type Description System.Collections.Generic.IEnumerable < MapDescriptionSegment > A collection of description segments from the tile. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Map.Contracts.Abstractions.ITile.html": {
    "href": "code/Fibula.Map.Contracts.Abstractions.ITile.html",
    "title": "Interface ITile | Fibula MMO",
    "keywords": "Interface ITile Interface for all tiles. Inherited Members IThingContainer.FindThingAtIndex(Byte) IThingContainer.AddContent(IThingFactory, IThing, Byte) IThingContainer.RemoveContent(IThingFactory, IThing, Byte, Byte) IThingContainer.ReplaceContent(IThingFactory, IThing, IThing, Byte, Byte) ILocatable.Location ILocatable.CarryLocation Namespace : Fibula.Map.Contracts.Abstractions Assembly : Fibula.Map.Contracts.dll Syntax public interface ITile : IThingContainer, ILocatable Properties | Improve this Doc View Source BlocksLay Gets a value indicating whether items in this tile block laying. Declaration bool BlocksLay { get; } Property Value Type Description System.Boolean | Improve this Doc View Source BlocksPass Gets a value indicating whether items in this tile block passing. Declaration bool BlocksPass { get; } Property Value Type Description System.Boolean | Improve this Doc View Source BlocksThrow Gets a value indicating whether items in this tile block throwing. Declaration bool BlocksThrow { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Creatures Gets the tile's creatures. Declaration IEnumerable<ICreature> Creatures { get; } Property Value Type Description System.Collections.Generic.IEnumerable < ICreature > | Improve this Doc View Source Flags Gets the flags from this tile. Declaration byte Flags { get; } Property Value Type Description System.Byte | Improve this Doc View Source Ground Gets the single ground item that a tile may have. Declaration IItem Ground { get; } Property Value Type Description IItem | Improve this Doc View Source LastModified Gets the last date and time that this tile was modified. Declaration DateTimeOffset LastModified { get; } Property Value Type Description System.DateTimeOffset | Improve this Doc View Source LiquidPool Gets the single liquid pool item that a tile may have. Declaration IItem LiquidPool { get; } Property Value Type Description IItem | Improve this Doc View Source TopCreature Gets the creature that is on top based on the tile's stack order. Declaration ICreature TopCreature { get; } Property Value Type Description ICreature | Improve this Doc View Source TopItem Gets the item that is on top based on the tile's stack order. Declaration IItem TopItem { get; } Property Value Type Description IItem | Improve this Doc View Source TopThing Gets the thing that is on top based on the tile's stack order. Declaration IThing TopThing { get; } Property Value Type Description IThing Methods | Improve this Doc View Source FindItemWithId(UInt16) Attempts to find an item in the tile with the given type. Declaration IItem FindItemWithId(ushort typeId) Parameters Type Name Description System.UInt16 typeId The type to look for. Returns Type Description IItem The item with such id, null otherwise. | Improve this Doc View Source GetItemsToDescribeByPriority(Int32) Attempts to get the tile's items to describe prioritized and ordered by their stack order. Declaration (IEnumerable<IItem> fixedItems, IEnumerable<IItem> normalItems) GetItemsToDescribeByPriority(int maxItemsToGet = 10) Parameters Type Name Description System.Int32 maxItemsToGet The maximum number of items to include in the result. Returns Type Description System.ValueTuple < System.Collections.Generic.IEnumerable < IItem >, System.Collections.Generic.IEnumerable < IItem >> The items in the tile, split by those which are fixed and those considered normal. | Improve this Doc View Source GetStackOrderOfThing(IThing) Attempts to get the position in the stack for the given IThing . Declaration byte GetStackOrderOfThing(IThing thing) Parameters Type Name Description IThing thing The thing to find. Returns Type Description System.Byte The position in the stack for the IThing , or System.Byte.MaxValue if its not found. | Improve this Doc View Source IsPathBlocking(Byte) Determines if this tile is considered to be blocking the path. Declaration bool IsPathBlocking(byte avoidTypes = 14) Parameters Type Name Description System.Byte avoidTypes The damage types to avoid when checking for path blocking. By default, all types are considered path blocking. Returns Type Description System.Boolean True if the tile is considered path blocking, false otherwise. | Improve this Doc View Source SetFlag(TileFlag) Sets a flag on this tile. Declaration void SetFlag(TileFlag flag) Parameters Type Name Description TileFlag flag The flag to set. Extension Methods ContainerExtensions.GetParentContainerHierarchy(IThingContainer, Boolean) ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Map.Contracts.Constants.html": {
    "href": "code/Fibula.Map.Contracts.Constants.html",
    "title": "Namespace Fibula.Map.Contracts.Constants | Fibula MMO",
    "keywords": "Namespace Fibula.Map.Contracts.Constants Classes MapConstants Static class that contains constants regarding the map."
  },
  "code/Fibula.Map.Contracts.Constants.MapConstants.html": {
    "href": "code/Fibula.Map.Contracts.Constants.MapConstants.html",
    "title": "Class MapConstants | Fibula MMO",
    "keywords": "Class MapConstants Static class that contains constants regarding the map. Inheritance System.Object MapConstants Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Map.Contracts.Constants Assembly : Fibula.Map.Contracts.dll Syntax public static class MapConstants Fields | Improve this Doc View Source DefaultWindowSizeX The default window size in the X coordinate. Declaration public const byte DefaultWindowSizeX = 18 Field Value Type Description System.Byte | Improve this Doc View Source DefaultWindowSizeY The default window size in the Y coordinate. Declaration public const byte DefaultWindowSizeY = 14 Field Value Type Description System.Byte | Improve this Doc View Source MaximumNumberOfThingsToDescribePerTile The maximum number of IThing s to describe per tile. Declaration public const int MaximumNumberOfThingsToDescribePerTile = 10 Field Value Type Description System.Int32 | Improve this Doc View Source RookgaardTempleMark The mark for the temple in Rookgaard. Declaration public static readonly Location RookgaardTempleMark Field Value Type Description Location | Improve this Doc View Source ThaisTempleMark The mark for the temple in Thais. Declaration public static readonly Location ThaisTempleMark Field Value Type Description Location"
  },
  "code/Fibula.Map.Contracts.Delegates.html": {
    "href": "code/Fibula.Map.Contracts.Delegates.html",
    "title": "Namespace Fibula.Map.Contracts.Delegates | Fibula MMO",
    "keywords": "Namespace Fibula.Map.Contracts.Delegates Delegates WindowLoaded Delegate for when a window in the map is loaded by the map loader."
  },
  "code/Fibula.Map.Contracts.Delegates.WindowLoaded.html": {
    "href": "code/Fibula.Map.Contracts.Delegates.WindowLoaded.html",
    "title": "Delegate WindowLoaded | Fibula MMO",
    "keywords": "Delegate WindowLoaded Delegate for when a window in the map is loaded by the map loader. Namespace : Fibula.Map.Contracts.Delegates Assembly : Fibula.Map.Contracts.dll Syntax public delegate void WindowLoaded(int fromX, int toX, int fromY, int toY, sbyte fromZ, sbyte toZ); Parameters Type Name Description System.Int32 fromX The start X coordinate for the load window. System.Int32 toX The end X coordinate for the load window. System.Int32 fromY The start Y coordinate for the load window. System.Int32 toY The end Y coordinate for the load window. System.SByte fromZ The start Z coordinate for the load window. System.SByte toZ The end Z coordinate for the load window. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Map.Contracts.Enumerations.html": {
    "href": "code/Fibula.Map.Contracts.Enumerations.html",
    "title": "Namespace Fibula.Map.Contracts.Enumerations | Fibula MMO",
    "keywords": "Namespace Fibula.Map.Contracts.Enumerations Enums TileFlag Enumerates the flags of a tile."
  },
  "code/Fibula.Map.Contracts.Enumerations.TileFlag.html": {
    "href": "code/Fibula.Map.Contracts.Enumerations.TileFlag.html",
    "title": "Enum TileFlag | Fibula MMO",
    "keywords": "Enum TileFlag Enumerates the flags of a tile. Namespace : Fibula.Map.Contracts.Enumerations Assembly : Fibula.Map.Contracts.dll Syntax public enum TileFlag : byte Fields Name Description NoLogout A tile in which a character is not allowed to voluntarily log out on. None No flag. ProtectionZone A tile that is considered a protection zone. Refresh A tile that reloads after some time of being \"unseen\". Extension Methods ObjectExtensions.YieldSingleItem<TileFlag>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<TileFlag>(String)"
  },
  "code/Fibula.Map.Contracts.Extensions.html": {
    "href": "code/Fibula.Map.Contracts.Extensions.html",
    "title": "Namespace Fibula.Map.Contracts.Extensions | Fibula MMO",
    "keywords": "Namespace Fibula.Map.Contracts.Extensions Classes MapExtensions Helper class that provides extensions for the IMap implementations."
  },
  "code/Fibula.Map.Contracts.Extensions.MapExtensions.html": {
    "href": "code/Fibula.Map.Contracts.Extensions.MapExtensions.html",
    "title": "Class MapExtensions | Fibula MMO",
    "keywords": "Class MapExtensions Helper class that provides extensions for the IMap implementations. Inheritance System.Object MapExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Map.Contracts.Extensions Assembly : Fibula.Map.Contracts.dll Syntax public static class MapExtensions Methods | Improve this Doc View Source CreaturesThatCanSee(IMap, Location[]) Gets the ids of any creatures that can see the given locations. Declaration public static IEnumerable<ICreature> CreaturesThatCanSee(this IMap map, params Location[] locations) Parameters Type Name Description IMap map A reference to the map. Location [] locations The locations to check if players can see. Returns Type Description System.Collections.Generic.IEnumerable < ICreature > A collection of connections. | Improve this Doc View Source PlayersThatCanSee(IMap, Location[]) Gets the ids of any players that can see the given locations. Declaration public static IEnumerable<IPlayer> PlayersThatCanSee(this IMap map, params Location[] locations) Parameters Type Name Description IMap map A reference to the map. Location [] locations The locations to check if players can see. Returns Type Description System.Collections.Generic.IEnumerable < IPlayer > A collection of connections."
  },
  "code/Fibula.Map.Contracts.html": {
    "href": "code/Fibula.Map.Contracts.html",
    "title": "Namespace Fibula.Map.Contracts | Fibula MMO",
    "keywords": "Namespace Fibula.Map.Contracts Classes MapDescriptionSegment Class that represents a segment of a map description."
  },
  "code/Fibula.Map.Contracts.MapDescriptionSegment.html": {
    "href": "code/Fibula.Map.Contracts.MapDescriptionSegment.html",
    "title": "Class MapDescriptionSegment | Fibula MMO",
    "keywords": "Class MapDescriptionSegment Class that represents a segment of a map description. Inheritance System.Object System.Buffers.ReadOnlySequenceSegment < System.Byte > MapDescriptionSegment Inherited Members System.Buffers.ReadOnlySequenceSegment<System.Byte>.Memory System.Buffers.ReadOnlySequenceSegment<System.Byte>.Next System.Buffers.ReadOnlySequenceSegment<System.Byte>.RunningIndex System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Map.Contracts Assembly : Fibula.Map.Contracts.dll Syntax public class MapDescriptionSegment : ReadOnlySequenceSegment<byte> Constructors | Improve this Doc View Source MapDescriptionSegment(ReadOnlyMemory<Byte>) Initializes a new instance of the MapDescriptionSegment class. Declaration public MapDescriptionSegment(ReadOnlyMemory<byte> memory) Parameters Type Name Description System.ReadOnlyMemory < System.Byte > memory The memory to define for this segment. Methods | Improve this Doc View Source Append(MapDescriptionSegment) Appends the given MapDescriptionSegment to another. Declaration public void Append(MapDescriptionSegment nextSegment) Parameters Type Name Description MapDescriptionSegment nextSegment A reference to the next segment. | Improve this Doc View Source Append(ReadOnlyMemory<Byte>) Appends the given memory bytes by pointing System.Buffers.ReadOnlySequenceSegment<T>.Next to a new MapDescriptionSegment . Declaration public MapDescriptionSegment Append(ReadOnlyMemory<byte> mem) Parameters Type Name Description System.ReadOnlyMemory < System.Byte > mem The memory bytes to append. Returns Type Description MapDescriptionSegment The new instance of MapDescriptionSegment , pointing to the segment after this one. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Map.GrassOnly.ConfigurationRootExtensions.html": {
    "href": "code/Fibula.Map.GrassOnly.ConfigurationRootExtensions.html",
    "title": "Class ConfigurationRootExtensions | Fibula MMO",
    "keywords": "Class ConfigurationRootExtensions Static class that adds convenient methods to add the concrete implementations contained in this library. Inheritance System.Object ConfigurationRootExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Map.GrassOnly Assembly : Fibula.Map.GrassOnly.dll Syntax public static class ConfigurationRootExtensions Methods | Improve this Doc View Source AddGrassOnlyDummyMapLoader(IServiceCollection, IConfiguration) Adds all implementations related to a dummy map loader that gives only grass tiles contained in this library to the services collection. Declaration public static void AddGrassOnlyDummyMapLoader(this IServiceCollection services, IConfiguration configuration) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services The services collection. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration reference."
  },
  "code/Fibula.Map.GrassOnly.GrassOnlyDummyMapLoader.html": {
    "href": "code/Fibula.Map.GrassOnly.GrassOnlyDummyMapLoader.html",
    "title": "Class GrassOnlyDummyMapLoader | Fibula MMO",
    "keywords": "Class GrassOnlyDummyMapLoader Class that represents a dummy map loader that yields all grass tiles. Inheritance System.Object GrassOnlyDummyMapLoader Implements IMapLoader Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Map.GrassOnly Assembly : Fibula.Map.GrassOnly.dll Syntax public class GrassOnlyDummyMapLoader : IMapLoader Constructors | Improve this Doc View Source GrassOnlyDummyMapLoader(IItemFactory) Initializes a new instance of the GrassOnlyDummyMapLoader class. Declaration public GrassOnlyDummyMapLoader(IItemFactory itemFactory) Parameters Type Name Description IItemFactory itemFactory A reference to the item factory. Properties | Improve this Doc View Source ItemFactory Gets the item factory instance. Declaration public IItemFactory ItemFactory { get; } Property Value Type Description IItemFactory | Improve this Doc View Source PercentageComplete Gets the percentage completed loading the map [0, 100]. Declaration public byte PercentageComplete { get; } Property Value Type Description System.Byte Methods | Improve this Doc View Source HasLoaded(Int32, Int32, SByte) Gets a value indicating whether this loader has previously loaded the given coordinates. Declaration public bool HasLoaded(int x, int y, sbyte z) Parameters Type Name Description System.Int32 x The X coordinate. System.Int32 y The Y coordinate. System.SByte z The Z coordinate. Returns Type Description System.Boolean True if the loader has previously loaded the given coordinates, false otherwise. | Improve this Doc View Source Load(Int32, Int32, Int32, Int32, SByte, SByte) Attempts to load all tiles within a 3 dimensional coordinates window. Declaration public IEnumerable<(Location Location, ITile Tile)> Load(int fromX, int toX, int fromY, int toY, sbyte fromZ, sbyte toZ) Parameters Type Name Description System.Int32 fromX The start X coordinate for the load window. System.Int32 toX The end X coordinate for the load window. System.Int32 fromY The start Y coordinate for the load window. System.Int32 toY The end Y coordinate for the load window. System.SByte fromZ The start Z coordinate for the load window. System.SByte toZ The end Z coordinate for the load window. Returns Type Description System.Collections.Generic.IEnumerable < System.ValueTuple < Location , ITile >> A collection of ordered pairs containing the Location and its corresponding ITile . Events | Improve this Doc View Source WindowLoaded Event not in use for this loader. Declaration public event WindowLoaded WindowLoaded Event Type Type Description WindowLoaded Implements IMapLoader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Map.GrassOnly.html": {
    "href": "code/Fibula.Map.GrassOnly.html",
    "title": "Namespace Fibula.Map.GrassOnly | Fibula MMO",
    "keywords": "Namespace Fibula.Map.GrassOnly Classes ConfigurationRootExtensions Static class that adds convenient methods to add the concrete implementations contained in this library. GrassOnlyDummyMapLoader Class that represents a dummy map loader that yields all grass tiles."
  },
  "code/Fibula.Map.html": {
    "href": "code/Fibula.Map.html",
    "title": "Namespace Fibula.Map | Fibula MMO",
    "keywords": "Namespace Fibula.Map Classes Map Class that represents the map for the game server. MapDescriptor Class that implements a standard map descriptor. Tile Class that represents a tile in the map."
  },
  "code/Fibula.Map.Map.html": {
    "href": "code/Fibula.Map.Map.html",
    "title": "Class Map | Fibula MMO",
    "keywords": "Class Map Class that represents the map for the game server. Inheritance System.Object Map Implements IMap Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Map Assembly : Fibula.Map.dll Syntax public class Map : IMap Constructors | Improve this Doc View Source Map(ILogger, IMapLoader, ICreatureFinder) Initializes a new instance of the Map class. Declaration public Map(ILogger logger, IMapLoader mapLoader, ICreatureFinder creatureFinder) Parameters Type Name Description Serilog.ILogger logger A reference to the logger to use. IMapLoader mapLoader The map loader to use to load this map. ICreatureFinder creatureFinder A reference to the creature finder. Properties | Improve this Doc View Source CreatureFinder Gets the reference to the creature finder. Declaration public ICreatureFinder CreatureFinder { get; } Property Value Type Description ICreatureFinder | Improve this Doc View Source Logger Gets the reference to the current logger. Declaration public ILogger Logger { get; } Property Value Type Description Serilog.ILogger Methods | Improve this Doc View Source GetTileAt(Location) Attempts to get a ITile at a given Location , if any. Declaration public ITile GetTileAt(Location location) Parameters Type Name Description Location location The location to get the file from. Returns Type Description ITile A reference to the ITile found, if any. | Improve this Doc View Source GetTileAt(Location, out ITile, Boolean) Attempts to get a ITile at a given Location , if any. Declaration public bool GetTileAt(Location location, out ITile tile, bool loadAsNeeded = true) Parameters Type Name Description Location location The location to get the file from. ITile tile A reference to the ITile found, if any. System.Boolean loadAsNeeded Optional. A value indicating whether to attempt to load tiles if the loader hasn't loaded them yet. Returns Type Description System.Boolean A value indicating whether a ITile was found, false otherwise. Implements IMap Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Map.MapDescriptor.html": {
    "href": "code/Fibula.Map.MapDescriptor.html",
    "title": "Class MapDescriptor | Fibula MMO",
    "keywords": "Class MapDescriptor Class that implements a standard map descriptor. Inheritance System.Object MapDescriptor Implements IMapDescriptor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Map Assembly : Fibula.Map.dll Syntax public class MapDescriptor : IMapDescriptor Constructors | Improve this Doc View Source MapDescriptor(ILogger, IMap, IProtocolTileDescriptor) Initializes a new instance of the MapDescriptor class. Declaration public MapDescriptor(ILogger logger, IMap map, IProtocolTileDescriptor tileDescriptor) Parameters Type Name Description Serilog.ILogger logger A reference to the logger to use. IMap map The reference to the map in use. IProtocolTileDescriptor tileDescriptor A reference to the tile descriptor in use. Properties | Improve this Doc View Source Logger Gets the reference to the current logger. Declaration public ILogger Logger { get; } Property Value Type Description Serilog.ILogger Methods | Improve this Doc View Source DescribeAt(IPlayer, Location) Gets the description bytes of the map in behalf of a given player at a given location. Declaration public (IDictionary<string, object> descriptionMetadata, ReadOnlySequence<byte> descriptionData) DescribeAt(IPlayer player, Location centerLocation) Parameters Type Name Description IPlayer player The player for which the description is being retrieved for. Location centerLocation The center location from which the description is being retrieved. Returns Type Description System.ValueTuple < System.Collections.Generic.IDictionary < System.String , System.Object >, System.Buffers.ReadOnlySequence < System.Byte >> A tuple containing the description metadata: a map of string to objects, and the description data: a sequence of bytes representing the description. | Improve this Doc View Source DescribeTile(IPlayer, Location) Gets the description bytes of a single tile of the map in behalf of a given player at a given location. Declaration public (IDictionary<string, object> descriptionMetadata, ReadOnlySequence<byte> descriptionData) DescribeTile(IPlayer player, Location location) Parameters Type Name Description IPlayer player The player for which the description is being retrieved for. Location location The location from which the description of the tile is being retrieved. Returns Type Description System.ValueTuple < System.Collections.Generic.IDictionary < System.String , System.Object >, System.Buffers.ReadOnlySequence < System.Byte >> A tuple containing the description metadata: a map of string to objects, and the description data: a sequence of bytes representing the tile's description. | Improve this Doc View Source DescribeWindow(IPlayer, UInt16, UInt16, SByte, SByte, Byte, Byte, SByte) Gets the description bytes of the map in behalf of a given player for the specified window. Declaration public (IDictionary<string, object> descriptionMetadata, ReadOnlySequence<byte> descriptionData) DescribeWindow(IPlayer player, ushort fromX, ushort fromY, sbyte fromZ, sbyte toZ, byte windowSizeX = 18, byte windowSizeY = 14, sbyte customOffsetZ = 0) Parameters Type Name Description IPlayer player The player for which the description is being retrieved for. System.UInt16 fromX The starting X coordinate of the window. System.UInt16 fromY The starting Y coordinate of the window. System.SByte fromZ The starting Z coordinate of the window. System.SByte toZ The ending Z coordinate of the window. System.Byte windowSizeX The size of the window in X. System.Byte windowSizeY The size of the window in Y. System.SByte customOffsetZ Optional. A custom Z offset value used mainly for partial floor changing windows. Defaults to 0. Returns Type Description System.ValueTuple < System.Collections.Generic.IDictionary < System.String , System.Object >, System.Buffers.ReadOnlySequence < System.Byte >> A tuple containing the description metadata: a map of string to objects, and the description data: a sequence of bytes representing the description. Implements IMapDescriptor Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Map.SectorFiles.ConfigurationRootExtensions.html": {
    "href": "code/Fibula.Map.SectorFiles.ConfigurationRootExtensions.html",
    "title": "Class ConfigurationRootExtensions | Fibula MMO",
    "keywords": "Class ConfigurationRootExtensions Static class that adds convenient methods to add the concrete implementations contained in this library. Inheritance System.Object ConfigurationRootExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Map.SectorFiles Assembly : Fibula.Map.SectorFiles.dll Syntax public static class ConfigurationRootExtensions Methods | Improve this Doc View Source AddSectorFilesMapLoader(IServiceCollection, IConfiguration) Adds all implementations related to Sector map files contained in this library to the services collection. Additionally, registers the options related to the concrete implementations added, such as: SectorMapLoaderOptions . Declaration public static void AddSectorFilesMapLoader(this IServiceCollection services, IConfiguration configuration) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services The services collection. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration reference."
  },
  "code/Fibula.Map.SectorFiles.html": {
    "href": "code/Fibula.Map.SectorFiles.html",
    "title": "Namespace Fibula.Map.SectorFiles | Fibula MMO",
    "keywords": "Namespace Fibula.Map.SectorFiles Classes ConfigurationRootExtensions Static class that adds convenient methods to add the concrete implementations contained in this library. SectorMapLoader Class that represents a map loader that loads from the sector files from CipSoft. SectorMapLoaderOptions Class that represents options for the SectorMapLoader ."
  },
  "code/Fibula.Map.SectorFiles.SectorMapLoader.html": {
    "href": "code/Fibula.Map.SectorFiles.SectorMapLoader.html",
    "title": "Class SectorMapLoader | Fibula MMO",
    "keywords": "Class SectorMapLoader Class that represents a map loader that loads from the sector files from CipSoft. Inheritance System.Object SectorMapLoader Implements IMapLoader Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Map.SectorFiles Assembly : Fibula.Map.SectorFiles.dll Syntax public class SectorMapLoader : IMapLoader Constructors | Improve this Doc View Source SectorMapLoader(ILogger, ICreatureFinder, IItemFactory, IOptions<SectorMapLoaderOptions>) Initializes a new instance of the SectorMapLoader class. Declaration public SectorMapLoader(ILogger logger, ICreatureFinder creatureFinder, IItemFactory itemFactory, IOptions<SectorMapLoaderOptions> sectorMapLoaderOptions) Parameters Type Name Description Serilog.ILogger logger A reference to the logger instance in use. ICreatureFinder creatureFinder A reference to the creature finder. IItemFactory itemFactory A reference to the item factory. Microsoft.Extensions.Options.IOptions < SectorMapLoaderOptions > sectorMapLoaderOptions The options for this map loader. Fields | Improve this Doc View Source CommentSymbol The symbol used for comments. Declaration public const char CommentSymbol = '#' Field Value Type Description System.Char | Improve this Doc View Source PositionSeparator The separator used for positions of sectors. Declaration public const char PositionSeparator = '-' Field Value Type Description System.Char | Improve this Doc View Source SectorSeparator The separator used for sector files. Declaration public const char SectorSeparator = ':' Field Value Type Description System.Char | Improve this Doc View Source SectorXMax The maximum X value for sectors known. Declaration public const int SectorXMax = 1043 Field Value Type Description System.Int32 | Improve this Doc View Source SectorXMin The minimum X value for sectors known. Declaration public const int SectorXMin = 996 Field Value Type Description System.Int32 | Improve this Doc View Source SectorYMax The maximum Y value for sectors known. Declaration public const int SectorYMax = 1031 Field Value Type Description System.Int32 | Improve this Doc View Source SectorYMin The minimum Y value for sectors known. Declaration public const int SectorYMin = 984 Field Value Type Description System.Int32 | Improve this Doc View Source SectorZMax The maximum Z value for sectors known. Declaration public const int SectorZMax = 15 Field Value Type Description System.Int32 | Improve this Doc View Source SectorZMin The minimum Z value for sectors known. Declaration public const int SectorZMin = 0 Field Value Type Description System.Int32 Properties | Improve this Doc View Source CreatureFinder Gets the creature finder instance. Declaration public ICreatureFinder CreatureFinder { get; } Property Value Type Description ICreatureFinder | Improve this Doc View Source ItemFactory Gets the item factory instance. Declaration public IItemFactory ItemFactory { get; } Property Value Type Description IItemFactory | Improve this Doc View Source Logger Gets the logger to use. Declaration public ILogger Logger { get; } Property Value Type Description Serilog.ILogger | Improve this Doc View Source PercentageComplete Gets the percentage completed loading the map [0, 100]. Declaration public byte PercentageComplete { get; } Property Value Type Description System.Byte Methods | Improve this Doc View Source HasLoaded(Int32, Int32, SByte) Gets a value indicating whether this loader has previously loaded the given coordinates. Declaration public bool HasLoaded(int x, int y, sbyte z) Parameters Type Name Description System.Int32 x The X coordinate. System.Int32 y The Y coordinate. System.SByte z The Z coordinate. Returns Type Description System.Boolean True if the loader has previously loaded the given coordinates, false otherwise. | Improve this Doc View Source Load(Int32, Int32, Int32, Int32, SByte, SByte) Attempts to load all tiles within a 3 dimensional coordinates window. Declaration public IEnumerable<(Location Location, ITile Tile)> Load(int fromX, int toX, int fromY, int toY, sbyte fromZ, sbyte toZ) Parameters Type Name Description System.Int32 fromX The start X coordinate for the load window. System.Int32 toX The end X coordinate for the load window. System.Int32 fromY The start Y coordinate for the load window. System.Int32 toY The end Y coordinate for the load window. System.SByte fromZ The start Z coordinate for the load window. System.SByte toZ The end Z coordinate for the load window. Returns Type Description System.Collections.Generic.IEnumerable < System.ValueTuple < Location , ITile >> A collection of ordered pairs containing the Location and its corresponding ITile . Events | Improve this Doc View Source WindowLoaded Event invoked when a window of coordinates in the map is loaded. Declaration public event WindowLoaded WindowLoaded Event Type Type Description WindowLoaded Implements IMapLoader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Map.SectorFiles.SectorMapLoaderOptions.html": {
    "href": "code/Fibula.Map.SectorFiles.SectorMapLoaderOptions.html",
    "title": "Class SectorMapLoaderOptions | Fibula MMO",
    "keywords": "Class SectorMapLoaderOptions Class that represents options for the SectorMapLoader . Inheritance System.Object SectorMapLoaderOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Map.SectorFiles Assembly : Fibula.Map.SectorFiles.dll Syntax public class SectorMapLoaderOptions Properties | Improve this Doc View Source LiveMapDirectory Gets or sets the directory for the live map. Declaration [Required(ErrorMessage = \"A directory for the live map sector files must be specified.\")] public string LiveMapDirectory { get; set; } Property Value Type Description System.String | Improve this Doc View Source OriginalMapDirectory Gets or sets the directory for the original map. Declaration [Required(ErrorMessage = \"A directory for the original map sector files must be specified.\")] public string OriginalMapDirectory { get; set; } Property Value Type Description System.String Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Map.Tile.html": {
    "href": "code/Fibula.Map.Tile.html",
    "title": "Class Tile | Fibula MMO",
    "keywords": "Class Tile Class that represents a tile in the map. Inheritance System.Object Tile Implements ITile IThingContainer ILocatable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Map Assembly : Fibula.Map.dll Syntax public class Tile : ITile, IThingContainer, ILocatable Constructors | Improve this Doc View Source Tile(Location, IItem) Initializes a new instance of the Tile class. Declaration public Tile(Location location, IItem ground) Parameters Type Name Description Location location The location of this tile. IItem ground The ground item to initialize the tile with. Properties | Improve this Doc View Source BlocksLay Gets a value indicating whether items in this tile block laying. Declaration public bool BlocksLay { get; } Property Value Type Description System.Boolean | Improve this Doc View Source BlocksPass Gets a value indicating whether items in this tile block passing. Declaration public bool BlocksPass { get; } Property Value Type Description System.Boolean | Improve this Doc View Source BlocksThrow Gets a value indicating whether items in this tile block throwing. Declaration public bool BlocksThrow { get; } Property Value Type Description System.Boolean | Improve this Doc View Source CarryLocation Gets the location where this entity is being carried at, which is null for tiles. Declaration public Location? CarryLocation { get; } Property Value Type Description System.Nullable < Location > | Improve this Doc View Source Creatures Gets the tile's creature ids. Declaration public IEnumerable<ICreature> Creatures { get; } Property Value Type Description System.Collections.Generic.IEnumerable < ICreature > | Improve this Doc View Source Flags Gets the flags from this tile. Declaration public byte Flags { get; } Property Value Type Description System.Byte | Improve this Doc View Source Ground Gets the single ground item that a tile may have. Declaration public IItem Ground { get; } Property Value Type Description IItem | Improve this Doc View Source LastModified Gets the last date and time that this tile was modified. Declaration public DateTimeOffset LastModified { get; } Property Value Type Description System.DateTimeOffset | Improve this Doc View Source LiquidPool Gets the single liquid pool item that a tile may have. Declaration public IItem LiquidPool { get; } Property Value Type Description IItem | Improve this Doc View Source Location Gets this tile's location. Declaration public Location Location { get; } Property Value Type Description Location | Improve this Doc View Source TopCreature Gets the creature that is on top based on the tile's stack order. Declaration public ICreature TopCreature { get; } Property Value Type Description ICreature | Improve this Doc View Source TopItem Gets the item that is on top based on the tile's stack order. Declaration public IItem TopItem { get; } Property Value Type Description IItem | Improve this Doc View Source TopThing Gets the thing that is on top based on the tile's stack order. Prioritizes creatures, then items. Declaration public IThing TopThing { get; } Property Value Type Description IThing Methods | Improve this Doc View Source AddContent(IThingFactory, IThing, Byte) Attempts to add a IThing to this container. Declaration public (bool result, IThing remainder) AddContent(IThingFactory thingFactory, IThing thing, byte index = 255) Parameters Type Name Description IThingFactory thingFactory A reference to the factory of things to use. IThing thing The IThing to add to the container. System.Byte index Optional. The index at which to add the IThing . Defaults to byte.MaxValue, which instructs to add the IThing at any free index. Returns Type Description System.ValueTuple < System.Boolean , IThing > A tuple with a value indicating whether the attempt was at least partially successful, and false otherwise. If the result was only partially successful, a remainder of the thing may be returned. | Improve this Doc View Source FindItemWithId(UInt16) Attempts to find an item in the tile with the given type. Declaration public IItem FindItemWithId(ushort typeId) Parameters Type Name Description System.UInt16 typeId The type to look for. Returns Type Description IItem The item with such id, null otherwise. | Improve this Doc View Source FindThingAtIndex(Byte) Attempts to find an IThing whitin this container. Declaration public IThing FindThingAtIndex(byte index) Parameters Type Name Description System.Byte index The index at which to look for the IThing . Returns Type Description IThing The IThing found at the index, if any was found. | Improve this Doc View Source GetItemsToDescribeByPriority(Int32) Attempts to get the tile's items to describe prioritized and ordered by their stack order. Declaration public (IEnumerable<IItem> fixedItems, IEnumerable<IItem> normalItems) GetItemsToDescribeByPriority(int maxItemsToGet = 10) Parameters Type Name Description System.Int32 maxItemsToGet The maximum number of items to include in the result. Returns Type Description System.ValueTuple < System.Collections.Generic.IEnumerable < IItem >, System.Collections.Generic.IEnumerable < IItem >> The items in the tile, split by those which are fixed and those considered normal. Remarks The algorithm prioritizes the returned items in the following order: Ground item. Clipped items. Stay-on-bottom items. Stay-on-top items. Normal items. | Improve this Doc View Source GetStackOrderOfThing(IThing) Attempts to get the position in the stack for the given IThing . Declaration public byte GetStackOrderOfThing(IThing thing) Parameters Type Name Description IThing thing The thing to find. Returns Type Description System.Byte The position in the stack for the IThing , or System.Byte.MaxValue if its not found. | Improve this Doc View Source IsPathBlocking(Byte) Determines if this tile is considered to be blocking the path. Declaration public bool IsPathBlocking(byte avoidTypes = 14) Parameters Type Name Description System.Byte avoidTypes The damage types to avoid when checking for path blocking. By default, all types are considered path blocking. Returns Type Description System.Boolean True if the tile is considered path blocking, false otherwise. | Improve this Doc View Source RemoveContent(IThingFactory, ref IThing, Byte, Byte) Attempts to remove a thing from this container. Declaration public (bool result, IThing remainder) RemoveContent(IThingFactory thingFactory, ref IThing thing, byte index = 255, byte amount = 1) Parameters Type Name Description IThingFactory thingFactory A reference to the factory of things to use. IThing thing The IThing to remove from the container. System.Byte index Optional. The index from which to remove the IThing . Defaults to byte.MaxValue, which instructs to remove the IThing if found at any index. System.Byte amount Optional. The amount of the thing to remove. Returns Type Description System.ValueTuple < System.Boolean , IThing > A tuple with a value indicating whether the attempt was at least partially successful, and false otherwise. If the result was only partially successful, a remainder of the thing may be returned. | Improve this Doc View Source ReplaceContent(IThingFactory, IThing, IThing, Byte, Byte) Attempts to replace a IThing from this container with another. Declaration public (bool result, IThing remainderToChange) ReplaceContent(IThingFactory thingFactory, IThing fromThing, IThing toThing, byte index = 255, byte amount = 1) Parameters Type Name Description IThingFactory thingFactory A reference to the factory of things to use. IThing fromThing The IThing to remove from the container. IThing toThing The IThing to add to the container. System.Byte index Optional. The index from which to replace the IThing . Defaults to byte.MaxValue, which instructs to replace the IThing if found at any index. System.Byte amount Optional. The amount of the fromThing to replace. Returns Type Description System.ValueTuple < System.Boolean , IThing > A tuple with a value indicating whether the attempt was at least partially successful, and false otherwise. If the result was only partially successful, a remainder of the thing may be returned. | Improve this Doc View Source SetFlag(TileFlag) Sets a flag on this tile. Declaration public void SetFlag(TileFlag flag) Parameters Type Name Description TileFlag flag The flag to set. Implements ITile IThingContainer ILocatable Extension Methods ContainerExtensions.GetParentContainerHierarchy(IThingContainer, Boolean) ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.ContainerManager.html": {
    "href": "code/Fibula.Mechanics.ContainerManager.html",
    "title": "Class ContainerManager | Fibula MMO",
    "keywords": "Class ContainerManager Class that represents a manager for all item container operations by creatures. Inheritance System.Object ContainerManager Implements IContainerManager Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics Assembly : Fibula.Mechanics.dll Syntax public class ContainerManager : IContainerManager Constructors | Improve this Doc View Source ContainerManager(ILogger, ICreatureFinder, IScheduler) Initializes a new instance of the ContainerManager class. Declaration public ContainerManager(ILogger logger, ICreatureFinder creatureFinder, IScheduler scheduler) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. ICreatureFinder creatureFinder A reference to the creature finder in use. IScheduler scheduler A reference to the scheduler in use. Methods | Improve this Doc View Source CloseContainer(UInt32, IContainerItem, Byte) Performs a container close action for a player. Declaration public void CloseContainer(uint forCreatureId, IContainerItem container, byte atPosition) Parameters Type Name Description System.UInt32 forCreatureId The id of the creature for which the container is being closed. IContainerItem container The container being closed. System.Byte atPosition The position of the container being closed, as seen by the player. | Improve this Doc View Source FindAllForCreature(UInt32) Finds all the containers known by the specified creature. Declaration public IEnumerable<IContainerItem> FindAllForCreature(uint creatureId) Parameters Type Name Description System.UInt32 creatureId The id of the creature. Returns Type Description System.Collections.Generic.IEnumerable < IContainerItem > A collection of containers that the creature knows. | Improve this Doc View Source FindForCreature(UInt32, IContainerItem) Finds the position of a specified container as seen by a specific creature. Declaration public byte FindForCreature(uint creatureId, IContainerItem container) Parameters Type Name Description System.UInt32 creatureId The id of the creature for which to find the container. IContainerItem container The container to look for. Returns Type Description System.Byte The position of container found, or UnsetContainerPosition > if not found. | Improve this Doc View Source FindForCreature(UInt32, Byte) Finds a container for a specific creature at the specified position. Declaration public IContainerItem FindForCreature(uint creatureId, byte atPosition) Parameters Type Name Description System.UInt32 creatureId The id of the creature for which to find the container. System.Byte atPosition The position at which to look for the container. Returns Type Description IContainerItem The container found, or null if not found. | Improve this Doc View Source OpenContainer(UInt32, IContainerItem, Byte) Performs a container open action for a player. Declaration public void OpenContainer(uint forCreatureId, IContainerItem container, byte atPosition) Parameters Type Name Description System.UInt32 forCreatureId The id of the creature for which the container is being opened. IContainerItem container The container to open. System.Byte atPosition The position in which to open the container, for the player. Implements IContainerManager Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Contracts.Abstractions.html": {
    "href": "code/Fibula.Mechanics.Contracts.Abstractions.html",
    "title": "Namespace Fibula.Mechanics.Contracts.Abstractions | Fibula MMO",
    "keywords": "Namespace Fibula.Mechanics.Contracts.Abstractions Interfaces ICombatant Interface for all creatures that can participate in combat. ICombatOperationsApi Interface for the API of combat operations. ICreatureWithExhaustion Interface for any ICreature in the game that can suffer from exhaustion and thus, has cooldown periods. IElevatedOperation Interface for an elevated game operation. IElevatedOperationContext Interface for an elevated operation context. IGame Interface for the game service. IGameOperationsApi Interface for the operations available in the game API. IHandler Interface for a request handler. IHandlerSelector Interface for selectors of handlers. IOperation Interface for a game operation. IOperationContext Interface for an operation context. IOperationCreationArguments Interface for all operation creation arguments. IOperationFactory Interface for factories of operations. IPathFinder Interface for a path finder. IWorldInformation Interface for the world information."
  },
  "code/Fibula.Mechanics.Contracts.Abstractions.ICombatant.html": {
    "href": "code/Fibula.Mechanics.Contracts.Abstractions.ICombatant.html",
    "title": "Interface ICombatant | Fibula MMO",
    "keywords": "Interface ICombatant Interface for all creatures that can participate in combat. Inherited Members ICreatureWithExhaustion.ExhaustionInformation ICreatureWithExhaustion.CalculateRemainingCooldownTime(ExhaustionType, DateTimeOffset) ICreatureWithExhaustion.AddExhaustion(ExhaustionType, DateTimeOffset, UInt32) ICreatureWithExhaustion.AddExhaustion(ExhaustionType, DateTimeOffset, TimeSpan) ICreature.Id ICreature.Blood ICreature.Article ICreature.Name ICreature.Corpse ICreature.HitpointPercentage ICreature.Hitpoints ICreature.MaxHitpoints ICreature.Manapoints ICreature.MaxManapoints ICreature.CarryStrength ICreature.Outfit ICreature.Direction ICreature.LastMovementCostModifier ICreature.EmittedLightLevel ICreature.EmittedLightColor ICreature.Speed ICreature.Flags ICreature.Inventory ICreature.IsDead ICreature.WalkPlan ICreature.CanSee(ICreature) ICreature.CanSee(Location) ICreature.TurnToDirection(Direction) ICreature.SetOutfit(Outfit) IThing.ThingChanged IThing.ThingId IThing.CanBeMoved IThing.DescribeForLogger() IContainedThing.ParentContainer IThingContainer.FindThingAtIndex(Byte) IThingContainer.AddContent(IThingFactory, IThing, Byte) IThingContainer.RemoveContent(IThingFactory, IThing, Byte, Byte) IThingContainer.ReplaceContent(IThingFactory, IThing, IThing, Byte, Byte) ILocatable.Location ILocatable.CarryLocation System.IEquatable<Fibula.Creatures.Contracts.Abstractions.ICreature>.Equals(Fibula.Creatures.Contracts.Abstractions.ICreature) Namespace : Fibula.Mechanics.Contracts.Abstractions Assembly : Fibula.Mechanics.Contracts.dll Syntax public interface ICombatant : ICreatureWithExhaustion, ICreature, IThing, IContainedThing, IThingContainer, ILocatable, IEquatable<ICreature> Properties | Improve this Doc View Source AttackedBy Gets the collection of ids of attackers of this combatant. Declaration IEnumerable<uint> AttackedBy { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.UInt32 > | Improve this Doc View Source AttackSpeed Gets a metric of how fast a combatant can earn an attack credit per combat round. Declaration decimal AttackSpeed { get; } Property Value Type Description System.Decimal | Improve this Doc View Source AutoAttackCredits Gets the number of attack credits available. Declaration int AutoAttackCredits { get; } Property Value Type Description System.Int32 | Improve this Doc View Source AutoAttackMaximumCredits Gets the number of maximum attack credits. Declaration ushort AutoAttackMaximumCredits { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source AutoAttackRange Gets the range that the auto attack has. Declaration byte AutoAttackRange { get; } Property Value Type Description System.Byte | Improve this Doc View Source AutoAttackTarget Gets the current target combatant, if any. Declaration ICombatant AutoAttackTarget { get; } Property Value Type Description ICombatant | Improve this Doc View Source AutoDefenseCredits Gets the number of auto defense credits available. Declaration int AutoDefenseCredits { get; } Property Value Type Description System.Int32 | Improve this Doc View Source AutoDefenseMaximumCredits Gets the number of maximum defense credits. Declaration ushort AutoDefenseMaximumCredits { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source ChaseMode Gets or sets the chase mode selected by this combatant. Declaration ChaseMode ChaseMode { get; set; } Property Value Type Description ChaseMode | Improve this Doc View Source ChasingTarget Gets the current target being chased, if any. Declaration ICombatant ChasingTarget { get; } Property Value Type Description ICombatant | Improve this Doc View Source DamageTakenDistribution Gets the distribution of damage taken by any combatant that has attacked this combatant while the current combat is active. Declaration IEnumerable<(uint, uint)> DamageTakenDistribution { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.ValueTuple < System.UInt32 , System.UInt32 >> | Improve this Doc View Source DefenseSpeed Gets a metric of how fast a combatant can earn a defense credit per combat round. Declaration decimal DefenseSpeed { get; } Property Value Type Description System.Decimal | Improve this Doc View Source FightMode Gets or sets the fight mode selected by this combatant. Declaration FightMode FightMode { get; set; } Property Value Type Description FightMode | Improve this Doc View Source PendingAutoAttackOperation Gets or sets the current auto attack operation that this combatant has pending, if any. Declaration IOperation PendingAutoAttackOperation { get; set; } Property Value Type Description IOperation Methods | Improve this Doc View Source ApplyDamage(DamageInfo, UInt32) Applies damage to the combatant, which is expected to apply reductions and protections. Declaration DamageInfo ApplyDamage(DamageInfo damageInfo, uint fromCombatantId = 0U) Parameters Type Name Description DamageInfo damageInfo The information of the damage to make, without reductions. System.UInt32 fromCombatantId The combatant from which to track the damage, if any. Returns Type Description DamageInfo The information about the damage actually done. | Improve this Doc View Source ConsumeCredits(CombatCreditType, Byte) Consumes combat credits to the combatant. Declaration void ConsumeCredits(CombatCreditType creditType, byte amount) Parameters Type Name Description CombatCreditType creditType The type of combat credits to consume. System.Byte amount The amount of credits to consume. | Improve this Doc View Source DecreaseAttackSpeed(Decimal) Decreases the attack speed of this combatant. Declaration void DecreaseAttackSpeed(decimal decreaseAmount) Parameters Type Name Description System.Decimal decreaseAmount The amount by which to decrease. | Improve this Doc View Source DecreaseDefenseSpeed(Decimal) Decreases the defense speed of this combatant. Declaration void DecreaseDefenseSpeed(decimal decreaseAmount) Parameters Type Name Description System.Decimal decreaseAmount The amount by which to decrease. | Improve this Doc View Source IncreaseAttackSpeed(Decimal) Increases the attack speed of this combatant. Declaration void IncreaseAttackSpeed(decimal increaseAmount) Parameters Type Name Description System.Decimal increaseAmount The amount by which to increase. | Improve this Doc View Source IncreaseDefenseSpeed(Decimal) Increases the defense speed of this combatant. Declaration void IncreaseDefenseSpeed(decimal increaseAmount) Parameters Type Name Description System.Decimal increaseAmount The amount by which to increase. | Improve this Doc View Source RestoreCredits(CombatCreditType, Byte) Restores combat credits to the combatant. Declaration void RestoreCredits(CombatCreditType creditType, byte amount) Parameters Type Name Description CombatCreditType creditType The type of combat credits to restore. System.Byte amount The amount of credits to restore. | Improve this Doc View Source SetAttackTarget(ICombatant) Sets the attack target of this combatant. Declaration bool SetAttackTarget(ICombatant otherCombatant) Parameters Type Name Description ICombatant otherCombatant The other target combatant, if any. Returns Type Description System.Boolean True if the target was actually changed, false otherwise. | Improve this Doc View Source SetChaseTarget(ICombatant) Sets the chasing target of this combatant. Declaration bool SetChaseTarget(ICombatant target) Parameters Type Name Description ICombatant target The target to chase, if any. Returns Type Description System.Boolean True if the target was actually changed, false otherwise. Events | Improve this Doc View Source Death Event to call when the combatant dies. Declaration event OnDeath Death Event Type Type Description OnDeath | Improve this Doc View Source HealthChanged Event to call when the combatant's health changes. Declaration event OnHealthChange HealthChanged Event Type Type Description OnHealthChange Extension Methods ContainerExtensions.GetParentContainerHierarchy(IContainedThing, Boolean) ContainerExtensions.GetParentContainerHierarchy(IThingContainer, Boolean) CreatureExtensions.CalculateStepDuration(ICreature, ITile) ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Contracts.Abstractions.ICombatOperationsApi.html": {
    "href": "code/Fibula.Mechanics.Contracts.Abstractions.ICombatOperationsApi.html",
    "title": "Interface ICombatOperationsApi | Fibula MMO",
    "keywords": "Interface ICombatOperationsApi Interface for the API of combat operations. Namespace : Fibula.Mechanics.Contracts.Abstractions Assembly : Fibula.Mechanics.Contracts.dll Syntax public interface ICombatOperationsApi Methods | Improve this Doc View Source CombatantDeath(ICombatant) Handles a death from a combatant. Declaration void CombatantDeath(ICombatant combatant) Parameters Type Name Description ICombatant combatant The combatant that died. | Improve this Doc View Source CombatantHealthChanged(ICombatant, UInt16) Handles a health change event from a combatant. Declaration void CombatantHealthChanged(ICombatant combatant, ushort oldHealthValue) Parameters Type Name Description ICombatant combatant The combatant who's health changed. System.UInt16 oldHealthValue The old value of the combatant's health. | Improve this Doc View Source CreatureChangeModes(UInt32, FightMode, ChaseMode, Boolean) Changes the fight, chase and safety modes of a creature. Declaration void CreatureChangeModes(uint creatureId, FightMode fightMode, ChaseMode chaseMode, bool safeModeOn) Parameters Type Name Description System.UInt32 creatureId The id of the creature. FightMode fightMode The fight mode to change to. ChaseMode chaseMode The chase mode to change to. System.Boolean safeModeOn A value indicating whether the attack safety lock is on. | Improve this Doc View Source ResetCombatTarget(ICombatant, ICombatant) Re-sets the combat target of the attacker and it's (possibly new) target. Declaration void ResetCombatTarget(ICombatant attacker, ICombatant target) Parameters Type Name Description ICombatant attacker The attacker. ICombatant target The target. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Contracts.Abstractions.ICreatureWithExhaustion.html": {
    "href": "code/Fibula.Mechanics.Contracts.Abstractions.ICreatureWithExhaustion.html",
    "title": "Interface ICreatureWithExhaustion | Fibula MMO",
    "keywords": "Interface ICreatureWithExhaustion Interface for any ICreature in the game that can suffer from exhaustion and thus, has cooldown periods. Inherited Members ICreature.Id ICreature.Blood ICreature.Article ICreature.Name ICreature.Corpse ICreature.HitpointPercentage ICreature.Hitpoints ICreature.MaxHitpoints ICreature.Manapoints ICreature.MaxManapoints ICreature.CarryStrength ICreature.Outfit ICreature.Direction ICreature.LastMovementCostModifier ICreature.EmittedLightLevel ICreature.EmittedLightColor ICreature.Speed ICreature.Flags ICreature.Inventory ICreature.IsDead ICreature.WalkPlan ICreature.CanSee(ICreature) ICreature.CanSee(Location) ICreature.TurnToDirection(Direction) ICreature.SetOutfit(Outfit) IThing.ThingChanged IThing.ThingId IThing.CanBeMoved IThing.DescribeForLogger() IContainedThing.ParentContainer IThingContainer.FindThingAtIndex(Byte) IThingContainer.AddContent(IThingFactory, IThing, Byte) IThingContainer.RemoveContent(IThingFactory, IThing, Byte, Byte) IThingContainer.ReplaceContent(IThingFactory, IThing, IThing, Byte, Byte) ILocatable.Location ILocatable.CarryLocation System.IEquatable<Fibula.Creatures.Contracts.Abstractions.ICreature>.Equals(Fibula.Creatures.Contracts.Abstractions.ICreature) Namespace : Fibula.Mechanics.Contracts.Abstractions Assembly : Fibula.Mechanics.Contracts.dll Syntax public interface ICreatureWithExhaustion : ICreature, IThing, IContainedThing, IThingContainer, ILocatable, IEquatable<ICreature> Properties | Improve this Doc View Source ExhaustionInformation Gets the current exhaustion information for the entity. Declaration IDictionary<ExhaustionType, DateTimeOffset> ExhaustionInformation { get; } Property Value Type Description System.Collections.Generic.IDictionary < ExhaustionType , System.DateTimeOffset > Remarks The key is a ExhaustionType , and the value is a System.DateTimeOffset : the date and time at which exhaustion is completely recovered. Methods | Improve this Doc View Source AddExhaustion(ExhaustionType, DateTimeOffset, TimeSpan) Adds exhaustion of the given type. Declaration void AddExhaustion(ExhaustionType type, DateTimeOffset fromTime, TimeSpan timeSpan) Parameters Type Name Description ExhaustionType type The type of exhaustion to add. System.DateTimeOffset fromTime The reference time from which to add. System.TimeSpan timeSpan The amount of time to add exhaustion for. | Improve this Doc View Source AddExhaustion(ExhaustionType, DateTimeOffset, UInt32) Adds exhaustion of the given type. Declaration void AddExhaustion(ExhaustionType type, DateTimeOffset fromTime, uint milliseconds) Parameters Type Name Description ExhaustionType type The type of exhaustion to add. System.DateTimeOffset fromTime The reference time from which to add. System.UInt32 milliseconds The amount of time in milliseconds to add exhaustion for. | Improve this Doc View Source CalculateRemainingCooldownTime(ExhaustionType, DateTimeOffset) Calculates the remaining System.TimeSpan until the entity's exhaustion is recovered from. Declaration TimeSpan CalculateRemainingCooldownTime(ExhaustionType type, DateTimeOffset fromTime) Parameters Type Name Description ExhaustionType type The type of exhaustion. System.DateTimeOffset fromTime The current time to calculate from. Returns Type Description System.TimeSpan The System.TimeSpan result. Extension Methods ContainerExtensions.GetParentContainerHierarchy(IContainedThing, Boolean) ContainerExtensions.GetParentContainerHierarchy(IThingContainer, Boolean) CreatureExtensions.CalculateStepDuration(ICreature, ITile) ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Contracts.Abstractions.IElevatedOperation.html": {
    "href": "code/Fibula.Mechanics.Contracts.Abstractions.IElevatedOperation.html",
    "title": "Interface IElevatedOperation | Fibula MMO",
    "keywords": "Interface IElevatedOperation Interface for an elevated game operation. Inherited Members IOperation.ExhaustionType IOperation.ExhaustionCost IEvent.Cancelled IEvent.Expedited IEvent.EventId IEvent.RequestorId IEvent.CanBeCancelled IEvent.RepeatAfter IEvent.Cancel() IEvent.Execute(IEventContext) IEvent.Expedite() Namespace : Fibula.Mechanics.Contracts.Abstractions Assembly : Fibula.Mechanics.Contracts.dll Syntax public interface IElevatedOperation : IOperation, IEvent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Contracts.Abstractions.IElevatedOperationContext.html": {
    "href": "code/Fibula.Mechanics.Contracts.Abstractions.IElevatedOperationContext.html",
    "title": "Interface IElevatedOperationContext | Fibula MMO",
    "keywords": "Interface IElevatedOperationContext Interface for an elevated operation context. Inherited Members IOperationContext.MapDescriptor IOperationContext.Map IOperationContext.CreatureFinder IOperationContext.ItemFactory IOperationContext.CreatureFactory IOperationContext.OperationFactory IOperationContext.ContainerManager IOperationContext.GameApi IOperationContext.CombatApi IOperationContext.PathFinder IOperationContext.PredefinedItemSet IOperationContext.Scheduler IEventContext.Logger Namespace : Fibula.Mechanics.Contracts.Abstractions Assembly : Fibula.Mechanics.Contracts.dll Syntax public interface IElevatedOperationContext : IOperationContext, IEventContext Properties | Improve this Doc View Source CreatureManager Gets the reference to the creature manager in use. Declaration ICreatureManager CreatureManager { get; } Property Value Type Description ICreatureManager Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Contracts.Abstractions.IGame.html": {
    "href": "code/Fibula.Mechanics.Contracts.Abstractions.IGame.html",
    "title": "Interface IGame | Fibula MMO",
    "keywords": "Interface IGame Interface for the game service. Inherited Members Microsoft.Extensions.Hosting.IHostedService.StartAsync(System.Threading.CancellationToken) Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken) IGameOperationsApi.CreateItemAtLocation(Location, IItemType, ValueTuple<ItemAttribute, IConvertible>[]) IGameOperationsApi.CreateItemAtLocation(Location, UInt16, ValueTuple<ItemAttribute, IConvertible>[]) IGameOperationsApi.CancelPlayerActions(IPlayer, Type, Boolean) IGameOperationsApi.CreatureSpeech(UInt32, SpeechType, ChatChannelType, String, String) IGameOperationsApi.CreatureTurn(UInt32, ICreature, Direction) IGameOperationsApi.LookAt(UInt16, Location, Byte, IPlayer) IGameOperationsApi.LogPlayerIn(IClient, ICreatureCreationMetadata) IGameOperationsApi.LogPlayerOut(IPlayer) IGameOperationsApi.Movement(UInt32, UInt16, Location, Byte, UInt32, Location, UInt32, Byte) IGameOperationsApi.SetCreatureStaticWalkPlan(ICreature, Direction[], WalkStrategy) IGameOperationsApi.SetCreatureDynamicWalkPlan(ICreature, ICreature, WalkStrategy) IGameOperationsApi.SendHeartbeat(IPlayer) IGameOperationsApi.SendHeartbeatResponse(IPlayer) ICombatOperationsApi.CombatantHealthChanged(ICombatant, UInt16) ICombatOperationsApi.CombatantDeath(ICombatant) ICombatOperationsApi.CreatureChangeModes(UInt32, FightMode, ChaseMode, Boolean) ICombatOperationsApi.ResetCombatTarget(ICombatant, ICombatant) Namespace : Fibula.Mechanics.Contracts.Abstractions Assembly : Fibula.Mechanics.Contracts.dll Syntax public interface IGame : IHostedService, IGameOperationsApi, ICombatOperationsApi Properties | Improve this Doc View Source WorldInfo Gets the game world's information. Declaration IWorldInformation WorldInfo { get; } Property Value Type Description IWorldInformation Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Contracts.Abstractions.IGameOperationsApi.html": {
    "href": "code/Fibula.Mechanics.Contracts.Abstractions.IGameOperationsApi.html",
    "title": "Interface IGameOperationsApi | Fibula MMO",
    "keywords": "Interface IGameOperationsApi Interface for the operations available in the game API. Namespace : Fibula.Mechanics.Contracts.Abstractions Assembly : Fibula.Mechanics.Contracts.dll Syntax public interface IGameOperationsApi Methods | Improve this Doc View Source CancelPlayerActions(IPlayer, Type, Boolean) Cancels all actions that a player has pending. Declaration void CancelPlayerActions(IPlayer player, Type typeOfActionToCancel = null, bool async = false) Parameters Type Name Description IPlayer player The player to cancel actions for. System.Type typeOfActionToCancel Optional. The specific type of action to cancel. System.Boolean async Optional. A value indicating whether to execute the cancellation asynchronously. | Improve this Doc View Source CreateItemAtLocation(Location, IItemType, (ItemAttribute, IConvertible)[]) Creates item at the specified location. Declaration void CreateItemAtLocation(Location location, IItemType itemType, params (ItemAttribute, IConvertible)[] additionalAttributes) Parameters Type Name Description Location location The location at which to create the item. IItemType itemType The type of item to create. System.ValueTuple < ItemAttribute , System.IConvertible >[] additionalAttributes Optional. Additional item attributes to set on the new item. | Improve this Doc View Source CreateItemAtLocation(Location, UInt16, (ItemAttribute, IConvertible)[]) Creates a new item at the specified location. Declaration void CreateItemAtLocation(Location location, ushort itemTypeId, params (ItemAttribute, IConvertible)[] additionalAttributes) Parameters Type Name Description Location location The location at which to create the item. System.UInt16 itemTypeId The type id of the item to create. System.ValueTuple < ItemAttribute , System.IConvertible >[] additionalAttributes Optional. Additional item attributes to set on the new item. | Improve this Doc View Source CreatureSpeech(UInt32, SpeechType, ChatChannelType, String, String) Handles creature speech. Declaration void CreatureSpeech(uint creatureId, SpeechType speechType, ChatChannelType channelType, string content, string receiver = \"\") Parameters Type Name Description System.UInt32 creatureId The id of the creature. SpeechType speechType The type of speech. ChatChannelType channelType The type of channel of the speech. System.String content The content of the speech. System.String receiver Optional. The receiver of the speech, if any. | Improve this Doc View Source CreatureTurn(UInt32, ICreature, Direction) Turns a creature to a direction. Declaration void CreatureTurn(uint requestorId, ICreature creature, Direction direction) Parameters Type Name Description System.UInt32 requestorId The id of the creature. ICreature creature The creature to turn. Direction direction The direction to turn to. | Improve this Doc View Source LogPlayerIn(IClient, ICreatureCreationMetadata) Logs a player into the game. Declaration void LogPlayerIn(IClient client, ICreatureCreationMetadata creatureCreationMetadata) Parameters Type Name Description IClient client The client from which the player is connecting. ICreatureCreationMetadata creatureCreationMetadata The metadata for the player's creation. | Improve this Doc View Source LogPlayerOut(IPlayer) Logs a player out of the game. Declaration void LogPlayerOut(IPlayer player) Parameters Type Name Description IPlayer player The player to log out. | Improve this Doc View Source LookAt(UInt16, Location, Byte, IPlayer) Describes a thing for a player. Declaration void LookAt(ushort thingId, Location location, byte stackPosition, IPlayer player) Parameters Type Name Description System.UInt16 thingId The id of the thing to describe. Location location The location of the thing to describe. System.Byte stackPosition The position in the stack within the location of the thing to describe. IPlayer player The player for which to describe the thing for. | Improve this Doc View Source Movement(UInt32, UInt16, Location, Byte, UInt32, Location, UInt32, Byte) Moves a thing. Declaration void Movement(uint requestorId, ushort clientThingId, Location fromLocation, byte fromIndex, uint fromCreatureId, Location toLocation, uint toCreatureId, byte amount = 1) Parameters Type Name Description System.UInt32 requestorId The id of the creature requesting the move. System.UInt16 clientThingId The id of the thing being moved. Location fromLocation The location from which the thing is being moved. System.Byte fromIndex The index within the location from which the thing is being moved. System.UInt32 fromCreatureId The id of the creature from which the thing is being moved, if any. Location toLocation The location to which the thing is being moved. System.UInt32 toCreatureId The id of the creature to which the thing is being moved. System.Byte amount Optional. The amount of the thing to move. Defaults to 1. | Improve this Doc View Source SendHeartbeat(IPlayer) Sends a heartbeat to the player's client. Declaration void SendHeartbeat(IPlayer player) Parameters Type Name Description IPlayer player The player which to send the heartbeat to. | Improve this Doc View Source SendHeartbeatResponse(IPlayer) Sends a heartbeat response to the player's client. Declaration void SendHeartbeatResponse(IPlayer player) Parameters Type Name Description IPlayer player The player which to send the heartbeat response to. | Improve this Doc View Source SetCreatureDynamicWalkPlan(ICreature, ICreature, WalkStrategy) Re-sets a given creature's walk plan and kicks it off. Declaration void SetCreatureDynamicWalkPlan(ICreature creature, ICreature targetCreature, WalkStrategy strategy = WalkStrategy.ConservativeRecalculation) Parameters Type Name Description ICreature creature The creature to reset the walk plan of. ICreature targetCreature The creature towards which the walk plan will be generated to. WalkStrategy strategy Optional. The strategy to follow in the plan. | Improve this Doc View Source SetCreatureStaticWalkPlan(ICreature, Direction[], WalkStrategy) Re-sets a given creature's walk plan and kicks it off. Declaration void SetCreatureStaticWalkPlan(ICreature creature, Direction[] directions, WalkStrategy strategy = WalkStrategy.DoNotRecalculate) Parameters Type Name Description ICreature creature The creature to reset the walk plan of. Direction [] directions The directions for the new plan. WalkStrategy strategy Optional. The strategy to follow in the plan. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Contracts.Abstractions.IHandler.html": {
    "href": "code/Fibula.Mechanics.Contracts.Abstractions.IHandler.html",
    "title": "Interface IHandler | Fibula MMO",
    "keywords": "Interface IHandler Interface for a request handler. Namespace : Fibula.Mechanics.Contracts.Abstractions Assembly : Fibula.Mechanics.Contracts.dll Syntax public interface IHandler Methods | Improve this Doc View Source HandleRequest(IIncomingPacket, IClient) Handles the request contained in a packet. Declaration IEnumerable<IOutboundPacket> HandleRequest(IIncomingPacket incomingPacket, IClient client) Parameters Type Name Description IIncomingPacket incomingPacket The packet to handle. IClient client A reference to the client from where this request originated from, for context. Returns Type Description System.Collections.Generic.IEnumerable < IOutboundPacket > A collection of IOutboundPacket s that compose that synchronous response, if any. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Contracts.Abstractions.IHandlerSelector.html": {
    "href": "code/Fibula.Mechanics.Contracts.Abstractions.IHandlerSelector.html",
    "title": "Interface IHandlerSelector | Fibula MMO",
    "keywords": "Interface IHandlerSelector Interface for selectors of handlers. Namespace : Fibula.Mechanics.Contracts.Abstractions Assembly : Fibula.Mechanics.Contracts.dll Syntax public interface IHandlerSelector Methods | Improve this Doc View Source RegisterForPacketType(Type, IHandler) Registers a handler for a given packet type. Declaration void RegisterForPacketType(Type packetType, IHandler handler) Parameters Type Name Description System.Type packetType The type of packet to register for. IHandler handler The handler to register. | Improve this Doc View Source SelectForPacket(IIncomingPacket) Returns the most appropriate handler for the specified packet type. Declaration IHandler SelectForPacket(IIncomingPacket packet) Parameters Type Name Description IIncomingPacket packet The packet to select the handler for. Returns Type Description IHandler An instance of an IHandler implementaion. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Contracts.Abstractions.IOperation.html": {
    "href": "code/Fibula.Mechanics.Contracts.Abstractions.IOperation.html",
    "title": "Interface IOperation | Fibula MMO",
    "keywords": "Interface IOperation Interface for a game operation. Inherited Members IEvent.Cancelled IEvent.Expedited IEvent.EventId IEvent.RequestorId IEvent.CanBeCancelled IEvent.RepeatAfter IEvent.Cancel() IEvent.Execute(IEventContext) IEvent.Expedite() Namespace : Fibula.Mechanics.Contracts.Abstractions Assembly : Fibula.Mechanics.Contracts.dll Syntax public interface IOperation : IEvent Properties | Improve this Doc View Source ExhaustionCost Gets the exhaustion cost of this operation. Declaration TimeSpan ExhaustionCost { get; } Property Value Type Description System.TimeSpan | Improve this Doc View Source ExhaustionType Gets the type of exhaustion that this operation produces. Declaration ExhaustionType ExhaustionType { get; } Property Value Type Description ExhaustionType Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Contracts.Abstractions.IOperationContext.html": {
    "href": "code/Fibula.Mechanics.Contracts.Abstractions.IOperationContext.html",
    "title": "Interface IOperationContext | Fibula MMO",
    "keywords": "Interface IOperationContext Interface for an operation context. Inherited Members IEventContext.Logger Namespace : Fibula.Mechanics.Contracts.Abstractions Assembly : Fibula.Mechanics.Contracts.dll Syntax public interface IOperationContext : IEventContext Properties | Improve this Doc View Source CombatApi Gets a reference to the combat api. Declaration ICombatOperationsApi CombatApi { get; } Property Value Type Description ICombatOperationsApi | Improve this Doc View Source ContainerManager Gets a reference to the container manager in use. Declaration IContainerManager ContainerManager { get; } Property Value Type Description IContainerManager | Improve this Doc View Source CreatureFactory Gets a reference to the creature factory in use. Declaration ICreatureFactory CreatureFactory { get; } Property Value Type Description ICreatureFactory | Improve this Doc View Source CreatureFinder Gets the reference to the creature finder in use. Declaration ICreatureFinder CreatureFinder { get; } Property Value Type Description ICreatureFinder | Improve this Doc View Source GameApi Gets a reference to the game's api. Declaration IGameOperationsApi GameApi { get; } Property Value Type Description IGameOperationsApi | Improve this Doc View Source ItemFactory Gets a reference to the item factory in use. Declaration IItemFactory ItemFactory { get; } Property Value Type Description IItemFactory | Improve this Doc View Source Map Gets the reference to the map. Declaration IMap Map { get; } Property Value Type Description IMap | Improve this Doc View Source MapDescriptor Gets a reference to the map descriptor in use. Declaration IMapDescriptor MapDescriptor { get; } Property Value Type Description IMapDescriptor | Improve this Doc View Source OperationFactory Gets the reference to the operation factory. Declaration IOperationFactory OperationFactory { get; } Property Value Type Description IOperationFactory | Improve this Doc View Source PathFinder Gets a reference to the pathfinder algorithm in use. Declaration IPathFinder PathFinder { get; } Property Value Type Description IPathFinder | Improve this Doc View Source PredefinedItemSet Gets the predefined item set. Declaration IPredefinedItemSet PredefinedItemSet { get; } Property Value Type Description IPredefinedItemSet | Improve this Doc View Source Scheduler Gets a reference to the scheduler in use. Declaration IScheduler Scheduler { get; } Property Value Type Description IScheduler Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Contracts.Abstractions.IOperationCreationArguments.html": {
    "href": "code/Fibula.Mechanics.Contracts.Abstractions.IOperationCreationArguments.html",
    "title": "Interface IOperationCreationArguments | Fibula MMO",
    "keywords": "Interface IOperationCreationArguments Interface for all operation creation arguments. Namespace : Fibula.Mechanics.Contracts.Abstractions Assembly : Fibula.Mechanics.Contracts.dll Syntax public interface IOperationCreationArguments Properties | Improve this Doc View Source RequestorId Gets the id of the requestor of the operation, if any. Declaration uint RequestorId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source Type Gets the type of operation being created. Declaration OperationType Type { get; } Property Value Type Description OperationType Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Contracts.Abstractions.IOperationFactory.html": {
    "href": "code/Fibula.Mechanics.Contracts.Abstractions.IOperationFactory.html",
    "title": "Interface IOperationFactory | Fibula MMO",
    "keywords": "Interface IOperationFactory Interface for factories of operations. Namespace : Fibula.Mechanics.Contracts.Abstractions Assembly : Fibula.Mechanics.Contracts.dll Syntax public interface IOperationFactory Properties | Improve this Doc View Source Logger Gets the reference to the factory's logger. Declaration ILogger Logger { get; } Property Value Type Description Serilog.ILogger Methods | Improve this Doc View Source Create(IOperationCreationArguments) Creates a new IOperation based on the type specified with the given arguments. Declaration IOperation Create(IOperationCreationArguments arguments) Parameters Type Name Description IOperationCreationArguments arguments The arguments for creation. Returns Type Description IOperation A new instance of IOperation . Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Contracts.Abstractions.IPathFinder.html": {
    "href": "code/Fibula.Mechanics.Contracts.Abstractions.IPathFinder.html",
    "title": "Interface IPathFinder | Fibula MMO",
    "keywords": "Interface IPathFinder Interface for a path finder. Namespace : Fibula.Mechanics.Contracts.Abstractions Assembly : Fibula.Mechanics.Contracts.dll Syntax public interface IPathFinder Methods | Improve this Doc View Source FindBetween(Location, Location, out Location, ICreature, Int32, Boolean, Int32) Attempts to find a path between two Location s. Declaration IEnumerable<Direction> FindBetween(Location startLocation, Location targetLocation, out Location endLocation, ICreature onBehalfOfCreature = null, int maxStepsCount = 100, bool considerAvoidsAsBlocking = true, int targetDistance = 1) Parameters Type Name Description Location startLocation The start location. Location targetLocation The target location to find a path to. Location endLocation The last searched location before returning. ICreature onBehalfOfCreature Optional. The creature on behalf of which the search is being performed. System.Int32 maxStepsCount Optional. The maximum number of search steps to perform before giving up on finding the target location. Default is 100. System.Boolean considerAvoidsAsBlocking Optional. A value indicating whether to consider the creature avoid tastes as blocking in path finding. Defaults to true. System.Int32 targetDistance Optional. The target distance from the target node to shoot for. Returns Type Description System.Collections.Generic.IEnumerable < Direction > An System.Collections.Generic.IEnumerable<T> of Direction s leading to the end location. The endLocation and targetLocation may or may not be the same. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Contracts.Abstractions.IWorldInformation.html": {
    "href": "code/Fibula.Mechanics.Contracts.Abstractions.IWorldInformation.html",
    "title": "Interface IWorldInformation | Fibula MMO",
    "keywords": "Interface IWorldInformation Interface for the world information. Namespace : Fibula.Mechanics.Contracts.Abstractions Assembly : Fibula.Mechanics.Contracts.dll Syntax public interface IWorldInformation Properties | Improve this Doc View Source LightColor Gets the game world's light color. Declaration byte LightColor { get; } Property Value Type Description System.Byte | Improve this Doc View Source LightLevel Gets the game world's light level. Declaration byte LightLevel { get; } Property Value Type Description System.Byte | Improve this Doc View Source Status Gets the game world's state. Declaration WorldState Status { get; } Property Value Type Description WorldState Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Contracts.Combat.Enumerations.CombatCreditType.html": {
    "href": "code/Fibula.Mechanics.Contracts.Combat.Enumerations.CombatCreditType.html",
    "title": "Enum CombatCreditType | Fibula MMO",
    "keywords": "Enum CombatCreditType Enumerates the possible blood types. Namespace : Fibula.Mechanics.Contracts.Combat.Enumerations Assembly : Fibula.Mechanics.Contracts.dll Syntax public enum CombatCreditType : byte Fields Name Description Attack Attack. Defense Defense. Extension Methods ObjectExtensions.YieldSingleItem<CombatCreditType>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<CombatCreditType>(String)"
  },
  "code/Fibula.Mechanics.Contracts.Combat.Enumerations.html": {
    "href": "code/Fibula.Mechanics.Contracts.Combat.Enumerations.html",
    "title": "Namespace Fibula.Mechanics.Contracts.Combat.Enumerations | Fibula MMO",
    "keywords": "Namespace Fibula.Mechanics.Contracts.Combat.Enumerations Enums CombatCreditType Enumerates the possible blood types."
  },
  "code/Fibula.Mechanics.Contracts.Constants.CombatConstants.html": {
    "href": "code/Fibula.Mechanics.Contracts.Constants.CombatConstants.html",
    "title": "Class CombatConstants | Fibula MMO",
    "keywords": "Class CombatConstants Static class that contains constants regarding combat. Inheritance System.Object CombatConstants Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Contracts.Constants Assembly : Fibula.Mechanics.Contracts.dll Syntax public static class CombatConstants Fields | Improve this Doc View Source DefaultAttackSpeed The default attack speed of a combatant. Declaration public const decimal DefaultAttackSpeed = 1.0M Field Value Type Description System.Decimal | Improve this Doc View Source DefaultCombatRoundTimeInMs The default combat round time in milliseconds. Declaration public const int DefaultCombatRoundTimeInMs = 2000 Field Value Type Description System.Int32 | Improve this Doc View Source DefaultDefenseSpeed The default defense speed of a combatant. Declaration public const decimal DefaultDefenseSpeed = 2.0M Field Value Type Description System.Decimal | Improve this Doc View Source DefaultMaximumAttackCredits The default maximum attack credits that a combatant has. Declaration public const ushort DefaultMaximumAttackCredits = 1 Field Value Type Description System.UInt16 | Improve this Doc View Source DefaultMaximumDefenseCredits The default maximum defense credits that a combatant has. Declaration public const ushort DefaultMaximumDefenseCredits = 2 Field Value Type Description System.UInt16 | Improve this Doc View Source MaximumCombatSpeed The maximum allowed combat speed in the game for combatants. Declaration public const decimal MaximumCombatSpeed = 5.0M Field Value Type Description System.Decimal | Improve this Doc View Source MinimumCombatSpeed The minimum allowed combat speed in the game for combatants. Declaration public const decimal MinimumCombatSpeed = 0.2M Field Value Type Description System.Decimal"
  },
  "code/Fibula.Mechanics.Contracts.Constants.html": {
    "href": "code/Fibula.Mechanics.Contracts.Constants.html",
    "title": "Namespace Fibula.Mechanics.Contracts.Constants | Fibula MMO",
    "keywords": "Namespace Fibula.Mechanics.Contracts.Constants Classes CombatConstants Static class that contains constants regarding combat. MechanicsConstants Static class that contains mechanics constants."
  },
  "code/Fibula.Mechanics.Contracts.Constants.MechanicsConstants.html": {
    "href": "code/Fibula.Mechanics.Contracts.Constants.MechanicsConstants.html",
    "title": "Class MechanicsConstants | Fibula MMO",
    "keywords": "Class MechanicsConstants Static class that contains mechanics constants. Inheritance System.Object MechanicsConstants Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Contracts.Constants Assembly : Fibula.Mechanics.Contracts.dll Syntax public static class MechanicsConstants Fields | Improve this Doc View Source DefaultGroundMovementPenaltyInMs A default value to use when calculating movement penalty. Declaration public const int DefaultGroundMovementPenaltyInMs = 150 Field Value Type Description System.Int32"
  },
  "code/Fibula.Mechanics.Contracts.Delegates.html": {
    "href": "code/Fibula.Mechanics.Contracts.Delegates.html",
    "title": "Namespace Fibula.Mechanics.Contracts.Delegates | Fibula MMO",
    "keywords": "Namespace Fibula.Mechanics.Contracts.Delegates Delegates OnDeath Delegate meant for when a combatant dies. OnHealthChange Delegate meant for when a combatant's health level changes."
  },
  "code/Fibula.Mechanics.Contracts.Delegates.OnDeath.html": {
    "href": "code/Fibula.Mechanics.Contracts.Delegates.OnDeath.html",
    "title": "Delegate OnDeath | Fibula MMO",
    "keywords": "Delegate OnDeath Delegate meant for when a combatant dies. Namespace : Fibula.Mechanics.Contracts.Delegates Assembly : Fibula.Mechanics.Contracts.dll Syntax public delegate void OnDeath(ICombatant combatant); Parameters Type Name Description ICombatant combatant The combatant that died. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Contracts.Delegates.OnHealthChange.html": {
    "href": "code/Fibula.Mechanics.Contracts.Delegates.OnHealthChange.html",
    "title": "Delegate OnHealthChange | Fibula MMO",
    "keywords": "Delegate OnHealthChange Delegate meant for when a combatant's health level changes. Namespace : Fibula.Mechanics.Contracts.Delegates Assembly : Fibula.Mechanics.Contracts.dll Syntax public delegate void OnHealthChange(ICombatant combatant, ushort oldHealthValue); Parameters Type Name Description ICombatant combatant The combatant that had a health change. System.UInt16 oldHealthValue The old health value before this change. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Contracts.Enumerations.ExhaustionType.html": {
    "href": "code/Fibula.Mechanics.Contracts.Enumerations.ExhaustionType.html",
    "title": "Enum ExhaustionType | Fibula MMO",
    "keywords": "Enum ExhaustionType Enumerates the possible sources of creature exhaustion. Namespace : Fibula.Mechanics.Contracts.Enumerations Assembly : Fibula.Mechanics.Contracts.dll Syntax public enum ExhaustionType Fields Name Description Action Using items or performing actions. MentalCombat Casting spells or using runes. Movement Moving around. None No exhaustion. PhysicalCombat Fighting (including defending). Speech Talking in the public chat channel. Extension Methods ObjectExtensions.YieldSingleItem<ExhaustionType>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<ExhaustionType>(String)"
  },
  "code/Fibula.Mechanics.Contracts.Enumerations.html": {
    "href": "code/Fibula.Mechanics.Contracts.Enumerations.html",
    "title": "Namespace Fibula.Mechanics.Contracts.Enumerations | Fibula MMO",
    "keywords": "Namespace Fibula.Mechanics.Contracts.Enumerations Enums ExhaustionType Enumerates the possible sources of creature exhaustion. OperationType Class that enumerates the different types of operations available. WorldState Enumeration of the possible world states."
  },
  "code/Fibula.Mechanics.Contracts.Enumerations.OperationType.html": {
    "href": "code/Fibula.Mechanics.Contracts.Enumerations.OperationType.html",
    "title": "Enum OperationType | Fibula MMO",
    "keywords": "Enum OperationType Class that enumerates the different types of operations available. Namespace : Fibula.Mechanics.Contracts.Enumerations Assembly : Fibula.Mechanics.Contracts.dll Syntax public enum OperationType Fields Name Description AutoAttack The actual attack operation when auto attacking. AutoAttackOrchestrator The operationthat orchestrates auto attacking. AutoWalkOrchestrator The operation that orchestrates auto walking. CancelOperations An operation to cancel other operations. ChangeModes An operation to change modes. CreateItem An operation that creates an item. Death An operation to deal with a creature's death. LogIn The operation of logging in. LogOut The operation of logging out. LookAt An operation to describe a thing. Movement A movement operation. RestoreCombatCredit An operation that restores combat credits to a combatant. Speech A speech operation. Turn An operation of a creature turn. Extension Methods ObjectExtensions.YieldSingleItem<OperationType>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<OperationType>(String)"
  },
  "code/Fibula.Mechanics.Contracts.Enumerations.WorldState.html": {
    "href": "code/Fibula.Mechanics.Contracts.Enumerations.WorldState.html",
    "title": "Enum WorldState | Fibula MMO",
    "keywords": "Enum WorldState Enumeration of the possible world states. Namespace : Fibula.Mechanics.Contracts.Enumerations Assembly : Fibula.Mechanics.Contracts.dll Syntax public enum WorldState : byte Fields Name Description Closed Testing or closed beta state. Loading Represents a world in loading state. Open The normal, open public state. Extension Methods ObjectExtensions.YieldSingleItem<WorldState>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<WorldState>(String)"
  },
  "code/Fibula.Mechanics.Contracts.Extensions.ContainerExtensions.html": {
    "href": "code/Fibula.Mechanics.Contracts.Extensions.ContainerExtensions.html",
    "title": "Class ContainerExtensions | Fibula MMO",
    "keywords": "Class ContainerExtensions Helper class that provides extensions for the IContainedThing and IThingContainer implementations. Inheritance System.Object ContainerExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Contracts.Extensions Assembly : Fibula.Mechanics.Contracts.dll Syntax public static class ContainerExtensions Methods | Improve this Doc View Source GetParentContainerHierarchy(IContainedThing, Boolean) Gets this thing's parent container hierarchy. Declaration public static IEnumerable<IThingContainer> GetParentContainerHierarchy(this IContainedThing containedThing, bool includeTiles = true) Parameters Type Name Description IContainedThing containedThing The contained thing to get the hierarchy for. System.Boolean includeTiles Optional. A value indicating whether to include tiles in the hierarchy. Defaults to true. Returns Type Description System.Collections.Generic.IEnumerable < IThingContainer > The ordered collection of IThingContainer s in this thing's container hierarchy. | Improve this Doc View Source GetParentContainerHierarchy(IThingContainer, Boolean) Gets this thing's parent container hierarchy. Declaration public static IEnumerable<IThingContainer> GetParentContainerHierarchy(this IThingContainer thingContainer, bool includeTiles = true) Parameters Type Name Description IThingContainer thingContainer The thing container to get the hierarchy for. System.Boolean includeTiles Optional. A value indicating whether to include tiles in the hierarchy. Defaults to true. Returns Type Description System.Collections.Generic.IEnumerable < IThingContainer > The ordered collection of IThingContainer s in this thing's container hierarchy."
  },
  "code/Fibula.Mechanics.Contracts.Extensions.CreatureExtensions.html": {
    "href": "code/Fibula.Mechanics.Contracts.Extensions.CreatureExtensions.html",
    "title": "Class CreatureExtensions | Fibula MMO",
    "keywords": "Class CreatureExtensions Static class that provides helper methods for creature mechanics. Inheritance System.Object CreatureExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Contracts.Extensions Assembly : Fibula.Mechanics.Contracts.dll Syntax public static class CreatureExtensions Methods | Improve this Doc View Source CalculateStepDuration(ICreature, ITile) Calculates the step duration of a creature moving from a given tile in the given direction. Declaration public static TimeSpan CalculateStepDuration(this ICreature creature, ITile fromTile = null) Parameters Type Name Description ICreature creature The creature that's moving. ITile fromTile The tile which the creature is moving from. Returns Type Description System.TimeSpan The duration time of the step."
  },
  "code/Fibula.Mechanics.Contracts.Extensions.html": {
    "href": "code/Fibula.Mechanics.Contracts.Extensions.html",
    "title": "Namespace Fibula.Mechanics.Contracts.Extensions | Fibula MMO",
    "keywords": "Namespace Fibula.Mechanics.Contracts.Extensions Classes ContainerExtensions Helper class that provides extensions for the IContainedThing and IThingContainer implementations. CreatureExtensions Static class that provides helper methods for creature mechanics. ItemExtensions Helper class that provides extensions for the IItem implementations. LocationExtensions Helper class for extension methods of locations. WalkPlanExtensions Helper class for extension methods of walk plans."
  },
  "code/Fibula.Mechanics.Contracts.Extensions.ItemExtensions.html": {
    "href": "code/Fibula.Mechanics.Contracts.Extensions.ItemExtensions.html",
    "title": "Class ItemExtensions | Fibula MMO",
    "keywords": "Class ItemExtensions Helper class that provides extensions for the IItem implementations. Inheritance System.Object ItemExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Contracts.Extensions Assembly : Fibula.Mechanics.Contracts.dll Syntax public static class ItemExtensions Methods | Improve this Doc View Source GetCarrier(IItem) Attempts to get the creature carrying this item, if any. Declaration public static ICreature GetCarrier(this IItem item) Parameters Type Name Description IItem item The item to find the carrier for. Returns Type Description ICreature The carrier of the item, if any."
  },
  "code/Fibula.Mechanics.Contracts.Extensions.LocationExtensions.html": {
    "href": "code/Fibula.Mechanics.Contracts.Extensions.LocationExtensions.html",
    "title": "Class LocationExtensions | Fibula MMO",
    "keywords": "Class LocationExtensions Helper class for extension methods of locations. Inheritance System.Object LocationExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Contracts.Extensions Assembly : Fibula.Mechanics.Contracts.dll Syntax public static class LocationExtensions Methods | Improve this Doc View Source DecodeContainer(Location, IMap, IContainerManager, out Byte, ICreature) Gets a thing container from a location. Declaration public static IThingContainer DecodeContainer(this Location fromLocation, IMap map, IContainerManager containerManager, out byte index, ICreature carrierCreature = null) Parameters Type Name Description Location fromLocation The location from which to decode the container information. IMap map A reference to the map. IContainerManager containerManager A reference to the container manager. System.Byte index The index within the cyclinder to target. ICreature carrierCreature The creature that carries the decoded container. Required for locations of type InsideContainer and InventorySlot . Returns Type Description IThingContainer An instance of the target IThingContainer of the location. | Improve this Doc View Source FindItemById(Location, IMap, IContainerManager, UInt16, ICreature) Attempts to find an item at the given location. Declaration public static IItem FindItemById(this Location atLocation, IMap map, IContainerManager containerManager, ushort typeId, ICreature creature = null) Parameters Type Name Description Location atLocation The location at which to look for the item. IMap map A reference to the map. IContainerManager containerManager A reference to the container manager. System.UInt16 typeId The type id of the item to look for. ICreature creature Optional. The creature that the location's cyclinder targets, if any. Returns Type Description IItem An item instance, if found at the location."
  },
  "code/Fibula.Mechanics.Contracts.Extensions.WalkPlanExtensions.html": {
    "href": "code/Fibula.Mechanics.Contracts.Extensions.WalkPlanExtensions.html",
    "title": "Class WalkPlanExtensions | Fibula MMO",
    "keywords": "Class WalkPlanExtensions Helper class for extension methods of walk plans. Inheritance System.Object WalkPlanExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Contracts.Extensions Assembly : Fibula.Mechanics.Contracts.dll Syntax public static class WalkPlanExtensions Methods | Improve this Doc View Source RecalculateWaypoints(WalkPlan, Location, IEnumerable<Direction>) Recalculates the plan's waypoints (locations) given a start location and some directions. Declaration public static void RecalculateWaypoints(this WalkPlan walkPlan, Location startLocation, IEnumerable<Direction> directions) Parameters Type Name Description WalkPlan walkPlan The walkplan to recalculate for. Location startLocation The start location. System.Collections.Generic.IEnumerable < Direction > directions The directions to create the waypoints with. | Improve this Doc View Source UpdateState(WalkPlan, Location) Checks and updates the plan by comparing the current waypoint's location to the plan's waypoints. This also accounts for the plan's strategy and flags to recalculate as per the WalkStrategy rules. Declaration public static WalkPlanState UpdateState(this WalkPlan walkPlan, Location currentWaypoint) Parameters Type Name Description WalkPlan walkPlan The walkplan to check. Location currentWaypoint The current waypoint. Returns Type Description WalkPlanState The resulting state of the walk plan.."
  },
  "code/Fibula.Mechanics.Contracts.Structs.DamageInfo.html": {
    "href": "code/Fibula.Mechanics.Contracts.Structs.DamageInfo.html",
    "title": "Struct DamageInfo | Fibula MMO",
    "keywords": "Struct DamageInfo Struct that represents damage information. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Fibula.Mechanics.Contracts.Structs Assembly : Fibula.Mechanics.Contracts.dll Syntax public struct DamageInfo Constructors | Improve this Doc View Source DamageInfo(Int32, ICombatant) Initializes a new instance of the DamageInfo struct. Declaration public DamageInfo(int damageValue, ICombatant damageDealer = null) Parameters Type Name Description System.Int32 damageValue The value of the damage. ICombatant damageDealer Optional. The dealer of the damage, if any. Properties | Improve this Doc View Source ApplyBloodToEnvironment Gets a value indicating whether to apply blood to the environment. Declaration public bool ApplyBloodToEnvironment { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Blood Gets or sets the blood of the damage. Declaration public BloodType Blood { get; set; } Property Value Type Description BloodType | Improve this Doc View Source Damage Gets or sets the damage value. Declaration public int Damage { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Dealer Gets the original damage dealer. Declaration public ICombatant Dealer { get; } Property Value Type Description ICombatant | Improve this Doc View Source Effect Gets or sets the effect of the damage. Declaration public AnimatedEffect Effect { get; set; } Property Value Type Description AnimatedEffect Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Contracts.Structs.html": {
    "href": "code/Fibula.Mechanics.Contracts.Structs.html",
    "title": "Namespace Fibula.Mechanics.Contracts.Structs | Fibula MMO",
    "keywords": "Namespace Fibula.Mechanics.Contracts.Structs Structs DamageInfo Struct that represents damage information."
  },
  "code/Fibula.Mechanics.Game.html": {
    "href": "code/Fibula.Mechanics.Game.html",
    "title": "Class Game | Fibula MMO",
    "keywords": "Class Game Class that represents the game instance. Inheritance System.Object Game Implements IGame Microsoft.Extensions.Hosting.IHostedService IGameOperationsApi ICombatOperationsApi Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics Assembly : Fibula.Mechanics.dll Syntax public class Game : IGame, IHostedService, IGameOperationsApi, ICombatOperationsApi Constructors | Improve this Doc View Source Game(ILogger, IMapDescriptor, IMap, ICreatureManager, IItemFactory, ICreatureFactory, IOperationFactory, IContainerManager, IPathFinder, IPredefinedItemSet, IScheduler) Initializes a new instance of the Game class. Declaration public Game(ILogger logger, IMapDescriptor mapDescriptor, IMap map, ICreatureManager creatureManager, IItemFactory itemFactory, ICreatureFactory creatureFactory, IOperationFactory operationFactory, IContainerManager containerManager, IPathFinder pathFinderAlgo, IPredefinedItemSet predefinedItemSet, IScheduler scheduler) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. IMapDescriptor mapDescriptor A reference to the map descriptor in use. IMap map A reference to the map. ICreatureManager creatureManager A reference to the creature manager in use. IItemFactory itemFactory A reference to the item factory in use. ICreatureFactory creatureFactory A reference to the creature factory in use. IOperationFactory operationFactory A referecne to the operation factory in use. IContainerManager containerManager A reference to the container manager in use. IPathFinder pathFinderAlgo A reference to the path finding algorithm in use. IPredefinedItemSet predefinedItemSet A reference to the predefined item set declared. IScheduler scheduler A reference to the global scheduler instance. Properties | Improve this Doc View Source WorldInfo Gets the game world's information. Declaration public IWorldInformation WorldInfo { get; } Property Value Type Description IWorldInformation Methods | Improve this Doc View Source CancelPlayerActions(IPlayer, Type, Boolean) Cancels all actions that a player has pending. Declaration public void CancelPlayerActions(IPlayer player, Type typeOfActionToCancel = null, bool async = false) Parameters Type Name Description IPlayer player The player to cancel actions for. System.Type typeOfActionToCancel Optional. The specific type of action to cancel. System.Boolean async Optional. A value indicating whether to execute the cancellation asynchronously. | Improve this Doc View Source CombatantDeath(ICombatant) Handles a death from a combatant. Declaration public void CombatantDeath(ICombatant combatant) Parameters Type Name Description ICombatant combatant The combatant that died. | Improve this Doc View Source CombatantHealthChanged(ICombatant, UInt16) Handles a health change from a combatant. Declaration public void CombatantHealthChanged(ICombatant combatant, ushort oldHealthValue) Parameters Type Name Description ICombatant combatant The combatant who's health changed. System.UInt16 oldHealthValue The old value of the combatant's health. | Improve this Doc View Source CreateItemAtLocation(Location, IItemType, (ItemAttribute, IConvertible)[]) Creates item at the specified location. Declaration public void CreateItemAtLocation(Location location, IItemType itemType, params (ItemAttribute, IConvertible)[] additionalAttributes) Parameters Type Name Description Location location The location at which to create the item. IItemType itemType The type of item to create. System.ValueTuple < ItemAttribute , System.IConvertible >[] additionalAttributes Optional. Additional item attributes to set on the new item. | Improve this Doc View Source CreateItemAtLocation(Location, UInt16, (ItemAttribute, IConvertible)[]) Creates a new item at the specified location. Declaration public void CreateItemAtLocation(Location location, ushort itemTypeId, params (ItemAttribute, IConvertible)[] additionalAttributes) Parameters Type Name Description Location location The location at which to create the item. System.UInt16 itemTypeId The type id of the item to create. System.ValueTuple < ItemAttribute , System.IConvertible >[] additionalAttributes Optional. Additional item attributes to set on the new item. | Improve this Doc View Source CreatureChangeModes(UInt32, FightMode, ChaseMode, Boolean) Changes the fight, chase and safety modes of a creature. Declaration public void CreatureChangeModes(uint creatureId, FightMode fightMode, ChaseMode chaseMode, bool safeModeOn) Parameters Type Name Description System.UInt32 creatureId The id of the creature. FightMode fightMode The fight mode to change to. ChaseMode chaseMode The chase mode to change to. System.Boolean safeModeOn A value indicating whether the attack safety lock is on. | Improve this Doc View Source CreatureSpeech(UInt32, SpeechType, ChatChannelType, String, String) Handles creature speech. Declaration public void CreatureSpeech(uint creatureId, SpeechType speechType, ChatChannelType channelType, string content, string receiver = \"\") Parameters Type Name Description System.UInt32 creatureId The id of the creature. SpeechType speechType The type of speech. ChatChannelType channelType The type of channel of the speech. System.String content The content of the speech. System.String receiver Optional. The receiver of the speech, if any. | Improve this Doc View Source CreatureTurn(UInt32, ICreature, Direction) Turns a creature to a direction. Declaration public void CreatureTurn(uint requestorId, ICreature creature, Direction direction) Parameters Type Name Description System.UInt32 requestorId The id of the creature. ICreature creature The creature to turn. Direction direction The direction to turn to. | Improve this Doc View Source LogPlayerIn(IClient, ICreatureCreationMetadata) Logs a player into the game. Declaration public void LogPlayerIn(IClient client, ICreatureCreationMetadata creatureCreationMetadata) Parameters Type Name Description IClient client The client from which the player is connecting. ICreatureCreationMetadata creatureCreationMetadata The metadata for the player's creation. | Improve this Doc View Source LogPlayerOut(IPlayer) Logs a player out of the game. Declaration public void LogPlayerOut(IPlayer player) Parameters Type Name Description IPlayer player The player to log out. | Improve this Doc View Source LookAt(UInt16, Location, Byte, IPlayer) Describes a thing for a player that is looking at it. Declaration public void LookAt(ushort thingId, Location location, byte stackPosition, IPlayer player) Parameters Type Name Description System.UInt16 thingId The id of the thing to describe. Location location The location of the thing to describe. System.Byte stackPosition The position in the stack within the location of the thing to describe. IPlayer player The player for which to describe the thing for. | Improve this Doc View Source Movement(UInt32, UInt16, Location, Byte, UInt32, Location, UInt32, Byte) Moves a thing. Declaration public void Movement(uint requestorId, ushort clientThingId, Location fromLocation, byte fromIndex, uint fromCreatureId, Location toLocation, uint toCreatureId, byte amount = 1) Parameters Type Name Description System.UInt32 requestorId The id of the creature requesting the move. System.UInt16 clientThingId The id of the thing being moved. Location fromLocation The location from which the thing is being moved. System.Byte fromIndex The index within the location from which the thing is being moved. System.UInt32 fromCreatureId The id of the creature from which the thing is being moved, if any. Location toLocation The location to which the thing is being moved. System.UInt32 toCreatureId The id of the creature to which the thing is being moved. System.Byte amount Optional. The amount of the thing to move. Defaults to 1. | Improve this Doc View Source ResetCombatTarget(ICombatant, ICombatant) Re-sets the combat target of the attacker and it's (possibly new) target. Declaration public void ResetCombatTarget(ICombatant attacker, ICombatant target) Parameters Type Name Description ICombatant attacker The attacker. ICombatant target The new target. | Improve this Doc View Source SendHeartbeat(IPlayer) Sends a heartbeat to the player's client. Declaration public void SendHeartbeat(IPlayer player) Parameters Type Name Description IPlayer player The player which to send the heartbeat to. | Improve this Doc View Source SendHeartbeatResponse(IPlayer) Sends a heartbeat response to the player's client. Declaration public void SendHeartbeatResponse(IPlayer player) Parameters Type Name Description IPlayer player The player which to send the heartbeat response to. | Improve this Doc View Source SetCreatureDynamicWalkPlan(ICreature, ICreature, WalkStrategy) Re-sets a given creature's walk plan and kicks it off. Declaration public void SetCreatureDynamicWalkPlan(ICreature creature, ICreature targetCreature, WalkStrategy strategy = WalkStrategy.ConservativeRecalculation) Parameters Type Name Description ICreature creature The creature to reset the walk plan of. ICreature targetCreature The creature towards which the walk plan will be generated to. WalkStrategy strategy Optional. The strategy to follow in the plan. | Improve this Doc View Source SetCreatureStaticWalkPlan(ICreature, Direction[], WalkStrategy) Re-sets a given creature's walk plan and kicks it off. Declaration public void SetCreatureStaticWalkPlan(ICreature creature, Direction[] directions, WalkStrategy strategy = WalkStrategy.DoNotRecalculate) Parameters Type Name Description ICreature creature The creature to reset the walk plan of. Direction [] directions The directions for the new plan. WalkStrategy strategy Optional. The strategy to follow in the plan. | Improve this Doc View Source StartAsync(CancellationToken) Runs the main game processing thread which begins advancing time on the game engine. Declaration public Task StartAsync(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken A token to observe for cancellation. Returns Type Description System.Threading.Tasks.Task A System.Threading.Tasks.Task representing the asynchronous operation. | Improve this Doc View Source StopAsync(CancellationToken) Declaration public Task StopAsync(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task Implements IGame Microsoft.Extensions.Hosting.IHostedService IGameOperationsApi ICombatOperationsApi Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Handlers.ActionWithoutContentHandler.html": {
    "href": "code/Fibula.Mechanics.Handlers.ActionWithoutContentHandler.html",
    "title": "Class ActionWithoutContentHandler | Fibula MMO",
    "keywords": "Class ActionWithoutContentHandler Class that represents a request handler for actions with no content to be read, for the game server. Inheritance System.Object BaseRequestHandler GameHandler ActionWithoutContentHandler Implements IHandler Inherited Members GameHandler.Game BaseRequestHandler.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Handlers Assembly : Fibula.Mechanics.dll Syntax public class ActionWithoutContentHandler : GameHandler, IHandler Constructors | Improve this Doc View Source ActionWithoutContentHandler(ILogger, IGame, ICreatureFinder) Initializes a new instance of the ActionWithoutContentHandler class. Declaration public ActionWithoutContentHandler(ILogger logger, IGame gameInstance, ICreatureFinder creatureFinder) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. IGame gameInstance A reference to the game instance. ICreatureFinder creatureFinder A reference to the creature finder in use. Properties | Improve this Doc View Source CreatureFinder Gets the creature finder to use. Declaration public ICreatureFinder CreatureFinder { get; } Property Value Type Description ICreatureFinder Methods | Improve this Doc View Source HandleRequest(IIncomingPacket, IClient) Handles the contents of a network message. Declaration public override IEnumerable<IOutboundPacket> HandleRequest(IIncomingPacket incomingPacket, IClient client) Parameters Type Name Description IIncomingPacket incomingPacket The packet to handle. IClient client A reference to the client from where this request originated from, for context. Returns Type Description System.Collections.Generic.IEnumerable < IOutboundPacket > A collection of IOutboundPacket s that compose that synchronous response, if any. Overrides BaseRequestHandler.HandleRequest(IIncomingPacket, IClient) Implements IHandler Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Handlers.AttackHandler.html": {
    "href": "code/Fibula.Mechanics.Handlers.AttackHandler.html",
    "title": "Class AttackHandler | Fibula MMO",
    "keywords": "Class AttackHandler Class that represents a handler for attack requests. Inheritance System.Object BaseRequestHandler GameHandler AttackHandler Implements IHandler Inherited Members GameHandler.Game BaseRequestHandler.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Handlers Assembly : Fibula.Mechanics.dll Syntax public class AttackHandler : GameHandler, IHandler Constructors | Improve this Doc View Source AttackHandler(ILogger, IGame, ICreatureFinder) Initializes a new instance of the AttackHandler class. Declaration public AttackHandler(ILogger logger, IGame gameInstance, ICreatureFinder creatureFinder) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. IGame gameInstance A reference to the game instance. ICreatureFinder creatureFinder A reference to the creature finder in use. Properties | Improve this Doc View Source CreatureFinder Gets the creature finder to use. Declaration public ICreatureFinder CreatureFinder { get; } Property Value Type Description ICreatureFinder Methods | Improve this Doc View Source HandleRequest(IIncomingPacket, IClient) Handles the contents of a network message. Declaration public override IEnumerable<IOutboundPacket> HandleRequest(IIncomingPacket incomingPacket, IClient client) Parameters Type Name Description IIncomingPacket incomingPacket The packet to handle. IClient client A reference to the client from where this request originated from, for context. Returns Type Description System.Collections.Generic.IEnumerable < IOutboundPacket > A collection of IOutboundPacket s that compose that synchronous response, if any. Overrides BaseRequestHandler.HandleRequest(IIncomingPacket, IClient) Implements IHandler Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Handlers.AutoMoveHandler.html": {
    "href": "code/Fibula.Mechanics.Handlers.AutoMoveHandler.html",
    "title": "Class AutoMoveHandler | Fibula MMO",
    "keywords": "Class AutoMoveHandler Class that represents a handler for auto movement requests. Inheritance System.Object BaseRequestHandler GameHandler AutoMoveHandler Implements IHandler Inherited Members GameHandler.Game BaseRequestHandler.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Handlers Assembly : Fibula.Mechanics.dll Syntax public class AutoMoveHandler : GameHandler, IHandler Constructors | Improve this Doc View Source AutoMoveHandler(ILogger, IGame, ICreatureFinder) Initializes a new instance of the AutoMoveHandler class. Declaration public AutoMoveHandler(ILogger logger, IGame gameInstance, ICreatureFinder creatureFinder) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. IGame gameInstance A reference to the game instance. ICreatureFinder creatureFinder A reference to the creature finder in use. Properties | Improve this Doc View Source CreatureFinder Gets the creature finder to use. Declaration public ICreatureFinder CreatureFinder { get; } Property Value Type Description ICreatureFinder Methods | Improve this Doc View Source HandleRequest(IIncomingPacket, IClient) Handles the contents of a network message. Declaration public override IEnumerable<IOutboundPacket> HandleRequest(IIncomingPacket incomingPacket, IClient client) Parameters Type Name Description IIncomingPacket incomingPacket The packet to handle. IClient client A reference to the client from where this request originated from, for context. Returns Type Description System.Collections.Generic.IEnumerable < IOutboundPacket > A collection of IOutboundPacket s that compose that synchronous response, if any. Overrides BaseRequestHandler.HandleRequest(IIncomingPacket, IClient) Implements IHandler Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Handlers.BaseRequestHandler.html": {
    "href": "code/Fibula.Mechanics.Handlers.BaseRequestHandler.html",
    "title": "Class BaseRequestHandler | Fibula MMO",
    "keywords": "Class BaseRequestHandler Class that represents the base implementation for all request handlers in all protocols. Inheritance System.Object BaseRequestHandler DefaultRequestHandler GameHandler GatewayLogInHandler Implements IHandler Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Handlers Assembly : Fibula.Mechanics.dll Syntax public abstract class BaseRequestHandler : IHandler Constructors | Improve this Doc View Source BaseRequestHandler(ILogger) Initializes a new instance of the BaseRequestHandler class. Declaration protected BaseRequestHandler(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Properties | Improve this Doc View Source Logger Gets the reference to the logger in use. Declaration protected ILogger Logger { get; } Property Value Type Description Serilog.ILogger Methods | Improve this Doc View Source HandleRequest(IIncomingPacket, IClient) Handles the contents of a network message. Declaration public abstract IEnumerable<IOutboundPacket> HandleRequest(IIncomingPacket incomingPacket, IClient client) Parameters Type Name Description IIncomingPacket incomingPacket The packet to handle. IClient client A reference to the client from where this request originated from, for context. Returns Type Description System.Collections.Generic.IEnumerable < IOutboundPacket > A collection of IOutboundPacket s that compose that synchronous response, if any. Implements IHandler Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Handlers.DefaultRequestHandler.html": {
    "href": "code/Fibula.Mechanics.Handlers.DefaultRequestHandler.html",
    "title": "Class DefaultRequestHandler | Fibula MMO",
    "keywords": "Class DefaultRequestHandler Special kind of handler that is used as a fall back when no other handler is picked. Inheritance System.Object BaseRequestHandler DefaultRequestHandler Implements IHandler Inherited Members BaseRequestHandler.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Handlers Assembly : Fibula.Mechanics.dll Syntax public class DefaultRequestHandler : BaseRequestHandler, IHandler Constructors | Improve this Doc View Source DefaultRequestHandler(ILogger) Initializes a new instance of the DefaultRequestHandler class. Declaration public DefaultRequestHandler(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source HandleRequest(IIncomingPacket, IClient) Handles the contents of a network message. Declaration public override IEnumerable<IOutboundPacket> HandleRequest(IIncomingPacket incomingPacket, IClient client) Parameters Type Name Description IIncomingPacket incomingPacket The packet to handle. IClient client A reference to the client from where this request originated from, for context. Returns Type Description System.Collections.Generic.IEnumerable < IOutboundPacket > A collection of IOutboundPacket s that compose that synchronous response, if any. Overrides BaseRequestHandler.HandleRequest(IIncomingPacket, IClient) Implements IHandler Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Handlers.GameHandler.html": {
    "href": "code/Fibula.Mechanics.Handlers.GameHandler.html",
    "title": "Class GameHandler | Fibula MMO",
    "keywords": "Class GameHandler Class that represents a handler that exposes a reference to the game instance, for convenience. Inheritance System.Object BaseRequestHandler GameHandler ActionWithoutContentHandler AttackHandler AutoMoveHandler GameLogInHandler LookAtHandler ModesHandler SpeechHandler TurnOnDemandHandler WalkOnDemandHandler Implements IHandler Inherited Members BaseRequestHandler.Logger BaseRequestHandler.HandleRequest(IIncomingPacket, IClient) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Handlers Assembly : Fibula.Mechanics.dll Syntax public abstract class GameHandler : BaseRequestHandler, IHandler Constructors | Improve this Doc View Source GameHandler(ILogger, IGame) Initializes a new instance of the GameHandler class. Declaration protected GameHandler(ILogger logger, IGame game) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. IGame game A reference to the game instance. Properties | Improve this Doc View Source Game Gets the reference to the game instance. Declaration protected IGame Game { get; } Property Value Type Description IGame Implements IHandler Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Handlers.GameLogInHandler.html": {
    "href": "code/Fibula.Mechanics.Handlers.GameLogInHandler.html",
    "title": "Class GameLogInHandler | Fibula MMO",
    "keywords": "Class GameLogInHandler Class that represents a character log in request handler for the game server. Inheritance System.Object BaseRequestHandler GameHandler GameLogInHandler Implements IHandler Inherited Members GameHandler.Game BaseRequestHandler.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Handlers Assembly : Fibula.Mechanics.dll Syntax public class GameLogInHandler : GameHandler, IHandler Constructors | Improve this Doc View Source GameLogInHandler(IApplicationContext, ILogger, IGame) Initializes a new instance of the GameLogInHandler class. Declaration public GameLogInHandler(IApplicationContext applicationContext, ILogger logger, IGame gameInstance) Parameters Type Name Description IApplicationContext applicationContext A reference to the application context. Serilog.ILogger logger A reference to the logger to use in this handler. IGame gameInstance A reference to the game instance. Properties | Improve this Doc View Source ApplicationContext Gets a reference to the application context. Declaration public IApplicationContext ApplicationContext { get; } Property Value Type Description IApplicationContext Methods | Improve this Doc View Source HandleRequest(IIncomingPacket, IClient) Handles the contents of a network message. Declaration public override IEnumerable<IOutboundPacket> HandleRequest(IIncomingPacket incomingPacket, IClient client) Parameters Type Name Description IIncomingPacket incomingPacket The packet to handle. IClient client A reference to the client from where this request originated from, for context. Returns Type Description System.Collections.Generic.IEnumerable < IOutboundPacket > A collection of IOutboundPacket s that compose that synchronous response, if any. Overrides BaseRequestHandler.HandleRequest(IIncomingPacket, IClient) Implements IHandler Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Handlers.GatewayLogInHandler.html": {
    "href": "code/Fibula.Mechanics.Handlers.GatewayLogInHandler.html",
    "title": "Class GatewayLogInHandler | Fibula MMO",
    "keywords": "Class GatewayLogInHandler Class that represents a new connection request handler for the login server. Inheritance System.Object BaseRequestHandler GatewayLogInHandler Implements IHandler Inherited Members BaseRequestHandler.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Handlers Assembly : Fibula.Mechanics.dll Syntax public sealed class GatewayLogInHandler : BaseRequestHandler, IHandler Constructors | Improve this Doc View Source GatewayLogInHandler(ILogger, IApplicationContext) Initializes a new instance of the GatewayLogInHandler class. Declaration public GatewayLogInHandler(ILogger logger, IApplicationContext applicationContext) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. IApplicationContext applicationContext A reference to the application context. Properties | Improve this Doc View Source ApplicationContext Gets a reference to the application context. Declaration public IApplicationContext ApplicationContext { get; } Property Value Type Description IApplicationContext Methods | Improve this Doc View Source HandleRequest(IIncomingPacket, IClient) Handles the contents of a network message. Declaration public override IEnumerable<IOutboundPacket> HandleRequest(IIncomingPacket incomingPacket, IClient client) Parameters Type Name Description IIncomingPacket incomingPacket The packet to handle. IClient client A reference to the client from where this request originated from, for context. Returns Type Description System.Collections.Generic.IEnumerable < IOutboundPacket > A collection of IOutboundPacket s that compose that synchronous response, if any. Overrides BaseRequestHandler.HandleRequest(IIncomingPacket, IClient) Implements IHandler Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Handlers.html": {
    "href": "code/Fibula.Mechanics.Handlers.html",
    "title": "Namespace Fibula.Mechanics.Handlers | Fibula MMO",
    "keywords": "Namespace Fibula.Mechanics.Handlers Classes ActionWithoutContentHandler Class that represents a request handler for actions with no content to be read, for the game server. AttackHandler Class that represents a handler for attack requests. AutoMoveHandler Class that represents a handler for auto movement requests. BaseRequestHandler Class that represents the base implementation for all request handlers in all protocols. DefaultRequestHandler Special kind of handler that is used as a fall back when no other handler is picked. GameHandler Class that represents a handler that exposes a reference to the game instance, for convenience. GameLogInHandler Class that represents a character log in request handler for the game server. GatewayLogInHandler Class that represents a new connection request handler for the login server. LookAtHandler Class that represents a look at handler for the game server. ModesHandler Class that represents a handler for changing modes. SpeechHandler Class that represents a handler for a request to speak. TurnOnDemandHandler Abstract class that represents the player turning to a direction handler. WalkOnDemandHandler Abstract class that represents the base for all player walk handlers."
  },
  "code/Fibula.Mechanics.Handlers.LookAtHandler.html": {
    "href": "code/Fibula.Mechanics.Handlers.LookAtHandler.html",
    "title": "Class LookAtHandler | Fibula MMO",
    "keywords": "Class LookAtHandler Class that represents a look at handler for the game server. Inheritance System.Object BaseRequestHandler GameHandler LookAtHandler Implements IHandler Inherited Members GameHandler.Game BaseRequestHandler.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Handlers Assembly : Fibula.Mechanics.dll Syntax public class LookAtHandler : GameHandler, IHandler Constructors | Improve this Doc View Source LookAtHandler(ILogger, IGame, ICreatureFinder) Initializes a new instance of the LookAtHandler class. Declaration public LookAtHandler(ILogger logger, IGame gameInstance, ICreatureFinder creatureFinder) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. IGame gameInstance A reference to the game instance. ICreatureFinder creatureFinder A reference to the creature finder in use. Properties | Improve this Doc View Source CreatureFinder Gets the creature finder to use. Declaration public ICreatureFinder CreatureFinder { get; } Property Value Type Description ICreatureFinder Methods | Improve this Doc View Source HandleRequest(IIncomingPacket, IClient) Handles the contents of a network message. Declaration public override IEnumerable<IOutboundPacket> HandleRequest(IIncomingPacket incomingPacket, IClient client) Parameters Type Name Description IIncomingPacket incomingPacket The packet to handle. IClient client A reference to the client from where this request originated from, for context. Returns Type Description System.Collections.Generic.IEnumerable < IOutboundPacket > A collection of IOutboundPacket s that compose that synchronous response, if any. Overrides BaseRequestHandler.HandleRequest(IIncomingPacket, IClient) Implements IHandler Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Handlers.ModesHandler.html": {
    "href": "code/Fibula.Mechanics.Handlers.ModesHandler.html",
    "title": "Class ModesHandler | Fibula MMO",
    "keywords": "Class ModesHandler Class that represents a handler for changing modes. Inheritance System.Object BaseRequestHandler GameHandler ModesHandler Implements IHandler Inherited Members GameHandler.Game BaseRequestHandler.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Handlers Assembly : Fibula.Mechanics.dll Syntax public class ModesHandler : GameHandler, IHandler Constructors | Improve this Doc View Source ModesHandler(ILogger, IGame) Initializes a new instance of the ModesHandler class. Declaration public ModesHandler(ILogger logger, IGame gameInstance) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. IGame gameInstance A reference to the game instance. Methods | Improve this Doc View Source HandleRequest(IIncomingPacket, IClient) Handles the contents of a network message. Declaration public override IEnumerable<IOutboundPacket> HandleRequest(IIncomingPacket incomingPacket, IClient client) Parameters Type Name Description IIncomingPacket incomingPacket The packet to handle. IClient client A reference to the client from where this request originated from, for context. Returns Type Description System.Collections.Generic.IEnumerable < IOutboundPacket > A collection of IOutboundPacket s that compose that synchronous response, if any. Overrides BaseRequestHandler.HandleRequest(IIncomingPacket, IClient) Implements IHandler Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Handlers.SpeechHandler.html": {
    "href": "code/Fibula.Mechanics.Handlers.SpeechHandler.html",
    "title": "Class SpeechHandler | Fibula MMO",
    "keywords": "Class SpeechHandler Class that represents a handler for a request to speak. Inheritance System.Object BaseRequestHandler GameHandler SpeechHandler Implements IHandler Inherited Members GameHandler.Game BaseRequestHandler.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Handlers Assembly : Fibula.Mechanics.dll Syntax public class SpeechHandler : GameHandler, IHandler Constructors | Improve this Doc View Source SpeechHandler(ILogger, IGame) Initializes a new instance of the SpeechHandler class. Declaration public SpeechHandler(ILogger logger, IGame gameInstance) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. IGame gameInstance A reference to the game instance. Methods | Improve this Doc View Source HandleRequest(IIncomingPacket, IClient) Handles the contents of a network message. Declaration public override IEnumerable<IOutboundPacket> HandleRequest(IIncomingPacket incomingPacket, IClient client) Parameters Type Name Description IIncomingPacket incomingPacket The packet to handle. IClient client A reference to the client from where this request originated from, for context. Returns Type Description System.Collections.Generic.IEnumerable < IOutboundPacket > A collection of IOutboundPacket s that compose that synchronous response, if any. Overrides BaseRequestHandler.HandleRequest(IIncomingPacket, IClient) Implements IHandler Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Handlers.TurnOnDemandHandler.html": {
    "href": "code/Fibula.Mechanics.Handlers.TurnOnDemandHandler.html",
    "title": "Class TurnOnDemandHandler | Fibula MMO",
    "keywords": "Class TurnOnDemandHandler Abstract class that represents the player turning to a direction handler. Inheritance System.Object BaseRequestHandler GameHandler TurnOnDemandHandler Implements IHandler Inherited Members GameHandler.Game BaseRequestHandler.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Handlers Assembly : Fibula.Mechanics.dll Syntax public class TurnOnDemandHandler : GameHandler, IHandler Constructors | Improve this Doc View Source TurnOnDemandHandler(ILogger, IGame, ICreatureFinder) Initializes a new instance of the TurnOnDemandHandler class. Declaration public TurnOnDemandHandler(ILogger logger, IGame gameInstance, ICreatureFinder creatureFinder) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. IGame gameInstance A reference to the game instance. ICreatureFinder creatureFinder A reference to the creature finder in use. Properties | Improve this Doc View Source CreatureFinder Gets the creature finder to use. Declaration public ICreatureFinder CreatureFinder { get; } Property Value Type Description ICreatureFinder Methods | Improve this Doc View Source HandleRequest(IIncomingPacket, IClient) Handles the contents of a network message. Declaration public override IEnumerable<IOutboundPacket> HandleRequest(IIncomingPacket incomingPacket, IClient client) Parameters Type Name Description IIncomingPacket incomingPacket The packet to handle. IClient client A reference to the client from where this request originated from, for context. Returns Type Description System.Collections.Generic.IEnumerable < IOutboundPacket > A collection of IOutboundPacket s that compose that synchronous response, if any. Overrides BaseRequestHandler.HandleRequest(IIncomingPacket, IClient) Implements IHandler Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Handlers.WalkOnDemandHandler.html": {
    "href": "code/Fibula.Mechanics.Handlers.WalkOnDemandHandler.html",
    "title": "Class WalkOnDemandHandler | Fibula MMO",
    "keywords": "Class WalkOnDemandHandler Abstract class that represents the base for all player walk handlers. Inheritance System.Object BaseRequestHandler GameHandler WalkOnDemandHandler Implements IHandler Inherited Members GameHandler.Game BaseRequestHandler.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Handlers Assembly : Fibula.Mechanics.dll Syntax public class WalkOnDemandHandler : GameHandler, IHandler Constructors | Improve this Doc View Source WalkOnDemandHandler(ILogger, IGame, ICreatureFinder) Initializes a new instance of the WalkOnDemandHandler class. Declaration public WalkOnDemandHandler(ILogger logger, IGame gameInstance, ICreatureFinder creatureFinder) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. IGame gameInstance A reference to the game instance. ICreatureFinder creatureFinder A reference to the creature finder in use. Properties | Improve this Doc View Source CreatureFinder Gets the creature finder to use. Declaration public ICreatureFinder CreatureFinder { get; } Property Value Type Description ICreatureFinder Methods | Improve this Doc View Source HandleRequest(IIncomingPacket, IClient) Handles the contents of a network message. Declaration public override IEnumerable<IOutboundPacket> HandleRequest(IIncomingPacket incomingPacket, IClient client) Parameters Type Name Description IIncomingPacket incomingPacket The packet to handle. IClient client A reference to the client from where this request originated from, for context. Returns Type Description System.Collections.Generic.IEnumerable < IOutboundPacket > A collection of IOutboundPacket s that compose that synchronous response, if any. Overrides BaseRequestHandler.HandleRequest(IIncomingPacket, IClient) Implements IHandler Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.HandlerSelector.html": {
    "href": "code/Fibula.Mechanics.HandlerSelector.html",
    "title": "Class HandlerSelector | Fibula MMO",
    "keywords": "Class HandlerSelector Class that represents a handler selector for incoming packets. Inheritance System.Object HandlerSelector Implements IHandlerSelector Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics Assembly : Fibula.Mechanics.dll Syntax public class HandlerSelector : IHandlerSelector Constructors | Improve this Doc View Source HandlerSelector(ILogger) Initializes a new instance of the HandlerSelector class. Declaration public HandlerSelector(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source RegisterForPacketType(Type, IHandler) Registers a handler for a given packet type. Declaration public void RegisterForPacketType(Type packetType, IHandler handler) Parameters Type Name Description System.Type packetType The type of packet to register for. IHandler handler The handler to register. | Improve this Doc View Source SelectForPacket(IIncomingPacket) Returns the most appropriate handler for the specified packet type. Declaration public IHandler SelectForPacket(IIncomingPacket packet) Parameters Type Name Description IIncomingPacket packet The packet to select the handler for. Returns Type Description IHandler An instance of an IHandler implementaion. Implements IHandlerSelector Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.html": {
    "href": "code/Fibula.Mechanics.html",
    "title": "Namespace Fibula.Mechanics | Fibula MMO",
    "keywords": "Namespace Fibula.Mechanics Classes ContainerManager Class that represents a manager for all item container operations by creatures. Game Class that represents the game instance. HandlerSelector Class that represents a handler selector for incoming packets. WorldInformation Class that implements an IWorldInformation model."
  },
  "code/Fibula.Mechanics.Operations.Arguments.AutoAttackOperationCreationArguments.html": {
    "href": "code/Fibula.Mechanics.Operations.Arguments.AutoAttackOperationCreationArguments.html",
    "title": "Class AutoAttackOperationCreationArguments | Fibula MMO",
    "keywords": "Class AutoAttackOperationCreationArguments Class that represents creation arguments for a AutoAttackOperation . Inheritance System.Object AutoAttackOperationCreationArguments Implements IOperationCreationArguments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations.Arguments Assembly : Fibula.Mechanics.dll Syntax public class AutoAttackOperationCreationArguments : IOperationCreationArguments Constructors | Improve this Doc View Source AutoAttackOperationCreationArguments(ICombatant, ICombatant, TimeSpan) Initializes a new instance of the AutoAttackOperationCreationArguments class. Declaration public AutoAttackOperationCreationArguments(ICombatant attacker, ICombatant target, TimeSpan exhaustionCost) Parameters Type Name Description ICombatant attacker The attacker. ICombatant target The target. System.TimeSpan exhaustionCost Optional. The exhaustion cost of this operation. Properties | Improve this Doc View Source Attacker Gets the creature that's attacking. Declaration public ICombatant Attacker { get; } Property Value Type Description ICombatant | Improve this Doc View Source ExhaustionCost Gets the exhaustion cost if the attack is carried out. Declaration public TimeSpan ExhaustionCost { get; } Property Value Type Description System.TimeSpan | Improve this Doc View Source RequestorId Gets the id of the requestor of the operation. Declaration public uint RequestorId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source Target Gets the creature that's being attacked. Declaration public ICombatant Target { get; } Property Value Type Description ICombatant | Improve this Doc View Source Type Gets the type of operation being created. Declaration public OperationType Type { get; } Property Value Type Description OperationType Implements IOperationCreationArguments Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.Arguments.AutoAttackOrchestratorOperationCreationArguments.html": {
    "href": "code/Fibula.Mechanics.Operations.Arguments.AutoAttackOrchestratorOperationCreationArguments.html",
    "title": "Class AutoAttackOrchestratorOperationCreationArguments | Fibula MMO",
    "keywords": "Class AutoAttackOrchestratorOperationCreationArguments Class that represents creation arguments for a AutoAttackOrchestratorOperation . Inheritance System.Object AutoAttackOrchestratorOperationCreationArguments Implements IOperationCreationArguments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations.Arguments Assembly : Fibula.Mechanics.dll Syntax public class AutoAttackOrchestratorOperationCreationArguments : IOperationCreationArguments Constructors | Improve this Doc View Source AutoAttackOrchestratorOperationCreationArguments(ICombatant) Initializes a new instance of the AutoAttackOrchestratorOperationCreationArguments class. Declaration public AutoAttackOrchestratorOperationCreationArguments(ICombatant combatant) Parameters Type Name Description ICombatant combatant The combatant to trigger auto attacks for. Properties | Improve this Doc View Source Combatant Gets the creature that's auto attacking. Declaration public ICombatant Combatant { get; } Property Value Type Description ICombatant | Improve this Doc View Source RequestorId Gets the id of the requestor of the operation. Declaration public uint RequestorId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source Type Gets the type of operation being created. Declaration public OperationType Type { get; } Property Value Type Description OperationType Implements IOperationCreationArguments Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.Arguments.AutoWalkOrchestratorOperationCreationArguments.html": {
    "href": "code/Fibula.Mechanics.Operations.Arguments.AutoWalkOrchestratorOperationCreationArguments.html",
    "title": "Class AutoWalkOrchestratorOperationCreationArguments | Fibula MMO",
    "keywords": "Class AutoWalkOrchestratorOperationCreationArguments Class that represents creation arguments for a AutoWalkOrchestratorOperation . Inheritance System.Object AutoWalkOrchestratorOperationCreationArguments Implements IOperationCreationArguments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations.Arguments Assembly : Fibula.Mechanics.dll Syntax public class AutoWalkOrchestratorOperationCreationArguments : IOperationCreationArguments Constructors | Improve this Doc View Source AutoWalkOrchestratorOperationCreationArguments(ICreature) Initializes a new instance of the AutoWalkOrchestratorOperationCreationArguments class. Declaration public AutoWalkOrchestratorOperationCreationArguments(ICreature creature) Parameters Type Name Description ICreature creature The combatant to trigger auto attacks for. Properties | Improve this Doc View Source Creature Gets the creature that's auto walking. Declaration public ICreature Creature { get; } Property Value Type Description ICreature | Improve this Doc View Source RequestorId Gets the id of the requestor of the operation. Declaration public uint RequestorId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source Type Gets the type of operation being created. Declaration public OperationType Type { get; } Property Value Type Description OperationType Implements IOperationCreationArguments Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.Arguments.CancelOperationsOperationCreationArguments.html": {
    "href": "code/Fibula.Mechanics.Operations.Arguments.CancelOperationsOperationCreationArguments.html",
    "title": "Class CancelOperationsOperationCreationArguments | Fibula MMO",
    "keywords": "Class CancelOperationsOperationCreationArguments Class that represents creation arguments for a CancelOperationsOperation . Inheritance System.Object CancelOperationsOperationCreationArguments Implements IOperationCreationArguments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations.Arguments Assembly : Fibula.Mechanics.dll Syntax public class CancelOperationsOperationCreationArguments : IOperationCreationArguments Constructors | Improve this Doc View Source CancelOperationsOperationCreationArguments(ICreature, Type) Initializes a new instance of the CancelOperationsOperationCreationArguments class. Declaration public CancelOperationsOperationCreationArguments(ICreature creature, Type typeOfActionToCancel = null) Parameters Type Name Description ICreature creature The creature to cancel operations for. System.Type typeOfActionToCancel Optional. The specific type of operation to cancel. Properties | Improve this Doc View Source Creature Gets the creature cancelling actions for. Declaration public ICreature Creature { get; } Property Value Type Description ICreature | Improve this Doc View Source RequestorId Gets the id of the requestor of the operation. Declaration public uint RequestorId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source Type Gets the type of operation being created. Declaration public OperationType Type { get; } Property Value Type Description OperationType | Improve this Doc View Source TypeToCancel Gets the type of actions to cancel. Declaration public Type TypeToCancel { get; } Property Value Type Description System.Type Implements IOperationCreationArguments Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.Arguments.ChangeModesOperationCreationArguments.html": {
    "href": "code/Fibula.Mechanics.Operations.Arguments.ChangeModesOperationCreationArguments.html",
    "title": "Class ChangeModesOperationCreationArguments | Fibula MMO",
    "keywords": "Class ChangeModesOperationCreationArguments Class that represents creation arguments for a ChangeModesOperation . Inheritance System.Object ChangeModesOperationCreationArguments Implements IOperationCreationArguments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations.Arguments Assembly : Fibula.Mechanics.dll Syntax public class ChangeModesOperationCreationArguments : IOperationCreationArguments Constructors | Improve this Doc View Source ChangeModesOperationCreationArguments(UInt32, FightMode, ChaseMode, Boolean) Initializes a new instance of the ChangeModesOperationCreationArguments class. Declaration public ChangeModesOperationCreationArguments(uint requestorId, FightMode fightMode, ChaseMode chaseMode, bool safeModeOn) Parameters Type Name Description System.UInt32 requestorId The id of the creature requesting the operation. FightMode fightMode The fight mode to set. ChaseMode chaseMode The chase mode to set. System.Boolean safeModeOn The value to set for the safety lock. Properties | Improve this Doc View Source ChaseMode Gets the chase mode to set. Declaration public ChaseMode ChaseMode { get; } Property Value Type Description ChaseMode | Improve this Doc View Source FightMode Gets the fight mode to set. Declaration public FightMode FightMode { get; } Property Value Type Description FightMode | Improve this Doc View Source IsSafeModeOn Gets a value indicating whether the safety lock is on. Declaration public bool IsSafeModeOn { get; } Property Value Type Description System.Boolean | Improve this Doc View Source RequestorId Gets the id of the requestor of the operation. Declaration public uint RequestorId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source Type Gets the type of operation being created. Declaration public OperationType Type { get; } Property Value Type Description OperationType Implements IOperationCreationArguments Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.Arguments.CreateItemOperationCreationArguments.html": {
    "href": "code/Fibula.Mechanics.Operations.Arguments.CreateItemOperationCreationArguments.html",
    "title": "Class CreateItemOperationCreationArguments | Fibula MMO",
    "keywords": "Class CreateItemOperationCreationArguments Class that represents creation arguments for a CreateItemOperation . Inheritance System.Object CreateItemOperationCreationArguments Implements IOperationCreationArguments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations.Arguments Assembly : Fibula.Mechanics.dll Syntax public class CreateItemOperationCreationArguments : IOperationCreationArguments Constructors | Improve this Doc View Source CreateItemOperationCreationArguments(UInt32, UInt16, Location, IReadOnlyCollection<(ItemAttribute, IConvertible)>) Initializes a new instance of the CreateItemOperationCreationArguments class. Declaration public CreateItemOperationCreationArguments(uint requestorId, ushort itemTypeId, Location atLocation, IReadOnlyCollection<(ItemAttribute, IConvertible)> attributes) Parameters Type Name Description System.UInt32 requestorId The id of the creature requesting the operation. System.UInt16 itemTypeId The type id of the item to create. Location atLocation The location at which to create the item. System.Collections.Generic.IReadOnlyCollection < System.ValueTuple < ItemAttribute , System.IConvertible >> attributes The attributes to set on the new item. Properties | Improve this Doc View Source AtLocation Gets the location at which to create the item. Declaration public Location AtLocation { get; } Property Value Type Description Location | Improve this Doc View Source Attributes Gets the attributes to set in the new item. Declaration public IReadOnlyCollection<(ItemAttribute, IConvertible)> Attributes { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < System.ValueTuple < ItemAttribute , System.IConvertible >> | Improve this Doc View Source ItemTypeId Gets the type id of the item to create. Declaration public ushort ItemTypeId { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source RequestorId Gets the id of the requestor of the operation. Declaration public uint RequestorId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source Type Gets the type of operation being created. Declaration public OperationType Type { get; } Property Value Type Description OperationType Implements IOperationCreationArguments Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.Arguments.DeathOperationCreationArguments.html": {
    "href": "code/Fibula.Mechanics.Operations.Arguments.DeathOperationCreationArguments.html",
    "title": "Class DeathOperationCreationArguments | Fibula MMO",
    "keywords": "Class DeathOperationCreationArguments Class that represents creation arguments for a DeathOperation . Inheritance System.Object DeathOperationCreationArguments Implements IOperationCreationArguments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations.Arguments Assembly : Fibula.Mechanics.dll Syntax public class DeathOperationCreationArguments : IOperationCreationArguments Constructors | Improve this Doc View Source DeathOperationCreationArguments(UInt32, ICreature) Initializes a new instance of the DeathOperationCreationArguments class. Declaration public DeathOperationCreationArguments(uint requestorId, ICreature creature) Parameters Type Name Description System.UInt32 requestorId The id of the creature requesting the operation. ICreature creature The creature that died. Properties | Improve this Doc View Source Creature Gets the the creature that died. Declaration public ICreature Creature { get; } Property Value Type Description ICreature | Improve this Doc View Source RequestorId Gets the id of the requestor of the operation. Declaration public uint RequestorId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source Type Gets the type of operation being created. Declaration public OperationType Type { get; } Property Value Type Description OperationType Implements IOperationCreationArguments Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.Arguments.html": {
    "href": "code/Fibula.Mechanics.Operations.Arguments.html",
    "title": "Namespace Fibula.Mechanics.Operations.Arguments | Fibula MMO",
    "keywords": "Namespace Fibula.Mechanics.Operations.Arguments Classes AutoAttackOperationCreationArguments Class that represents creation arguments for a AutoAttackOperation . AutoAttackOrchestratorOperationCreationArguments Class that represents creation arguments for a AutoAttackOrchestratorOperation . AutoWalkOrchestratorOperationCreationArguments Class that represents creation arguments for a AutoWalkOrchestratorOperation . CancelOperationsOperationCreationArguments Class that represents creation arguments for a CancelOperationsOperation . ChangeModesOperationCreationArguments Class that represents creation arguments for a ChangeModesOperation . CreateItemOperationCreationArguments Class that represents creation arguments for a CreateItemOperation . DeathOperationCreationArguments Class that represents creation arguments for a DeathOperation . LogInOperationCreationArguments Class that represents creation arguments for a LogInOperation . LogOutOperationCreationArguments Class that represents creation arguments for a LogOutOperation . LookAtOperationCreationArguments Class that represents creation arguments for a LookAtOperation . MovementOperationCreationArguments Class that represents creation arguments for a MovementOperation . RestoreCombatCreditOperationCreationArguments Class that represents creation arguments for a RestoreCombatCreditOperation . SpeechOperationCreationArguments Class that represents creation arguments for a SpeechOperation . TurnToDirectionOperationCreationArguments Class that represents creation arguments for a TurnToDirectionOperation ."
  },
  "code/Fibula.Mechanics.Operations.Arguments.LogInOperationCreationArguments.html": {
    "href": "code/Fibula.Mechanics.Operations.Arguments.LogInOperationCreationArguments.html",
    "title": "Class LogInOperationCreationArguments | Fibula MMO",
    "keywords": "Class LogInOperationCreationArguments Class that represents creation arguments for a LogInOperation . Inheritance System.Object LogInOperationCreationArguments Implements IOperationCreationArguments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations.Arguments Assembly : Fibula.Mechanics.dll Syntax public class LogInOperationCreationArguments : IOperationCreationArguments Constructors | Improve this Doc View Source LogInOperationCreationArguments(IClient, ICreatureCreationMetadata, Byte, Byte) Initializes a new instance of the LogInOperationCreationArguments class. Declaration public LogInOperationCreationArguments(IClient client, ICreatureCreationMetadata metadata, byte currentWorldLightLevel, byte currentWorldLightColor) Parameters Type Name Description IClient client The client calling the log in operation. ICreatureCreationMetadata metadata The creation metadata for the player instance being created. System.Byte currentWorldLightLevel The initial world light level to send to the player on log in. System.Byte currentWorldLightColor The initial world light color to send to the player on log in. Properties | Improve this Doc View Source Client Gets the client requesting the log in. Declaration public IClient Client { get; } Property Value Type Description IClient | Improve this Doc View Source CreationMetadata Gets the creation metadata for the creature instance to create. Declaration public ICreatureCreationMetadata CreationMetadata { get; } Property Value Type Description ICreatureCreationMetadata | Improve this Doc View Source RequestorId Gets the id of the requestor of the operation. Declaration public uint RequestorId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source Type Gets the type of operation being created. Declaration public OperationType Type { get; } Property Value Type Description OperationType | Improve this Doc View Source WorldLightColor Gets the initial world light color to send to the player logging in. Declaration public byte WorldLightColor { get; } Property Value Type Description System.Byte | Improve this Doc View Source WorldLightLevel Gets the initial world light level to send to the player logging in. Declaration public byte WorldLightLevel { get; } Property Value Type Description System.Byte Implements IOperationCreationArguments Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.Arguments.LogOutOperationCreationArguments.html": {
    "href": "code/Fibula.Mechanics.Operations.Arguments.LogOutOperationCreationArguments.html",
    "title": "Class LogOutOperationCreationArguments | Fibula MMO",
    "keywords": "Class LogOutOperationCreationArguments Class that represents creation arguments for a LogOutOperation . Inheritance System.Object LogOutOperationCreationArguments Implements IOperationCreationArguments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations.Arguments Assembly : Fibula.Mechanics.dll Syntax public class LogOutOperationCreationArguments : IOperationCreationArguments Constructors | Improve this Doc View Source LogOutOperationCreationArguments(IPlayer) Initializes a new instance of the LogOutOperationCreationArguments class. Declaration public LogOutOperationCreationArguments(IPlayer player) Parameters Type Name Description IPlayer player The player attempting to log out. Properties | Improve this Doc View Source Player Gets the id of the player logging out. Declaration public IPlayer Player { get; } Property Value Type Description IPlayer | Improve this Doc View Source RequestorId Gets the id of the requestor of the operation. Declaration public uint RequestorId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source Type Gets the type of operation being created. Declaration public OperationType Type { get; } Property Value Type Description OperationType Implements IOperationCreationArguments Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.Arguments.LookAtOperationCreationArguments.html": {
    "href": "code/Fibula.Mechanics.Operations.Arguments.LookAtOperationCreationArguments.html",
    "title": "Class LookAtOperationCreationArguments | Fibula MMO",
    "keywords": "Class LookAtOperationCreationArguments Class that represents creation arguments for a LookAtOperation . Inheritance System.Object LookAtOperationCreationArguments Implements IOperationCreationArguments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations.Arguments Assembly : Fibula.Mechanics.dll Syntax public class LookAtOperationCreationArguments : IOperationCreationArguments Constructors | Improve this Doc View Source LookAtOperationCreationArguments(UInt16, Location, Byte, IPlayer) Initializes a new instance of the LookAtOperationCreationArguments class. Declaration public LookAtOperationCreationArguments(ushort thingId, Location location, byte stackPosition, IPlayer playerToDescribeFor) Parameters Type Name Description System.UInt16 thingId The id of the thing to describe. Location location The location where the thing to describe is. System.Byte stackPosition The position in the stack at the location of the thing to describe is. IPlayer playerToDescribeFor The player to describe the thing for. Properties | Improve this Doc View Source Location Gets the location where the thing to describe is. Declaration public Location Location { get; } Property Value Type Description Location | Improve this Doc View Source PlayerToDescribeFor Gets the player to describe for. Declaration public IPlayer PlayerToDescribeFor { get; } Property Value Type Description IPlayer | Improve this Doc View Source RequestorId Gets the id of the requestor of the operation. Declaration public uint RequestorId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source StackPosition Gets the position in the stack at the location of the thing to describe is. Declaration public byte StackPosition { get; } Property Value Type Description System.Byte | Improve this Doc View Source ThingId Gets the id of the thing to describe. Declaration public ushort ThingId { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source Type Gets the type of operation being created. Declaration public OperationType Type { get; } Property Value Type Description OperationType Implements IOperationCreationArguments Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.Arguments.MovementOperationCreationArguments.html": {
    "href": "code/Fibula.Mechanics.Operations.Arguments.MovementOperationCreationArguments.html",
    "title": "Class MovementOperationCreationArguments | Fibula MMO",
    "keywords": "Class MovementOperationCreationArguments Class that represents creation arguments for a MovementOperation . Inheritance System.Object MovementOperationCreationArguments Implements IOperationCreationArguments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations.Arguments Assembly : Fibula.Mechanics.dll Syntax public class MovementOperationCreationArguments : IOperationCreationArguments Constructors | Improve this Doc View Source MovementOperationCreationArguments(UInt32, UInt16, Location, Byte, UInt32, Location, UInt32, Byte) Initializes a new instance of the MovementOperationCreationArguments class. Declaration public MovementOperationCreationArguments(uint requestorId, ushort thingId, Location fromLocation, byte fromIndex, uint fromCreatureId, Location toLocation, uint toCreatureId, byte amount = 1) Parameters Type Name Description System.UInt32 requestorId The id of the creature requesting the movement. System.UInt16 thingId The id of the thing moving. Location fromLocation The location from which the movement is happening. System.Byte fromIndex The index within the location from which the movement is happening. System.UInt32 fromCreatureId The id of the creature from which the movement is happening, if applicable. Location toLocation The location to which the movement is happening. System.UInt32 toCreatureId The creature to which the movement is happening, if applicable. System.Byte amount Optional. The amount of the thing being moved. Properties | Improve this Doc View Source Amount Gets the amount of thing being moved. Declaration public byte Amount { get; } Property Value Type Description System.Byte | Improve this Doc View Source FromCreatureId Gets the id of the creature from which the movement is happening, if applicable. Declaration public uint FromCreatureId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source FromIndex Gets the index within the location from which the movement is happening. Declaration public byte FromIndex { get; } Property Value Type Description System.Byte | Improve this Doc View Source FromLocation Gets the location from which the movement is happening. Declaration public Location FromLocation { get; } Property Value Type Description Location | Improve this Doc View Source RequestorId Gets the id of the requestor of the operation. Declaration public uint RequestorId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source ThingId Gets the id of the thing moving. Declaration public ushort ThingId { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source ToCreatureId Gets the id of the creature to which the movement is happening, if applicable. Declaration public uint ToCreatureId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source ToLocation Gets the location to which the movement is happening. Declaration public Location ToLocation { get; } Property Value Type Description Location | Improve this Doc View Source Type Gets the type of operation being created. Declaration public OperationType Type { get; } Property Value Type Description OperationType Implements IOperationCreationArguments Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.Arguments.RestoreCombatCreditOperationCreationArguments.html": {
    "href": "code/Fibula.Mechanics.Operations.Arguments.RestoreCombatCreditOperationCreationArguments.html",
    "title": "Class RestoreCombatCreditOperationCreationArguments | Fibula MMO",
    "keywords": "Class RestoreCombatCreditOperationCreationArguments Class that represents creation arguments for a RestoreCombatCreditOperation . Inheritance System.Object RestoreCombatCreditOperationCreationArguments Implements IOperationCreationArguments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations.Arguments Assembly : Fibula.Mechanics.dll Syntax public class RestoreCombatCreditOperationCreationArguments : IOperationCreationArguments Constructors | Improve this Doc View Source RestoreCombatCreditOperationCreationArguments(ICombatant, CombatCreditType) Initializes a new instance of the RestoreCombatCreditOperationCreationArguments class. Declaration public RestoreCombatCreditOperationCreationArguments(ICombatant combatant, CombatCreditType combatCreditType) Parameters Type Name Description ICombatant combatant The combatant to which the credits should be restored. CombatCreditType combatCreditType The type of credit to restore. Properties | Improve this Doc View Source Combatant Gets the combatant to restore credits to. Declaration public ICombatant Combatant { get; } Property Value Type Description ICombatant | Improve this Doc View Source CreditType Gets the type of credit to restore. Declaration public CombatCreditType CreditType { get; } Property Value Type Description CombatCreditType | Improve this Doc View Source RequestorId Gets the id of the requestor of the operation. Declaration public uint RequestorId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source Type Gets the type of operation being created. Declaration public OperationType Type { get; } Property Value Type Description OperationType Implements IOperationCreationArguments Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.Arguments.SpeechOperationCreationArguments.html": {
    "href": "code/Fibula.Mechanics.Operations.Arguments.SpeechOperationCreationArguments.html",
    "title": "Class SpeechOperationCreationArguments | Fibula MMO",
    "keywords": "Class SpeechOperationCreationArguments Class that represents creation arguments for a SpeechOperation . Inheritance System.Object SpeechOperationCreationArguments Implements IOperationCreationArguments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations.Arguments Assembly : Fibula.Mechanics.dll Syntax public class SpeechOperationCreationArguments : IOperationCreationArguments Constructors | Improve this Doc View Source SpeechOperationCreationArguments(UInt32, SpeechType, ChatChannelType, String, String) Initializes a new instance of the SpeechOperationCreationArguments class. Declaration public SpeechOperationCreationArguments(uint requestorId, SpeechType speechType, ChatChannelType channelType, string content, string receiver) Parameters Type Name Description System.UInt32 requestorId The id of the creature requesting the operation. SpeechType speechType The type of speech. ChatChannelType channelType The type of channel that the speech is happens in. System.String content The content of the speech. System.String receiver The receiver of the speech, if applicable. Properties | Improve this Doc View Source ChannelType Gets the type of channel of the speech. Declaration public ChatChannelType ChannelType { get; } Property Value Type Description ChatChannelType | Improve this Doc View Source Content Gets the content of the speech. Declaration public string Content { get; } Property Value Type Description System.String | Improve this Doc View Source Receiver Gets the receiver of the speech, if any. Declaration public string Receiver { get; } Property Value Type Description System.String | Improve this Doc View Source RequestorId Gets the id of the requestor of the operation. Declaration public uint RequestorId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source SpeechType Gets the type of speech. Declaration public SpeechType SpeechType { get; } Property Value Type Description SpeechType | Improve this Doc View Source Type Gets the type of operation being created. Declaration public OperationType Type { get; } Property Value Type Description OperationType Implements IOperationCreationArguments Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.Arguments.TurnToDirectionOperationCreationArguments.html": {
    "href": "code/Fibula.Mechanics.Operations.Arguments.TurnToDirectionOperationCreationArguments.html",
    "title": "Class TurnToDirectionOperationCreationArguments | Fibula MMO",
    "keywords": "Class TurnToDirectionOperationCreationArguments Class that represents creation arguments for a TurnToDirectionOperation . Inheritance System.Object TurnToDirectionOperationCreationArguments Implements IOperationCreationArguments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations.Arguments Assembly : Fibula.Mechanics.dll Syntax public class TurnToDirectionOperationCreationArguments : IOperationCreationArguments Constructors | Improve this Doc View Source TurnToDirectionOperationCreationArguments(UInt32, ICreature, Direction) Initializes a new instance of the TurnToDirectionOperationCreationArguments class. Declaration public TurnToDirectionOperationCreationArguments(uint requestorId, ICreature creature, Direction direction) Parameters Type Name Description System.UInt32 requestorId The id of the creature requesting the operation. ICreature creature The creature that is turning. Direction direction The direction to which the creature is turning. Properties | Improve this Doc View Source Creature Gets the creature that is turning. Declaration public ICreature Creature { get; } Property Value Type Description ICreature | Improve this Doc View Source Direction Gets the direction to which the creature is turning. Declaration public Direction Direction { get; } Property Value Type Description Direction | Improve this Doc View Source RequestorId Gets the id of the requestor of the operation. Declaration public uint RequestorId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source Type Gets the type of operation being created. Declaration public OperationType Type { get; } Property Value Type Description OperationType Implements IOperationCreationArguments Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.AutoAttackOperation.html": {
    "href": "code/Fibula.Mechanics.Operations.AutoAttackOperation.html",
    "title": "Class AutoAttackOperation | Fibula MMO",
    "keywords": "Class AutoAttackOperation Class that represents an auto attack operation. Inheritance System.Object Priority_Queue.FastPriorityQueueNode Priority_Queue.StablePriorityQueueNode BaseEvent Operation AutoAttackOperation Implements System.IEquatable < BaseEvent > IOperation IEvent Inherited Members Operation.CanBeCancelled Operation.GetRequestor(ICreatureFinder) Operation.Execute(IEventContext) Operation.AddContentToContainerOrFallback(IOperationContext, IThingContainer, IThing, Byte, Boolean, ICreature) Operation.DispatchTextNotification(IOperationContext, String) BaseEvent.Cancelled BaseEvent.Expedited BaseEvent.EventId BaseEvent.RequestorId BaseEvent.RepeatAfter BaseEvent.HasCancellationHandler BaseEvent.HasExpeditionHandler BaseEvent.Cancel() BaseEvent.Expedite() BaseEvent.Equals(BaseEvent) Priority_Queue.StablePriorityQueueNode.InsertionIndex Priority_Queue.FastPriorityQueueNode.Priority Priority_Queue.FastPriorityQueueNode.QueueIndex System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations Assembly : Fibula.Mechanics.dll Syntax public class AutoAttackOperation : Operation, IEquatable<BaseEvent>, IOperation, IEvent Constructors | Improve this Doc View Source AutoAttackOperation(ICombatant, ICombatant, TimeSpan) Initializes a new instance of the AutoAttackOperation class. Declaration public AutoAttackOperation(ICombatant attacker, ICombatant target, TimeSpan exhaustionCost) Parameters Type Name Description ICombatant attacker The combatant that is attacking. ICombatant target The combatant that is the target. System.TimeSpan exhaustionCost Optional. The exhaustion cost of this operation. Properties | Improve this Doc View Source Attacker Gets the combatant that is attacking on this operation. Declaration public ICombatant Attacker { get; } Property Value Type Description ICombatant | Improve this Doc View Source ExhaustionCost Gets or sets the exhaustion cost time of this operation. Declaration public override TimeSpan ExhaustionCost { get; protected set; } Property Value Type Description System.TimeSpan Overrides Operation.ExhaustionCost | Improve this Doc View Source ExhaustionType Gets the type of exhaustion that this operation produces. Declaration public override ExhaustionType ExhaustionType { get; } Property Value Type Description ExhaustionType Overrides Operation.ExhaustionType | Improve this Doc View Source MaximumDamage Gets the absolute maximum damage that the combat operation can result in. Declaration public int MaximumDamage { get; } Property Value Type Description System.Int32 | Improve this Doc View Source MinimumDamage Gets the absolute minimum damage that the combat operation can result in. Declaration public int MinimumDamage { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Target Gets the combatant that is the target on this operation. Declaration public ICombatant Target { get; } Property Value Type Description ICombatant | Improve this Doc View Source TargetIdAtScheduleTime Gets the id of the target at schedule time. Declaration public uint TargetIdAtScheduleTime { get; } Property Value Type Description System.UInt32 Methods | Improve this Doc View Source Execute(IOperationContext) Executes the operation's logic. Declaration protected override void Execute(IOperationContext context) Parameters Type Name Description IOperationContext context A reference to the operation context. Overrides Operation.Execute(IOperationContext) Implements System.IEquatable<T> IOperation IEvent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.AutoAttackOrchestratorOperation.html": {
    "href": "code/Fibula.Mechanics.Operations.AutoAttackOrchestratorOperation.html",
    "title": "Class AutoAttackOrchestratorOperation | Fibula MMO",
    "keywords": "Class AutoAttackOrchestratorOperation Class that represents a combat operation that orchestrates auto attack operations. Inheritance System.Object Priority_Queue.FastPriorityQueueNode Priority_Queue.StablePriorityQueueNode BaseEvent Operation AutoAttackOrchestratorOperation Implements System.IEquatable < BaseEvent > IOperation IEvent Inherited Members Operation.CanBeCancelled Operation.GetRequestor(ICreatureFinder) Operation.Execute(IEventContext) Operation.AddContentToContainerOrFallback(IOperationContext, IThingContainer, IThing, Byte, Boolean, ICreature) Operation.DispatchTextNotification(IOperationContext, String) BaseEvent.Cancelled BaseEvent.Expedited BaseEvent.EventId BaseEvent.RequestorId BaseEvent.RepeatAfter BaseEvent.HasCancellationHandler BaseEvent.HasExpeditionHandler BaseEvent.Cancel() BaseEvent.Expedite() BaseEvent.Equals(BaseEvent) Priority_Queue.StablePriorityQueueNode.InsertionIndex Priority_Queue.FastPriorityQueueNode.Priority Priority_Queue.FastPriorityQueueNode.QueueIndex System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations Assembly : Fibula.Mechanics.dll Syntax public class AutoAttackOrchestratorOperation : Operation, IEquatable<BaseEvent>, IOperation, IEvent Constructors | Improve this Doc View Source AutoAttackOrchestratorOperation(ICombatant) Initializes a new instance of the AutoAttackOrchestratorOperation class. Declaration public AutoAttackOrchestratorOperation(ICombatant attacker) Parameters Type Name Description ICombatant attacker The combatant that is attacking. Properties | Improve this Doc View Source Attacker Gets the combatant that is attacking on this operation. Declaration public ICombatant Attacker { get; } Property Value Type Description ICombatant | Improve this Doc View Source ExhaustionCost Gets or sets the exhaustion cost time of this operation. Declaration public override TimeSpan ExhaustionCost { get; protected set; } Property Value Type Description System.TimeSpan Overrides Operation.ExhaustionCost | Improve this Doc View Source ExhaustionType Gets the type of exhaustion that this operation produces. Declaration public override ExhaustionType ExhaustionType { get; } Property Value Type Description ExhaustionType Overrides Operation.ExhaustionType Methods | Improve this Doc View Source Execute(IOperationContext) Executes the operation's logic. Declaration protected override void Execute(IOperationContext context) Parameters Type Name Description IOperationContext context A reference to the operation context. Overrides Operation.Execute(IOperationContext) Implements System.IEquatable<T> IOperation IEvent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.AutoWalkOrchestratorOperation.html": {
    "href": "code/Fibula.Mechanics.Operations.AutoWalkOrchestratorOperation.html",
    "title": "Class AutoWalkOrchestratorOperation | Fibula MMO",
    "keywords": "Class AutoWalkOrchestratorOperation Class that represents an operation that orchestrates auto walk operations. Inheritance System.Object Priority_Queue.FastPriorityQueueNode Priority_Queue.StablePriorityQueueNode BaseEvent Operation AutoWalkOrchestratorOperation Implements System.IEquatable < BaseEvent > IOperation IEvent Inherited Members Operation.CanBeCancelled Operation.GetRequestor(ICreatureFinder) Operation.Execute(IEventContext) Operation.AddContentToContainerOrFallback(IOperationContext, IThingContainer, IThing, Byte, Boolean, ICreature) Operation.DispatchTextNotification(IOperationContext, String) BaseEvent.Cancelled BaseEvent.Expedited BaseEvent.EventId BaseEvent.RequestorId BaseEvent.RepeatAfter BaseEvent.HasCancellationHandler BaseEvent.HasExpeditionHandler BaseEvent.Cancel() BaseEvent.Expedite() BaseEvent.Equals(BaseEvent) Priority_Queue.StablePriorityQueueNode.InsertionIndex Priority_Queue.FastPriorityQueueNode.Priority Priority_Queue.FastPriorityQueueNode.QueueIndex System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations Assembly : Fibula.Mechanics.dll Syntax public class AutoWalkOrchestratorOperation : Operation, IEquatable<BaseEvent>, IOperation, IEvent Constructors | Improve this Doc View Source AutoWalkOrchestratorOperation(ICreature) Initializes a new instance of the AutoWalkOrchestratorOperation class. Declaration public AutoWalkOrchestratorOperation(ICreature creature) Parameters Type Name Description ICreature creature The creature that is auto walking. Properties | Improve this Doc View Source Creature Gets the combatant that is attacking on this operation. Declaration public ICreature Creature { get; } Property Value Type Description ICreature | Improve this Doc View Source ExhaustionCost Gets or sets the exhaustion cost time of this operation. Declaration public override TimeSpan ExhaustionCost { get; protected set; } Property Value Type Description System.TimeSpan Overrides Operation.ExhaustionCost | Improve this Doc View Source ExhaustionType Gets the type of exhaustion that this operation produces. Declaration public override ExhaustionType ExhaustionType { get; } Property Value Type Description ExhaustionType Overrides Operation.ExhaustionType Methods | Improve this Doc View Source Execute(IOperationContext) Executes the operation's logic. Declaration protected override void Execute(IOperationContext context) Parameters Type Name Description IOperationContext context A reference to the operation context. Overrides Operation.Execute(IOperationContext) Implements System.IEquatable<T> IOperation IEvent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.BaseEnvironmentOperation.html": {
    "href": "code/Fibula.Mechanics.Operations.BaseEnvironmentOperation.html",
    "title": "Class BaseEnvironmentOperation | Fibula MMO",
    "keywords": "Class BaseEnvironmentOperation Class that represents a base environment operation. Inheritance System.Object Priority_Queue.FastPriorityQueueNode Priority_Queue.StablePriorityQueueNode BaseEvent Operation ElevatedOperation BaseEnvironmentOperation CancelOperationsOperation CreateItemOperation DeathOperation LogInOperation LogOutOperation Implements System.IEquatable < BaseEvent > IElevatedOperation IOperation IEvent Inherited Members ElevatedOperation.Execute(IOperationContext) ElevatedOperation.Execute(IElevatedOperationContext) Operation.CanBeCancelled Operation.ExhaustionType Operation.GetRequestor(ICreatureFinder) Operation.Execute(IEventContext) Operation.AddContentToContainerOrFallback(IOperationContext, IThingContainer, IThing, Byte, Boolean, ICreature) Operation.DispatchTextNotification(IOperationContext, String) BaseEvent.Cancelled BaseEvent.Expedited BaseEvent.EventId BaseEvent.RequestorId BaseEvent.RepeatAfter BaseEvent.HasCancellationHandler BaseEvent.HasExpeditionHandler BaseEvent.Cancel() BaseEvent.Expedite() BaseEvent.Equals(BaseEvent) Priority_Queue.StablePriorityQueueNode.InsertionIndex Priority_Queue.FastPriorityQueueNode.Priority Priority_Queue.FastPriorityQueueNode.QueueIndex System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations Assembly : Fibula.Mechanics.dll Syntax public abstract class BaseEnvironmentOperation : ElevatedOperation, IEquatable<BaseEvent>, IElevatedOperation, IOperation, IEvent Constructors | Improve this Doc View Source BaseEnvironmentOperation(UInt32, Nullable<TimeSpan>) Initializes a new instance of the BaseEnvironmentOperation class. Declaration public BaseEnvironmentOperation(uint requestorId, TimeSpan? actionExhaustionCost = default(TimeSpan? )) Parameters Type Name Description System.UInt32 requestorId The id of the creature requesting the movement. System.Nullable < System.TimeSpan > actionExhaustionCost Optional. The cost of this operation. Defaults to Fibula.Mechanics.Operations.BaseEnvironmentOperation.DefaultExhaustionCost . Properties | Improve this Doc View Source ExhaustionCost Gets or sets the exhaustion cost time of this operation. Declaration public override TimeSpan ExhaustionCost { get; protected set; } Property Value Type Description System.TimeSpan Overrides Operation.ExhaustionCost Methods | Improve this Doc View Source PlaceCreature(IElevatedOperationContext, ITile, ICreature) Attempts to place a creature on the map. Declaration protected bool PlaceCreature(IElevatedOperationContext context, ITile targetTile, ICreature creature) Parameters Type Name Description IElevatedOperationContext context A reference to the operation context. ITile targetTile The tile to place the creature at. ICreature creature The creature to place. Returns Type Description System.Boolean True if the creature is successfully added to the map, false otherwise. | Improve this Doc View Source RemoveCreature(IElevatedOperationContext, ICreature) Attempts to remove a creature from the map. Declaration protected bool RemoveCreature(IElevatedOperationContext context, ICreature creature) Parameters Type Name Description IElevatedOperationContext context A reference to the operation context. ICreature creature The creature to remove. Returns Type Description System.Boolean True if the creature is successfully removed from the map, false otherwise. Implements System.IEquatable<T> IElevatedOperation IOperation IEvent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.CancelOperationsOperation.html": {
    "href": "code/Fibula.Mechanics.Operations.CancelOperationsOperation.html",
    "title": "Class CancelOperationsOperation | Fibula MMO",
    "keywords": "Class CancelOperationsOperation Class that represents an operation that cancels other operations. Inheritance System.Object Priority_Queue.FastPriorityQueueNode Priority_Queue.StablePriorityQueueNode BaseEvent Operation ElevatedOperation BaseEnvironmentOperation CancelOperationsOperation Implements System.IEquatable < BaseEvent > IElevatedOperation IOperation IEvent Inherited Members BaseEnvironmentOperation.ExhaustionCost BaseEnvironmentOperation.PlaceCreature(IElevatedOperationContext, ITile, ICreature) BaseEnvironmentOperation.RemoveCreature(IElevatedOperationContext, ICreature) ElevatedOperation.Execute(IOperationContext) Operation.CanBeCancelled Operation.GetRequestor(ICreatureFinder) Operation.Execute(IEventContext) Operation.AddContentToContainerOrFallback(IOperationContext, IThingContainer, IThing, Byte, Boolean, ICreature) Operation.DispatchTextNotification(IOperationContext, String) BaseEvent.Cancelled BaseEvent.Expedited BaseEvent.EventId BaseEvent.RequestorId BaseEvent.RepeatAfter BaseEvent.HasCancellationHandler BaseEvent.HasExpeditionHandler BaseEvent.Cancel() BaseEvent.Expedite() BaseEvent.Equals(BaseEvent) Priority_Queue.StablePriorityQueueNode.InsertionIndex Priority_Queue.FastPriorityQueueNode.Priority Priority_Queue.FastPriorityQueueNode.QueueIndex System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations Assembly : Fibula.Mechanics.dll Syntax public class CancelOperationsOperation : BaseEnvironmentOperation, IEquatable<BaseEvent>, IElevatedOperation, IOperation, IEvent Constructors | Improve this Doc View Source CancelOperationsOperation(UInt32, ICreature, Type) Initializes a new instance of the CancelOperationsOperation class. Declaration public CancelOperationsOperation(uint requestorId, ICreature creature, Type typeToCancel = null) Parameters Type Name Description System.UInt32 requestorId The id of the creature requesting the cancellation. ICreature creature The creature who's actions are being cancelled. System.Type typeToCancel Optional. The specific type of operation to cancel. Properties | Improve this Doc View Source Creature Gets the creature who's actions are being cancelled. Declaration public ICreature Creature { get; } Property Value Type Description ICreature | Improve this Doc View Source ExhaustionType Gets the type of exhaustion that this operation produces. Declaration public override ExhaustionType ExhaustionType { get; } Property Value Type Description ExhaustionType Overrides Operation.ExhaustionType | Improve this Doc View Source TypeToCancel Gets the type of operation to cancel. Declaration public Type TypeToCancel { get; } Property Value Type Description System.Type Methods | Improve this Doc View Source Execute(IElevatedOperationContext) Executes the operation's logic. Declaration protected override void Execute(IElevatedOperationContext context) Parameters Type Name Description IElevatedOperationContext context A reference to the operation context. Overrides ElevatedOperation.Execute(IElevatedOperationContext) Implements System.IEquatable<T> IElevatedOperation IOperation IEvent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.ChangeModesOperation.html": {
    "href": "code/Fibula.Mechanics.Operations.ChangeModesOperation.html",
    "title": "Class ChangeModesOperation | Fibula MMO",
    "keywords": "Class ChangeModesOperation Class that represents a change modes operation. Inheritance System.Object Priority_Queue.FastPriorityQueueNode Priority_Queue.StablePriorityQueueNode BaseEvent Operation ChangeModesOperation Implements System.IEquatable < BaseEvent > IOperation IEvent Inherited Members Operation.CanBeCancelled Operation.GetRequestor(ICreatureFinder) Operation.Execute(IEventContext) Operation.AddContentToContainerOrFallback(IOperationContext, IThingContainer, IThing, Byte, Boolean, ICreature) Operation.DispatchTextNotification(IOperationContext, String) BaseEvent.Cancelled BaseEvent.Expedited BaseEvent.EventId BaseEvent.RequestorId BaseEvent.RepeatAfter BaseEvent.HasCancellationHandler BaseEvent.HasExpeditionHandler BaseEvent.Cancel() BaseEvent.Expedite() BaseEvent.Equals(BaseEvent) Priority_Queue.StablePriorityQueueNode.InsertionIndex Priority_Queue.FastPriorityQueueNode.Priority Priority_Queue.FastPriorityQueueNode.QueueIndex System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations Assembly : Fibula.Mechanics.dll Syntax public class ChangeModesOperation : Operation, IEquatable<BaseEvent>, IOperation, IEvent Constructors | Improve this Doc View Source ChangeModesOperation(UInt32, FightMode, ChaseMode, Boolean) Initializes a new instance of the ChangeModesOperation class. Declaration public ChangeModesOperation(uint requestorId, FightMode fightMode, ChaseMode chaseMode, bool safeModeOn) Parameters Type Name Description System.UInt32 requestorId The id of the creature setting the modes. FightMode fightMode The fight mode to set. ChaseMode chaseMode The chase mode to set. System.Boolean safeModeOn A value indicating whether the safety mode is on. Properties | Improve this Doc View Source ChaseMode Gets the chase mode to set. Declaration public ChaseMode ChaseMode { get; } Property Value Type Description ChaseMode | Improve this Doc View Source ExhaustionCost Gets or sets the exhaustion cost time of this operation. Declaration public override TimeSpan ExhaustionCost { get; protected set; } Property Value Type Description System.TimeSpan Overrides Operation.ExhaustionCost | Improve this Doc View Source ExhaustionType Gets the type of exhaustion that this operation produces. Declaration public override ExhaustionType ExhaustionType { get; } Property Value Type Description ExhaustionType Overrides Operation.ExhaustionType | Improve this Doc View Source FightMode Gets the fight mode to set. Declaration public FightMode FightMode { get; } Property Value Type Description FightMode | Improve this Doc View Source IsSafeModeOn Gets a value indicating whether the safety mode should be set to on. Declaration public bool IsSafeModeOn { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Execute(IOperationContext) Executes the operation's logic. Declaration protected override void Execute(IOperationContext context) Parameters Type Name Description IOperationContext context A reference to the operation context. Overrides Operation.Execute(IOperationContext) Implements System.IEquatable<T> IOperation IEvent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.CreateItemOperation.html": {
    "href": "code/Fibula.Mechanics.Operations.CreateItemOperation.html",
    "title": "Class CreateItemOperation | Fibula MMO",
    "keywords": "Class CreateItemOperation Class that represents an event for an item creation. Inheritance System.Object Priority_Queue.FastPriorityQueueNode Priority_Queue.StablePriorityQueueNode BaseEvent Operation ElevatedOperation BaseEnvironmentOperation CreateItemOperation Implements System.IEquatable < BaseEvent > IElevatedOperation IOperation IEvent Inherited Members BaseEnvironmentOperation.PlaceCreature(IElevatedOperationContext, ITile, ICreature) BaseEnvironmentOperation.RemoveCreature(IElevatedOperationContext, ICreature) ElevatedOperation.Execute(IOperationContext) Operation.CanBeCancelled Operation.GetRequestor(ICreatureFinder) Operation.Execute(IEventContext) Operation.AddContentToContainerOrFallback(IOperationContext, IThingContainer, IThing, Byte, Boolean, ICreature) Operation.DispatchTextNotification(IOperationContext, String) BaseEvent.Cancelled BaseEvent.Expedited BaseEvent.EventId BaseEvent.RequestorId BaseEvent.RepeatAfter BaseEvent.HasCancellationHandler BaseEvent.HasExpeditionHandler BaseEvent.Cancel() BaseEvent.Expedite() BaseEvent.Equals(BaseEvent) Priority_Queue.StablePriorityQueueNode.InsertionIndex Priority_Queue.FastPriorityQueueNode.Priority Priority_Queue.FastPriorityQueueNode.QueueIndex System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations Assembly : Fibula.Mechanics.dll Syntax public class CreateItemOperation : BaseEnvironmentOperation, IEquatable<BaseEvent>, IElevatedOperation, IOperation, IEvent Constructors | Improve this Doc View Source CreateItemOperation(UInt32, UInt16, Location, IReadOnlyCollection<(ItemAttribute, IConvertible)>) Initializes a new instance of the CreateItemOperation class. Declaration public CreateItemOperation(uint requestorId, ushort itemTypeId, Location atLocation, IReadOnlyCollection<(ItemAttribute, IConvertible)> attributes) Parameters Type Name Description System.UInt32 requestorId The id of the creature requesting the use. System.UInt16 itemTypeId The type id of the item being created. Location atLocation The location from which the item is being created. System.Collections.Generic.IReadOnlyCollection < System.ValueTuple < ItemAttribute , System.IConvertible >> attributes The attributes to set in the item. Properties | Improve this Doc View Source AtLocation Gets the location at which to create the item. Declaration public Location AtLocation { get; } Property Value Type Description Location | Improve this Doc View Source ExhaustionCost Gets or sets the exhaustion cost time of this operation. Declaration public override TimeSpan ExhaustionCost { get; protected set; } Property Value Type Description System.TimeSpan Overrides BaseEnvironmentOperation.ExhaustionCost | Improve this Doc View Source ExhaustionType Gets the type of exhaustion that this operation produces. Declaration public override ExhaustionType ExhaustionType { get; } Property Value Type Description ExhaustionType Overrides Operation.ExhaustionType | Improve this Doc View Source TypeId Gets the type id of the item to create. Declaration public ushort TypeId { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source WithAttributes Gets or sets the attributes to set in the item to create. Declaration public IReadOnlyCollection<(ItemAttribute, IConvertible)> WithAttributes { get; set; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < System.ValueTuple < ItemAttribute , System.IConvertible >> Methods | Improve this Doc View Source Execute(IElevatedOperationContext) Executes the operation's logic. Declaration protected override void Execute(IElevatedOperationContext context) Parameters Type Name Description IElevatedOperationContext context A reference to the operation context. Overrides ElevatedOperation.Execute(IElevatedOperationContext) Implements System.IEquatable<T> IElevatedOperation IOperation IEvent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.DeathOperation.html": {
    "href": "code/Fibula.Mechanics.Operations.DeathOperation.html",
    "title": "Class DeathOperation | Fibula MMO",
    "keywords": "Class DeathOperation Class that represents an operation for a creature's death. Inheritance System.Object Priority_Queue.FastPriorityQueueNode Priority_Queue.StablePriorityQueueNode BaseEvent Operation ElevatedOperation BaseEnvironmentOperation DeathOperation Implements System.IEquatable < BaseEvent > IElevatedOperation IOperation IEvent Inherited Members BaseEnvironmentOperation.PlaceCreature(IElevatedOperationContext, ITile, ICreature) BaseEnvironmentOperation.RemoveCreature(IElevatedOperationContext, ICreature) ElevatedOperation.Execute(IOperationContext) Operation.CanBeCancelled Operation.GetRequestor(ICreatureFinder) Operation.Execute(IEventContext) Operation.AddContentToContainerOrFallback(IOperationContext, IThingContainer, IThing, Byte, Boolean, ICreature) Operation.DispatchTextNotification(IOperationContext, String) BaseEvent.Cancelled BaseEvent.Expedited BaseEvent.EventId BaseEvent.RequestorId BaseEvent.RepeatAfter BaseEvent.HasCancellationHandler BaseEvent.HasExpeditionHandler BaseEvent.Cancel() BaseEvent.Expedite() BaseEvent.Equals(BaseEvent) Priority_Queue.StablePriorityQueueNode.InsertionIndex Priority_Queue.FastPriorityQueueNode.Priority Priority_Queue.FastPriorityQueueNode.QueueIndex System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations Assembly : Fibula.Mechanics.dll Syntax public class DeathOperation : BaseEnvironmentOperation, IEquatable<BaseEvent>, IElevatedOperation, IOperation, IEvent Constructors | Improve this Doc View Source DeathOperation(UInt32, ICreature) Initializes a new instance of the DeathOperation class. Declaration public DeathOperation(uint requestorId, ICreature creature) Parameters Type Name Description System.UInt32 requestorId The id of the creature requesting the operation. ICreature creature The creature that died. Properties | Improve this Doc View Source Creature Gets the creature that died. Declaration public ICreature Creature { get; } Property Value Type Description ICreature | Improve this Doc View Source ExhaustionCost Gets or sets the exhaustion cost time of this operation. Declaration public override TimeSpan ExhaustionCost { get; protected set; } Property Value Type Description System.TimeSpan Overrides BaseEnvironmentOperation.ExhaustionCost | Improve this Doc View Source ExhaustionType Gets the type of exhaustion that this operation produces. Declaration public override ExhaustionType ExhaustionType { get; } Property Value Type Description ExhaustionType Overrides Operation.ExhaustionType Methods | Improve this Doc View Source Execute(IElevatedOperationContext) Executes the operation's logic. Declaration protected override void Execute(IElevatedOperationContext context) Parameters Type Name Description IElevatedOperationContext context A reference to the operation context. Overrides ElevatedOperation.Execute(IElevatedOperationContext) Implements System.IEquatable<T> IElevatedOperation IOperation IEvent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.ElevatedOperation.html": {
    "href": "code/Fibula.Mechanics.Operations.ElevatedOperation.html",
    "title": "Class ElevatedOperation | Fibula MMO",
    "keywords": "Class ElevatedOperation Class that represents an elevated base between game operations, for which the context changes. Inheritance System.Object Priority_Queue.FastPriorityQueueNode Priority_Queue.StablePriorityQueueNode BaseEvent Operation ElevatedOperation BaseEnvironmentOperation Implements System.IEquatable < BaseEvent > IElevatedOperation IOperation IEvent Inherited Members Operation.CanBeCancelled Operation.ExhaustionType Operation.ExhaustionCost Operation.GetRequestor(ICreatureFinder) Operation.Execute(IEventContext) Operation.AddContentToContainerOrFallback(IOperationContext, IThingContainer, IThing, Byte, Boolean, ICreature) Operation.DispatchTextNotification(IOperationContext, String) BaseEvent.Cancelled BaseEvent.Expedited BaseEvent.EventId BaseEvent.RequestorId BaseEvent.RepeatAfter BaseEvent.HasCancellationHandler BaseEvent.HasExpeditionHandler BaseEvent.Cancel() BaseEvent.Expedite() BaseEvent.Equals(BaseEvent) Priority_Queue.StablePriorityQueueNode.InsertionIndex Priority_Queue.FastPriorityQueueNode.Priority Priority_Queue.FastPriorityQueueNode.QueueIndex System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations Assembly : Fibula.Mechanics.dll Syntax public abstract class ElevatedOperation : Operation, IEquatable<BaseEvent>, IElevatedOperation, IOperation, IEvent Constructors | Improve this Doc View Source ElevatedOperation(UInt32) Initializes a new instance of the ElevatedOperation class. Declaration protected ElevatedOperation(uint requestorId) Parameters Type Name Description System.UInt32 requestorId The id of the creature requesting the movement. Methods | Improve this Doc View Source Execute(IElevatedOperationContext) Executes the operation's logic. Declaration protected abstract void Execute(IElevatedOperationContext context) Parameters Type Name Description IElevatedOperationContext context The execution context for this operation. | Improve this Doc View Source Execute(IOperationContext) Executes the operation's logic. Declaration protected override void Execute(IOperationContext context) Parameters Type Name Description IOperationContext context The execution context for this operation. Overrides Operation.Execute(IOperationContext) Implements System.IEquatable<T> IElevatedOperation IOperation IEvent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.ElevatedOperationContext.html": {
    "href": "code/Fibula.Mechanics.Operations.ElevatedOperationContext.html",
    "title": "Class ElevatedOperationContext | Fibula MMO",
    "keywords": "Class ElevatedOperationContext Class that represents an elevated context for operations. Inheritance System.Object EventContext OperationContext ElevatedOperationContext Implements IElevatedOperationContext IOperationContext IEventContext Inherited Members OperationContext.MapDescriptor OperationContext.Map OperationContext.CreatureFinder OperationContext.ItemFactory OperationContext.CreatureFactory OperationContext.OperationFactory OperationContext.ContainerManager OperationContext.GameApi OperationContext.CombatApi OperationContext.PathFinder OperationContext.PredefinedItemSet OperationContext.Scheduler EventContext.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations Assembly : Fibula.Mechanics.dll Syntax public class ElevatedOperationContext : OperationContext, IElevatedOperationContext, IOperationContext, IEventContext Constructors | Improve this Doc View Source ElevatedOperationContext(ILogger, IMapDescriptor, IMap, ICreatureManager, IItemFactory, ICreatureFactory, IOperationFactory, IContainerManager, IGameOperationsApi, ICombatOperationsApi, IPathFinder, IPredefinedItemSet, IScheduler) Initializes a new instance of the ElevatedOperationContext class. Declaration public ElevatedOperationContext(ILogger logger, IMapDescriptor mapDescriptor, IMap map, ICreatureManager creatureManager, IItemFactory itemFactory, ICreatureFactory creatureFactory, IOperationFactory operationFactory, IContainerManager containerManager, IGameOperationsApi gameOperationsApi, ICombatOperationsApi combatOperationsApi, IPathFinder pathFinderAlgo, IPredefinedItemSet predefinedItemSet, IScheduler scheduler) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. IMapDescriptor mapDescriptor A reference to the map descriptor in use. IMap map A reference to the map. ICreatureManager creatureManager A reference to the creature manager in use. IItemFactory itemFactory A reference to the item factory in use. ICreatureFactory creatureFactory A reference to the creature factory in use. IOperationFactory operationFactory A reference to the operation factory in use. IContainerManager containerManager A reference to the container manager in use. IGameOperationsApi gameOperationsApi A reference to the game operations api. ICombatOperationsApi combatOperationsApi A reference to the combat operations api. IPathFinder pathFinderAlgo A reference to the path finding algorithm in use. IPredefinedItemSet predefinedItemSet A reference to the predefined item set declared. IScheduler scheduler A reference to the scheduler instance. Properties | Improve this Doc View Source CreatureManager Gets the reference to the creature manager in use. Declaration public ICreatureManager CreatureManager { get; } Property Value Type Description ICreatureManager Implements IElevatedOperationContext IOperationContext IEventContext Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.html": {
    "href": "code/Fibula.Mechanics.Operations.html",
    "title": "Namespace Fibula.Mechanics.Operations | Fibula MMO",
    "keywords": "Namespace Fibula.Mechanics.Operations Classes AutoAttackOperation Class that represents an auto attack operation. AutoAttackOrchestratorOperation Class that represents a combat operation that orchestrates auto attack operations. AutoWalkOrchestratorOperation Class that represents an operation that orchestrates auto walk operations. BaseEnvironmentOperation Class that represents a base environment operation. CancelOperationsOperation Class that represents an operation that cancels other operations. ChangeModesOperation Class that represents a change modes operation. CreateItemOperation Class that represents an event for an item creation. DeathOperation Class that represents an operation for a creature's death. ElevatedOperation Class that represents an elevated base between game operations, for which the context changes. ElevatedOperationContext Class that represents an elevated context for operations. LogInOperation Class that represents a login operation. LogOutOperation Class that represents a logout operation. LookAtOperation Class that represents an event for a thing description. MovementOperation Class that represents a common base between movements. Operation Class that represents a common base between game operations. OperationContext Class that represents a context for operations. OperationFactory Class that represents an operation factory. OperationMessage Static class that contains common operation messages. RestoreCombatCreditOperation Class that represents an event to restore combat credits. SpeechOperation Class that represents a speech operation. TurnToDirectionOperation Class that represents an event for a creature turning."
  },
  "code/Fibula.Mechanics.Operations.LogInOperation.html": {
    "href": "code/Fibula.Mechanics.Operations.LogInOperation.html",
    "title": "Class LogInOperation | Fibula MMO",
    "keywords": "Class LogInOperation Class that represents a login operation. Inheritance System.Object Priority_Queue.FastPriorityQueueNode Priority_Queue.StablePriorityQueueNode BaseEvent Operation ElevatedOperation BaseEnvironmentOperation LogInOperation Implements System.IEquatable < BaseEvent > IElevatedOperation IOperation IEvent Inherited Members BaseEnvironmentOperation.ExhaustionCost BaseEnvironmentOperation.PlaceCreature(IElevatedOperationContext, ITile, ICreature) BaseEnvironmentOperation.RemoveCreature(IElevatedOperationContext, ICreature) ElevatedOperation.Execute(IOperationContext) Operation.CanBeCancelled Operation.GetRequestor(ICreatureFinder) Operation.Execute(IEventContext) Operation.AddContentToContainerOrFallback(IOperationContext, IThingContainer, IThing, Byte, Boolean, ICreature) Operation.DispatchTextNotification(IOperationContext, String) BaseEvent.Cancelled BaseEvent.Expedited BaseEvent.EventId BaseEvent.RequestorId BaseEvent.RepeatAfter BaseEvent.HasCancellationHandler BaseEvent.HasExpeditionHandler BaseEvent.Cancel() BaseEvent.Expedite() BaseEvent.Equals(BaseEvent) Priority_Queue.StablePriorityQueueNode.InsertionIndex Priority_Queue.FastPriorityQueueNode.Priority Priority_Queue.FastPriorityQueueNode.QueueIndex System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations Assembly : Fibula.Mechanics.dll Syntax public class LogInOperation : BaseEnvironmentOperation, IEquatable<BaseEvent>, IElevatedOperation, IOperation, IEvent Constructors | Improve this Doc View Source LogInOperation(UInt32, IClient, ICreatureCreationMetadata, Byte, Byte) Initializes a new instance of the LogInOperation class. Declaration public LogInOperation(uint requestorId, IClient client, ICreatureCreationMetadata playerMetadata, byte worldLightLevel, byte worldLightColor) Parameters Type Name Description System.UInt32 requestorId The id of the creature requesting the action. IClient client The client requesting the log in. ICreatureCreationMetadata playerMetadata The creation metadata of the player that is logging in. System.Byte worldLightLevel The level of the world light to send to the player. System.Byte worldLightColor The color of the world light to send to the player. Properties | Improve this Doc View Source Client Gets the client requesting the log in. Declaration public IClient Client { get; } Property Value Type Description IClient | Improve this Doc View Source CurrentWorldLightColor Gets the current light color of the world, to send with the login information. Declaration public byte CurrentWorldLightColor { get; } Property Value Type Description System.Byte | Improve this Doc View Source CurrentWorldLightLevel Gets the current light level of the world, to send with the login information. Declaration public byte CurrentWorldLightLevel { get; } Property Value Type Description System.Byte | Improve this Doc View Source ExhaustionType Gets the type of exhaustion that this operation produces. Declaration public override ExhaustionType ExhaustionType { get; } Property Value Type Description ExhaustionType Overrides Operation.ExhaustionType | Improve this Doc View Source PlayerMetadata Gets the player metadata. Declaration public ICreatureCreationMetadata PlayerMetadata { get; } Property Value Type Description ICreatureCreationMetadata Methods | Improve this Doc View Source Execute(IElevatedOperationContext) Executes the operation's logic. Declaration protected override void Execute(IElevatedOperationContext context) Parameters Type Name Description IElevatedOperationContext context A reference to the operation context. Overrides ElevatedOperation.Execute(IElevatedOperationContext) Implements System.IEquatable<T> IElevatedOperation IOperation IEvent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.LogOutOperation.html": {
    "href": "code/Fibula.Mechanics.Operations.LogOutOperation.html",
    "title": "Class LogOutOperation | Fibula MMO",
    "keywords": "Class LogOutOperation Class that represents a logout operation. Inheritance System.Object Priority_Queue.FastPriorityQueueNode Priority_Queue.StablePriorityQueueNode BaseEvent Operation ElevatedOperation BaseEnvironmentOperation LogOutOperation Implements System.IEquatable < BaseEvent > IElevatedOperation IOperation IEvent Inherited Members BaseEnvironmentOperation.ExhaustionCost BaseEnvironmentOperation.PlaceCreature(IElevatedOperationContext, ITile, ICreature) BaseEnvironmentOperation.RemoveCreature(IElevatedOperationContext, ICreature) ElevatedOperation.Execute(IOperationContext) Operation.CanBeCancelled Operation.GetRequestor(ICreatureFinder) Operation.Execute(IEventContext) Operation.AddContentToContainerOrFallback(IOperationContext, IThingContainer, IThing, Byte, Boolean, ICreature) Operation.DispatchTextNotification(IOperationContext, String) BaseEvent.Cancelled BaseEvent.Expedited BaseEvent.EventId BaseEvent.RequestorId BaseEvent.RepeatAfter BaseEvent.HasCancellationHandler BaseEvent.HasExpeditionHandler BaseEvent.Cancel() BaseEvent.Expedite() BaseEvent.Equals(BaseEvent) Priority_Queue.StablePriorityQueueNode.InsertionIndex Priority_Queue.FastPriorityQueueNode.Priority Priority_Queue.FastPriorityQueueNode.QueueIndex System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations Assembly : Fibula.Mechanics.dll Syntax public class LogOutOperation : BaseEnvironmentOperation, IEquatable<BaseEvent>, IElevatedOperation, IOperation, IEvent Constructors | Improve this Doc View Source LogOutOperation(UInt32, IPlayer) Initializes a new instance of the LogOutOperation class. Declaration public LogOutOperation(uint requestorId, IPlayer player) Parameters Type Name Description System.UInt32 requestorId The id of the creature requesting the use. IPlayer player The player being logged out. Properties | Improve this Doc View Source ExhaustionType Gets the type of exhaustion that this operation produces. Declaration public override ExhaustionType ExhaustionType { get; } Property Value Type Description ExhaustionType Overrides Operation.ExhaustionType | Improve this Doc View Source Player Gets the player to log out. Declaration public IPlayer Player { get; } Property Value Type Description IPlayer Methods | Improve this Doc View Source Execute(IElevatedOperationContext) Executes the operation's logic. Declaration protected override void Execute(IElevatedOperationContext context) Parameters Type Name Description IElevatedOperationContext context A reference to the operation context. Overrides ElevatedOperation.Execute(IElevatedOperationContext) Implements System.IEquatable<T> IElevatedOperation IOperation IEvent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.LookAtOperation.html": {
    "href": "code/Fibula.Mechanics.Operations.LookAtOperation.html",
    "title": "Class LookAtOperation | Fibula MMO",
    "keywords": "Class LookAtOperation Class that represents an event for a thing description. Inheritance System.Object Priority_Queue.FastPriorityQueueNode Priority_Queue.StablePriorityQueueNode BaseEvent Operation LookAtOperation Implements System.IEquatable < BaseEvent > IOperation IEvent Inherited Members Operation.CanBeCancelled Operation.GetRequestor(ICreatureFinder) Operation.Execute(IEventContext) Operation.AddContentToContainerOrFallback(IOperationContext, IThingContainer, IThing, Byte, Boolean, ICreature) Operation.DispatchTextNotification(IOperationContext, String) BaseEvent.Cancelled BaseEvent.Expedited BaseEvent.EventId BaseEvent.RequestorId BaseEvent.RepeatAfter BaseEvent.HasCancellationHandler BaseEvent.HasExpeditionHandler BaseEvent.Cancel() BaseEvent.Expedite() BaseEvent.Equals(BaseEvent) Priority_Queue.StablePriorityQueueNode.InsertionIndex Priority_Queue.FastPriorityQueueNode.Priority Priority_Queue.FastPriorityQueueNode.QueueIndex System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations Assembly : Fibula.Mechanics.dll Syntax public class LookAtOperation : Operation, IEquatable<BaseEvent>, IOperation, IEvent Constructors | Improve this Doc View Source LookAtOperation(UInt16, Location, Byte, IPlayer) Initializes a new instance of the LookAtOperation class. Declaration public LookAtOperation(ushort thingId, Location location, byte stackPosition, IPlayer playerToDescribeFor) Parameters Type Name Description System.UInt16 thingId The id of the thing to describe. Location location The location where the thing to describe is. System.Byte stackPosition The position in the stack at the location of the thing to describe is. IPlayer playerToDescribeFor The player to describe the thing for. Properties | Improve this Doc View Source ExhaustionCost Gets or sets the exhaustion cost time of this operation. Declaration public override TimeSpan ExhaustionCost { get; protected set; } Property Value Type Description System.TimeSpan Overrides Operation.ExhaustionCost | Improve this Doc View Source ExhaustionType Gets the type of exhaustion that this operation produces. Declaration public override ExhaustionType ExhaustionType { get; } Property Value Type Description ExhaustionType Overrides Operation.ExhaustionType | Improve this Doc View Source Location Gets the location where the thing to describe is. Declaration public Location Location { get; } Property Value Type Description Location | Improve this Doc View Source PlayerToDescribeFor Gets the player to describe for. Declaration public IPlayer PlayerToDescribeFor { get; } Property Value Type Description IPlayer | Improve this Doc View Source StackPosition Gets the position in the stack at the location of the thing to describe is. Declaration public byte StackPosition { get; } Property Value Type Description System.Byte | Improve this Doc View Source ThingId Gets the id of the thing to describe. Declaration public ushort ThingId { get; } Property Value Type Description System.UInt16 Methods | Improve this Doc View Source Execute(IOperationContext) Executes the operation's logic. Declaration protected override void Execute(IOperationContext context) Parameters Type Name Description IOperationContext context A reference to the operation context. Overrides Operation.Execute(IOperationContext) Implements System.IEquatable<T> IOperation IEvent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.MovementOperation.html": {
    "href": "code/Fibula.Mechanics.Operations.MovementOperation.html",
    "title": "Class MovementOperation | Fibula MMO",
    "keywords": "Class MovementOperation Class that represents a common base between movements. Inheritance System.Object Priority_Queue.FastPriorityQueueNode Priority_Queue.StablePriorityQueueNode BaseEvent Operation MovementOperation Implements System.IEquatable < BaseEvent > IOperation IEvent Inherited Members Operation.CanBeCancelled Operation.GetRequestor(ICreatureFinder) Operation.Execute(IEventContext) Operation.AddContentToContainerOrFallback(IOperationContext, IThingContainer, IThing, Byte, Boolean, ICreature) Operation.DispatchTextNotification(IOperationContext, String) BaseEvent.Cancelled BaseEvent.Expedited BaseEvent.EventId BaseEvent.RequestorId BaseEvent.RepeatAfter BaseEvent.HasCancellationHandler BaseEvent.HasExpeditionHandler BaseEvent.Cancel() BaseEvent.Expedite() BaseEvent.Equals(BaseEvent) Priority_Queue.StablePriorityQueueNode.InsertionIndex Priority_Queue.FastPriorityQueueNode.Priority Priority_Queue.FastPriorityQueueNode.QueueIndex System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations Assembly : Fibula.Mechanics.dll Syntax public class MovementOperation : Operation, IEquatable<BaseEvent>, IOperation, IEvent Constructors | Improve this Doc View Source MovementOperation(UInt32, UInt16, Location, Byte, UInt32, Location, UInt32, Byte, Nullable<TimeSpan>) Initializes a new instance of the MovementOperation class. Declaration public MovementOperation(uint requestorId, ushort thingId, Location fromLocation, byte fromIndex, uint fromCreatureId, Location toLocation, uint toCreatureId, byte amount, TimeSpan? movementExhaustionCost = default(TimeSpan? )) Parameters Type Name Description System.UInt32 requestorId The id of the creature requesting the movement. System.UInt16 thingId The id of the thing that is moving. Location fromLocation The location from which the movement is happening. System.Byte fromIndex The index within the location from which the movement is happening. System.UInt32 fromCreatureId The id of the creature from which the movement is happening, if any. Location toLocation The location to which the movement is happening. System.UInt32 toCreatureId The id of the creature to which the movement is happening, if any. System.Byte amount The amount of the thing to move. System.Nullable < System.TimeSpan > movementExhaustionCost Optional. The cost of this operation. Defaults to Fibula.Mechanics.Operations.MovementOperation.DefaultMovementExhaustionCost . Properties | Improve this Doc View Source Amount Gets the amount of thing being moved. Declaration public byte Amount { get; } Property Value Type Description System.Byte | Improve this Doc View Source ExhaustionCost Gets or sets the exhaustion cost time of this operation. Declaration public override TimeSpan ExhaustionCost { get; protected set; } Property Value Type Description System.TimeSpan Overrides Operation.ExhaustionCost | Improve this Doc View Source ExhaustionType Gets the type of exhaustion that this operation produces. Declaration public override ExhaustionType ExhaustionType { get; } Property Value Type Description ExhaustionType Overrides Operation.ExhaustionType | Improve this Doc View Source FromCreatureId Gets the id of the creature carrying the thing that is being moved, if any. Declaration public uint FromCreatureId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source FromIndex Gets the index within the location from which the movement is happening. Declaration public byte FromIndex { get; } Property Value Type Description System.Byte | Improve this Doc View Source FromLocation Gets the location from which the movement happens. Declaration public Location FromLocation { get; } Property Value Type Description Location | Improve this Doc View Source ThingMovingId Gets the id of the thing moving. Declaration public ushort ThingMovingId { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source ToCreatureId Gets the id of the creature that will carry the thing that is being moved, if any. Declaration public uint ToCreatureId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source ToLocation Gets the location to which the movement happens. Declaration public Location ToLocation { get; } Property Value Type Description Location Methods | Improve this Doc View Source Execute(IOperationContext) Executes the operation's logic. Declaration protected override void Execute(IOperationContext context) Parameters Type Name Description IOperationContext context A reference to the operation context. Overrides Operation.Execute(IOperationContext) Implements System.IEquatable<T> IOperation IEvent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.Operation.html": {
    "href": "code/Fibula.Mechanics.Operations.Operation.html",
    "title": "Class Operation | Fibula MMO",
    "keywords": "Class Operation Class that represents a common base between game operations. Inheritance System.Object Priority_Queue.FastPriorityQueueNode Priority_Queue.StablePriorityQueueNode BaseEvent Operation AutoAttackOperation AutoAttackOrchestratorOperation AutoWalkOrchestratorOperation ChangeModesOperation ElevatedOperation LookAtOperation MovementOperation RestoreCombatCreditOperation SpeechOperation TurnToDirectionOperation Implements System.IEquatable < BaseEvent > IOperation IEvent Inherited Members BaseEvent.Cancelled BaseEvent.Expedited BaseEvent.EventId BaseEvent.RequestorId BaseEvent.RepeatAfter BaseEvent.HasCancellationHandler BaseEvent.HasExpeditionHandler BaseEvent.Cancel() BaseEvent.Expedite() BaseEvent.Equals(BaseEvent) Priority_Queue.StablePriorityQueueNode.InsertionIndex Priority_Queue.FastPriorityQueueNode.Priority Priority_Queue.FastPriorityQueueNode.QueueIndex System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations Assembly : Fibula.Mechanics.dll Syntax public abstract class Operation : BaseEvent, IEquatable<BaseEvent>, IOperation, IEvent Constructors | Improve this Doc View Source Operation(UInt32) Initializes a new instance of the Operation class. Declaration protected Operation(uint requestorId) Parameters Type Name Description System.UInt32 requestorId The id of the creature requesting the movement. Properties | Improve this Doc View Source CanBeCancelled Gets or sets a value indicating whether the event can be cancelled. Declaration public override bool CanBeCancelled { get; protected set; } Property Value Type Description System.Boolean Overrides BaseEvent.CanBeCancelled | Improve this Doc View Source ExhaustionCost Gets or sets the exhaustion cost time of this operation. Declaration public abstract TimeSpan ExhaustionCost { get; protected set; } Property Value Type Description System.TimeSpan | Improve this Doc View Source ExhaustionType Gets the type of exhaustion that this operation produces. Declaration public abstract ExhaustionType ExhaustionType { get; } Property Value Type Description ExhaustionType Methods | Improve this Doc View Source AddContentToContainerOrFallback(IOperationContext, IThingContainer, ref IThing, Byte, Boolean, ICreature) Attempts to add content to the first possible parent container that accepts it, on a chain of parent containers. Declaration protected bool AddContentToContainerOrFallback(IOperationContext context, IThingContainer thingContainer, ref IThing remainder, byte addIndex = 255, bool includeTileAsFallback = true, ICreature requestorCreature = null) Parameters Type Name Description IOperationContext context A reference to the operation context. IThingContainer thingContainer The first thing container to add to. IThing remainder The remainder content to add, which overflows to the next container in the chain. System.Byte addIndex The index at which to attempt to add, only for the first attempted container. System.Boolean includeTileAsFallback Optional. A value for whether to include tiles in the fallback chain. ICreature requestorCreature Optional. The creature requesting the addition of content. Returns Type Description System.Boolean True if the content was successfully added, false otherwise. | Improve this Doc View Source DispatchTextNotification(IOperationContext, String) Sends a TextMessageNotification to the requestor of the operation, if there is one and it is a player. Declaration protected void DispatchTextNotification(IOperationContext context, string message = \"Sorry, not possible.\") Parameters Type Name Description IOperationContext context A reference to the operation context. System.String message Optional. The message to send. Defaults to NotPossible . | Improve this Doc View Source Execute(IOperationContext) Executes the operation's logic. Declaration protected abstract void Execute(IOperationContext context) Parameters Type Name Description IOperationContext context The execution context for this operation. | Improve this Doc View Source Execute(IEventContext) Executes the event logic. Declaration public override void Execute(IEventContext context) Parameters Type Name Description IEventContext context The execution context. Overrides BaseEvent.Execute(IEventContext) | Improve this Doc View Source GetRequestor(ICreatureFinder) Gets the creature that is requesting the event, if known. Declaration public ICreature GetRequestor(ICreatureFinder creatureFinder) Parameters Type Name Description ICreatureFinder creatureFinder A reference to the creature finder in use. Returns Type Description ICreature The creature that requested the operation, or null if there wasn't any. Implements System.IEquatable<T> IOperation IEvent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.OperationContext.html": {
    "href": "code/Fibula.Mechanics.Operations.OperationContext.html",
    "title": "Class OperationContext | Fibula MMO",
    "keywords": "Class OperationContext Class that represents a context for operations. Inheritance System.Object EventContext OperationContext ElevatedOperationContext Implements IOperationContext IEventContext Inherited Members EventContext.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations Assembly : Fibula.Mechanics.dll Syntax public class OperationContext : EventContext, IOperationContext, IEventContext Constructors | Improve this Doc View Source OperationContext(ILogger, IMapDescriptor, IMap, ICreatureFinder, IItemFactory, ICreatureFactory, IOperationFactory, IContainerManager, IGameOperationsApi, ICombatOperationsApi, IPathFinder, IPredefinedItemSet, IScheduler) Initializes a new instance of the OperationContext class. Declaration public OperationContext(ILogger logger, IMapDescriptor mapDescriptor, IMap map, ICreatureFinder creatureFinder, IItemFactory itemFactory, ICreatureFactory creatureFactory, IOperationFactory operationFactory, IContainerManager containerManager, IGameOperationsApi gameOperationsApi, ICombatOperationsApi combatOperationsApi, IPathFinder pathFinderAlgo, IPredefinedItemSet predefinedItemSet, IScheduler scheduler) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. IMapDescriptor mapDescriptor A reference to the map descriptor in use. IMap map A reference to the map in use. ICreatureFinder creatureFinder A reference to the creature finder in use. IItemFactory itemFactory A reference to the item factory in use. ICreatureFactory creatureFactory A reference to the creature factory in use. IOperationFactory operationFactory A reference to the operation factory in use. IContainerManager containerManager A reference to the container manager in use. IGameOperationsApi gameOperationsApi A reference to the game operations api. ICombatOperationsApi combatOperationsApi A reference to the combat operations api. IPathFinder pathFinderAlgo A reference to the path finding algorithm in use. IPredefinedItemSet predefinedItemSet A reference to the predefined item set declared. IScheduler scheduler A reference to the scheduler instance. Properties | Improve this Doc View Source CombatApi Gets a reference to the combat api. Declaration public ICombatOperationsApi CombatApi { get; } Property Value Type Description ICombatOperationsApi | Improve this Doc View Source ContainerManager Gets a reference to the container manager in use. Declaration public IContainerManager ContainerManager { get; } Property Value Type Description IContainerManager | Improve this Doc View Source CreatureFactory Gets a reference to the creature factory in use. Declaration public ICreatureFactory CreatureFactory { get; } Property Value Type Description ICreatureFactory | Improve this Doc View Source CreatureFinder Gets the reference to the creature finder in use. Declaration public ICreatureFinder CreatureFinder { get; } Property Value Type Description ICreatureFinder | Improve this Doc View Source GameApi Gets a reference to the game's api. Declaration public IGameOperationsApi GameApi { get; } Property Value Type Description IGameOperationsApi | Improve this Doc View Source ItemFactory Gets a reference to the item factory in use. Declaration public IItemFactory ItemFactory { get; } Property Value Type Description IItemFactory | Improve this Doc View Source Map Gets the reference to the map. Declaration public IMap Map { get; } Property Value Type Description IMap | Improve this Doc View Source MapDescriptor Gets a reference to the map descriptor in use. Declaration public IMapDescriptor MapDescriptor { get; } Property Value Type Description IMapDescriptor | Improve this Doc View Source OperationFactory Gets the reference to the operation factory. Declaration public IOperationFactory OperationFactory { get; } Property Value Type Description IOperationFactory | Improve this Doc View Source PathFinder Gets a reference to the pathfinder algorithm in use. Declaration public IPathFinder PathFinder { get; } Property Value Type Description IPathFinder | Improve this Doc View Source PredefinedItemSet Gets the predefined item set. Declaration public IPredefinedItemSet PredefinedItemSet { get; } Property Value Type Description IPredefinedItemSet | Improve this Doc View Source Scheduler Gets a reference to the scheduler in use. Declaration public IScheduler Scheduler { get; } Property Value Type Description IScheduler Implements IOperationContext IEventContext Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.OperationFactory.html": {
    "href": "code/Fibula.Mechanics.Operations.OperationFactory.html",
    "title": "Class OperationFactory | Fibula MMO",
    "keywords": "Class OperationFactory Class that represents an operation factory. Inheritance System.Object OperationFactory Implements IOperationFactory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations Assembly : Fibula.Mechanics.dll Syntax public class OperationFactory : IOperationFactory Constructors | Improve this Doc View Source OperationFactory(ILogger) Initializes a new instance of the OperationFactory class. Declaration public OperationFactory(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Properties | Improve this Doc View Source Logger Gets a reference to the logger in use. Declaration public ILogger Logger { get; } Property Value Type Description Serilog.ILogger Methods | Improve this Doc View Source Create(IOperationCreationArguments) Creates a new IOperation based on the type specified with the given arguments. Declaration public IOperation Create(IOperationCreationArguments arguments) Parameters Type Name Description IOperationCreationArguments arguments The arguments for creation. Returns Type Description IOperation A new instance of IOperation . Implements IOperationFactory Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.OperationMessage.html": {
    "href": "code/Fibula.Mechanics.Operations.OperationMessage.html",
    "title": "Class OperationMessage | Fibula MMO",
    "keywords": "Class OperationMessage Static class that contains common operation messages. Inheritance System.Object OperationMessage Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations Assembly : Fibula.Mechanics.dll Syntax public static class OperationMessage Fields | Improve this Doc View Source DestinationTooFarAway The operation cannot be completed because the destination of the movement is too far to perform it. Declaration public const string DestinationTooFarAway = \"The destination is too far away.\" Field Value Type Description System.String | Improve this Doc View Source MayNotMoveThis The operation cannot be completed because the thing cannot be moved or the player does not have enough privilege to do it. Declaration public const string MayNotMoveThis = \"You may not move this.\" Field Value Type Description System.String | Improve this Doc View Source MayNotThrowThere The operation cannot be completed because the throw angle is not allowed. Declaration public const string MayNotThrowThere = \"You may not throw there.\" Field Value Type Description System.String | Improve this Doc View Source MustFirstOpenThatContainer The operation cannot be completed because the player no longer has access to the source container. Declaration public const string MustFirstOpenThatContainer = \"You must first open the container.\" Field Value Type Description System.String | Improve this Doc View Source NotEnoughQuantity The operation cannot be completed because the desired quantity is greater than what's available at the source. Declaration public const string NotEnoughQuantity = \"There is not enough quantity to move.\" Field Value Type Description System.String | Improve this Doc View Source NotEnoughRoom The operation cannot be completed because the destination is obstructed. Declaration public const string NotEnoughRoom = \"There is not enough room.\" Field Value Type Description System.String | Improve this Doc View Source NotPossible The operation is not possible at the moment. Declaration public const string NotPossible = \"Sorry, not possible.\" Field Value Type Description System.String | Improve this Doc View Source ThereIsNoWay The operation cannot be completed because there is no way for the player to get there. Declaration public const string ThereIsNoWay = \"There is no way.\" Field Value Type Description System.String | Improve this Doc View Source TooFarAway The operation cannot be completed because the player is too far to perform it. Declaration public const string TooFarAway = \"You are too far away.\" Field Value Type Description System.String"
  },
  "code/Fibula.Mechanics.Operations.RestoreCombatCreditOperation.html": {
    "href": "code/Fibula.Mechanics.Operations.RestoreCombatCreditOperation.html",
    "title": "Class RestoreCombatCreditOperation | Fibula MMO",
    "keywords": "Class RestoreCombatCreditOperation Class that represents an event to restore combat credits. Inheritance System.Object Priority_Queue.FastPriorityQueueNode Priority_Queue.StablePriorityQueueNode BaseEvent Operation RestoreCombatCreditOperation Implements System.IEquatable < BaseEvent > IOperation IEvent Inherited Members Operation.CanBeCancelled Operation.GetRequestor(ICreatureFinder) Operation.Execute(IEventContext) Operation.AddContentToContainerOrFallback(IOperationContext, IThingContainer, IThing, Byte, Boolean, ICreature) Operation.DispatchTextNotification(IOperationContext, String) BaseEvent.Cancelled BaseEvent.Expedited BaseEvent.EventId BaseEvent.RequestorId BaseEvent.RepeatAfter BaseEvent.HasCancellationHandler BaseEvent.HasExpeditionHandler BaseEvent.Cancel() BaseEvent.Expedite() BaseEvent.Equals(BaseEvent) Priority_Queue.StablePriorityQueueNode.InsertionIndex Priority_Queue.FastPriorityQueueNode.Priority Priority_Queue.FastPriorityQueueNode.QueueIndex System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations Assembly : Fibula.Mechanics.dll Syntax public class RestoreCombatCreditOperation : Operation, IEquatable<BaseEvent>, IOperation, IEvent Constructors | Improve this Doc View Source RestoreCombatCreditOperation(ICombatant, CombatCreditType) Initializes a new instance of the RestoreCombatCreditOperation class. Declaration public RestoreCombatCreditOperation(ICombatant combatant, CombatCreditType creditType) Parameters Type Name Description ICombatant combatant The combatant that is being restored. CombatCreditType creditType The type of combat credit to restore. Properties | Improve this Doc View Source Combatant Gets the combatant that the credit will be restored for. Declaration public ICombatant Combatant { get; } Property Value Type Description ICombatant | Improve this Doc View Source CreditType Gets the type of credit to restore. Declaration public CombatCreditType CreditType { get; } Property Value Type Description CombatCreditType | Improve this Doc View Source ExhaustionCost Gets or sets the exhaustion cost time of this operation. Declaration public override TimeSpan ExhaustionCost { get; protected set; } Property Value Type Description System.TimeSpan Overrides Operation.ExhaustionCost | Improve this Doc View Source ExhaustionType Gets the type of exhaustion that this operation produces. Declaration public override ExhaustionType ExhaustionType { get; } Property Value Type Description ExhaustionType Overrides Operation.ExhaustionType Methods | Improve this Doc View Source Execute(IOperationContext) Executes the operation's logic. Declaration protected override void Execute(IOperationContext context) Parameters Type Name Description IOperationContext context A reference to the operation context. Overrides Operation.Execute(IOperationContext) Implements System.IEquatable<T> IOperation IEvent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.SpeechOperation.html": {
    "href": "code/Fibula.Mechanics.Operations.SpeechOperation.html",
    "title": "Class SpeechOperation | Fibula MMO",
    "keywords": "Class SpeechOperation Class that represents a speech operation. Inheritance System.Object Priority_Queue.FastPriorityQueueNode Priority_Queue.StablePriorityQueueNode BaseEvent Operation SpeechOperation Implements System.IEquatable < BaseEvent > IOperation IEvent Inherited Members Operation.CanBeCancelled Operation.GetRequestor(ICreatureFinder) Operation.Execute(IEventContext) Operation.AddContentToContainerOrFallback(IOperationContext, IThingContainer, IThing, Byte, Boolean, ICreature) Operation.DispatchTextNotification(IOperationContext, String) BaseEvent.Cancelled BaseEvent.Expedited BaseEvent.EventId BaseEvent.RequestorId BaseEvent.RepeatAfter BaseEvent.HasCancellationHandler BaseEvent.HasExpeditionHandler BaseEvent.Cancel() BaseEvent.Expedite() BaseEvent.Equals(BaseEvent) Priority_Queue.StablePriorityQueueNode.InsertionIndex Priority_Queue.FastPriorityQueueNode.Priority Priority_Queue.FastPriorityQueueNode.QueueIndex System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations Assembly : Fibula.Mechanics.dll Syntax public class SpeechOperation : Operation, IEquatable<BaseEvent>, IOperation, IEvent Constructors | Improve this Doc View Source SpeechOperation(UInt32, SpeechType, ChatChannelType, String, String) Initializes a new instance of the SpeechOperation class. Declaration public SpeechOperation(uint requestorId, SpeechType speechType, ChatChannelType channelType, string content, string receiver) Parameters Type Name Description System.UInt32 requestorId The id of the creature speaking. SpeechType speechType The type of speech. ChatChannelType channelType The type of channel where the speech happens. System.String content The content of the speech. System.String receiver The receiver of the speech, if applicable. Properties | Improve this Doc View Source ChannelId Gets the type of channel where the speech happens. Declaration public ChatChannelType ChannelId { get; } Property Value Type Description ChatChannelType | Improve this Doc View Source Content Gets the content of the speech. Declaration public string Content { get; } Property Value Type Description System.String | Improve this Doc View Source ExhaustionCost Gets or sets the exhaustion cost time of this operation. Declaration public override TimeSpan ExhaustionCost { get; protected set; } Property Value Type Description System.TimeSpan Overrides Operation.ExhaustionCost | Improve this Doc View Source ExhaustionType Gets the type of exhaustion that this operation produces. Declaration public override ExhaustionType ExhaustionType { get; } Property Value Type Description ExhaustionType Overrides Operation.ExhaustionType | Improve this Doc View Source Receiver Gets the receiver of the speech, if any. Declaration public string Receiver { get; } Property Value Type Description System.String | Improve this Doc View Source Type Gets the type of speech. Declaration public SpeechType Type { get; } Property Value Type Description SpeechType Methods | Improve this Doc View Source Execute(IOperationContext) Executes the operation's logic. Declaration protected override void Execute(IOperationContext context) Parameters Type Name Description IOperationContext context A reference to the operation context. Overrides Operation.Execute(IOperationContext) Implements System.IEquatable<T> IOperation IEvent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.Operations.TurnToDirectionOperation.html": {
    "href": "code/Fibula.Mechanics.Operations.TurnToDirectionOperation.html",
    "title": "Class TurnToDirectionOperation | Fibula MMO",
    "keywords": "Class TurnToDirectionOperation Class that represents an event for a creature turning. Inheritance System.Object Priority_Queue.FastPriorityQueueNode Priority_Queue.StablePriorityQueueNode BaseEvent Operation TurnToDirectionOperation Implements System.IEquatable < BaseEvent > IOperation IEvent Inherited Members Operation.CanBeCancelled Operation.GetRequestor(ICreatureFinder) Operation.Execute(IEventContext) Operation.AddContentToContainerOrFallback(IOperationContext, IThingContainer, IThing, Byte, Boolean, ICreature) Operation.DispatchTextNotification(IOperationContext, String) BaseEvent.Cancelled BaseEvent.Expedited BaseEvent.EventId BaseEvent.RequestorId BaseEvent.RepeatAfter BaseEvent.HasCancellationHandler BaseEvent.HasExpeditionHandler BaseEvent.Cancel() BaseEvent.Expedite() BaseEvent.Equals(BaseEvent) Priority_Queue.StablePriorityQueueNode.InsertionIndex Priority_Queue.FastPriorityQueueNode.Priority Priority_Queue.FastPriorityQueueNode.QueueIndex System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics.Operations Assembly : Fibula.Mechanics.dll Syntax public class TurnToDirectionOperation : Operation, IEquatable<BaseEvent>, IOperation, IEvent Constructors | Improve this Doc View Source TurnToDirectionOperation(ICreature, Direction) Initializes a new instance of the TurnToDirectionOperation class. Declaration public TurnToDirectionOperation(ICreature creature, Direction direction) Parameters Type Name Description ICreature creature The creature which is turning. Direction direction The direction to which the creature is turning. Properties | Improve this Doc View Source Creature Gets a reference to the creature turning. Declaration public ICreature Creature { get; } Property Value Type Description ICreature | Improve this Doc View Source Direction Gets the direction in which the creature is turning. Declaration public Direction Direction { get; } Property Value Type Description Direction | Improve this Doc View Source ExhaustionCost Gets or sets the exhaustion cost time of this operation. Declaration public override TimeSpan ExhaustionCost { get; protected set; } Property Value Type Description System.TimeSpan Overrides Operation.ExhaustionCost | Improve this Doc View Source ExhaustionType Gets the type of exhaustion that this operation produces. Declaration public override ExhaustionType ExhaustionType { get; } Property Value Type Description ExhaustionType Overrides Operation.ExhaustionType Methods | Improve this Doc View Source Execute(IOperationContext) Executes the operation's logic. Declaration protected override void Execute(IOperationContext context) Parameters Type Name Description IOperationContext context A reference to the operation context. Overrides Operation.Execute(IOperationContext) Implements System.IEquatable<T> IOperation IEvent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Mechanics.WorldInformation.html": {
    "href": "code/Fibula.Mechanics.WorldInformation.html",
    "title": "Class WorldInformation | Fibula MMO",
    "keywords": "Class WorldInformation Class that implements an IWorldInformation model. Inheritance System.Object WorldInformation Implements IWorldInformation Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Mechanics Assembly : Fibula.Mechanics.dll Syntax public class WorldInformation : IWorldInformation Properties | Improve this Doc View Source LightColor Gets or sets the game world's light color. Declaration public byte LightColor { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source LightLevel Gets or sets the game world's light level. Declaration public byte LightLevel { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source Status Gets or sets the game world's state. Declaration public WorldState Status { get; set; } Property Value Type Description WorldState Implements IWorldInformation Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Notifications.Arguments.CreatureMovedNotificationArguments.html": {
    "href": "code/Fibula.Notifications.Arguments.CreatureMovedNotificationArguments.html",
    "title": "Class CreatureMovedNotificationArguments | Fibula MMO",
    "keywords": "Class CreatureMovedNotificationArguments Class that represents arguments for the creature moving notification. Inheritance System.Object CreatureMovedNotificationArguments Implements INotificationArguments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Notifications.Arguments Assembly : Fibula.Notifications.dll Syntax public class CreatureMovedNotificationArguments : INotificationArguments Constructors | Improve this Doc View Source CreatureMovedNotificationArguments(UInt32, Location, Byte, Location, Byte, Boolean) Initializes a new instance of the CreatureMovedNotificationArguments class. Declaration public CreatureMovedNotificationArguments(uint creatureId, Location fromLocation, byte fromStackPos, Location toLocation, byte toStackPos, bool wasTeleport) Parameters Type Name Description System.UInt32 creatureId The id of the creature moving. Location fromLocation The location from which the creature is moving. System.Byte fromStackPos The stack position from where the creature moving. Location toLocation The location to which the creature is moving. System.Byte toStackPos The stack position to which the creature is moving. System.Boolean wasTeleport A value indicating whether this movement was a teleportation. Properties | Improve this Doc View Source CreatureId Gets the id of the creature moving. Declaration public uint CreatureId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source NewLocation Gets the location to which the creature is moving. Declaration public Location NewLocation { get; } Property Value Type Description Location | Improve this Doc View Source NewStackPosition Gets the stack position to which the creature is moving. Declaration public byte NewStackPosition { get; } Property Value Type Description System.Byte | Improve this Doc View Source OldLocation Gets the location from which the creature is moving. Declaration public Location OldLocation { get; } Property Value Type Description Location | Improve this Doc View Source OldStackPosition Gets the stack position from where the creature moving. Declaration public byte OldStackPosition { get; } Property Value Type Description System.Byte | Improve this Doc View Source WasTeleport Gets a value indicating whether this movement was a teleportation. Declaration public bool WasTeleport { get; } Property Value Type Description System.Boolean Implements INotificationArguments Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Notifications.Arguments.CreatureRemovedNotificationArguments.html": {
    "href": "code/Fibula.Notifications.Arguments.CreatureRemovedNotificationArguments.html",
    "title": "Class CreatureRemovedNotificationArguments | Fibula MMO",
    "keywords": "Class CreatureRemovedNotificationArguments Class that represents arguments for the creature being removed notification. Inheritance System.Object CreatureRemovedNotificationArguments Implements INotificationArguments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Notifications.Arguments Assembly : Fibula.Notifications.dll Syntax public class CreatureRemovedNotificationArguments : INotificationArguments Constructors | Improve this Doc View Source CreatureRemovedNotificationArguments(ICreature, Byte, AnimatedEffect) Initializes a new instance of the CreatureRemovedNotificationArguments class. Declaration public CreatureRemovedNotificationArguments(ICreature creature, byte oldStackPos, AnimatedEffect removeEffect = AnimatedEffect.None) Parameters Type Name Description ICreature creature The creature being removed. System.Byte oldStackPos The position in the stack of the creature being removed. AnimatedEffect removeEffect Optional. An effect to add when removing the creature. Properties | Improve this Doc View Source Creature Gets the creature being removed. Declaration public ICreature Creature { get; } Property Value Type Description ICreature | Improve this Doc View Source RemoveEffect Gets the effect to send when removing the creature. Declaration public AnimatedEffect RemoveEffect { get; } Property Value Type Description AnimatedEffect | Improve this Doc View Source StackPosition Gets the stack position of the creature being removed. Declaration public byte StackPosition { get; } Property Value Type Description System.Byte Implements INotificationArguments Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Notifications.Arguments.CreatureSpeechNotificationArguments.html": {
    "href": "code/Fibula.Notifications.Arguments.CreatureSpeechNotificationArguments.html",
    "title": "Class CreatureSpeechNotificationArguments | Fibula MMO",
    "keywords": "Class CreatureSpeechNotificationArguments Class that represents arguments for the creature speech notification. Inheritance System.Object CreatureSpeechNotificationArguments Implements INotificationArguments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Notifications.Arguments Assembly : Fibula.Notifications.dll Syntax public class CreatureSpeechNotificationArguments : INotificationArguments Constructors | Improve this Doc View Source CreatureSpeechNotificationArguments(ICreature, SpeechType, ChatChannelType, String, String) Initializes a new instance of the CreatureSpeechNotificationArguments class. Declaration public CreatureSpeechNotificationArguments(ICreature creature, SpeechType speechType, ChatChannelType channelType, string text, string receiver = \"\") Parameters Type Name Description ICreature creature The creature that spoke. SpeechType speechType The type of speech. ChatChannelType channelType The channel type. System.String text The message content. System.String receiver Optional. The receiver of the message. Properties | Improve this Doc View Source ChannelType Gets the type of channel. Declaration public ChatChannelType ChannelType { get; } Property Value Type Description ChatChannelType | Improve this Doc View Source Creature Gets the id of the creature that spoke. Declaration public ICreature Creature { get; } Property Value Type Description ICreature | Improve this Doc View Source Receiver Gets the receiver of the speech, if this is a private channel message. Declaration public string Receiver { get; } Property Value Type Description System.String | Improve this Doc View Source SpeechType Gets the type of speech. Declaration public SpeechType SpeechType { get; } Property Value Type Description SpeechType | Improve this Doc View Source Text Gets the text of the speech. Declaration public string Text { get; } Property Value Type Description System.String Implements INotificationArguments Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Notifications.Arguments.CreatureTurnedNotificationArguments.html": {
    "href": "code/Fibula.Notifications.Arguments.CreatureTurnedNotificationArguments.html",
    "title": "Class CreatureTurnedNotificationArguments | Fibula MMO",
    "keywords": "Class CreatureTurnedNotificationArguments Class that represents arguments for the creature turned notification. Inheritance System.Object CreatureTurnedNotificationArguments Implements INotificationArguments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Notifications.Arguments Assembly : Fibula.Notifications.dll Syntax public class CreatureTurnedNotificationArguments : INotificationArguments Constructors | Improve this Doc View Source CreatureTurnedNotificationArguments(ICreature, Byte, AnimatedEffect) Initializes a new instance of the CreatureTurnedNotificationArguments class. Declaration public CreatureTurnedNotificationArguments(ICreature creature, byte creatureStackPosition, AnimatedEffect turnEffect = AnimatedEffect.None) Parameters Type Name Description ICreature creature The creature that turned. System.Byte creatureStackPosition The position in the stack of the creature that turned. AnimatedEffect turnEffect Optional. An effect of the turn. Properties | Improve this Doc View Source Creature Gets the creature that turned. Declaration public ICreature Creature { get; } Property Value Type Description ICreature | Improve this Doc View Source StackPosition Gets the position in the stack of the creatue. Declaration public byte StackPosition { get; } Property Value Type Description System.Byte | Improve this Doc View Source TurnedEffect Gets the effect of the turn, if any. Declaration public AnimatedEffect TurnedEffect { get; } Property Value Type Description AnimatedEffect Implements INotificationArguments Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Notifications.Arguments.GenericNotificationArguments.html": {
    "href": "code/Fibula.Notifications.Arguments.GenericNotificationArguments.html",
    "title": "Class GenericNotificationArguments | Fibula MMO",
    "keywords": "Class GenericNotificationArguments Class that represents generic notification arguments. Inheritance System.Object GenericNotificationArguments Implements INotificationArguments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Notifications.Arguments Assembly : Fibula.Notifications.dll Syntax public class GenericNotificationArguments : INotificationArguments Constructors | Improve this Doc View Source GenericNotificationArguments(IOutboundPacket[]) Initializes a new instance of the GenericNotificationArguments class. Declaration public GenericNotificationArguments(params IOutboundPacket[] outgoingPackets) Parameters Type Name Description IOutboundPacket [] outgoingPackets The packets to send as part of this notification. Properties | Improve this Doc View Source OutgoingPackets Gets the packets to be included in this notification. Declaration public IEnumerable<IOutboundPacket> OutgoingPackets { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IOutboundPacket > Implements INotificationArguments Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Notifications.Arguments.html": {
    "href": "code/Fibula.Notifications.Arguments.html",
    "title": "Namespace Fibula.Notifications.Arguments | Fibula MMO",
    "keywords": "Namespace Fibula.Notifications.Arguments Classes CreatureMovedNotificationArguments Class that represents arguments for the creature moving notification. CreatureRemovedNotificationArguments Class that represents arguments for the creature being removed notification. CreatureSpeechNotificationArguments Class that represents arguments for the creature speech notification. CreatureTurnedNotificationArguments Class that represents arguments for the creature turned notification. GenericNotificationArguments Class that represents generic notification arguments. TextMessageNotificationArguments public class that represents arguments for an animated text notification. TileUpdatedNotificationArguments Class that represents arguments for the TileUpdatedNotification . WorldLightChangedNotificationArguments Class that represents arguments for the world light changed notification."
  },
  "code/Fibula.Notifications.Arguments.TextMessageNotificationArguments.html": {
    "href": "code/Fibula.Notifications.Arguments.TextMessageNotificationArguments.html",
    "title": "Class TextMessageNotificationArguments | Fibula MMO",
    "keywords": "Class TextMessageNotificationArguments public class that represents arguments for an animated text notification. Inheritance System.Object TextMessageNotificationArguments Implements INotificationArguments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Notifications.Arguments Assembly : Fibula.Notifications.dll Syntax public class TextMessageNotificationArguments : INotificationArguments Constructors | Improve this Doc View Source TextMessageNotificationArguments(MessageType, String) Initializes a new instance of the TextMessageNotificationArguments class. Declaration public TextMessageNotificationArguments(MessageType type, string message) Parameters Type Name Description MessageType type The type of text to send. System.String message The text to send. Properties | Improve this Doc View Source Location Gets the location of the animated text. Declaration public Location Location { get; } Property Value Type Description Location | Improve this Doc View Source Text Gets the text value. Declaration public string Text { get; } Property Value Type Description System.String | Improve this Doc View Source Type Gets the text message type. Declaration public MessageType Type { get; } Property Value Type Description MessageType Implements INotificationArguments Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Notifications.Arguments.TileUpdatedNotificationArguments.html": {
    "href": "code/Fibula.Notifications.Arguments.TileUpdatedNotificationArguments.html",
    "title": "Class TileUpdatedNotificationArguments | Fibula MMO",
    "keywords": "Class TileUpdatedNotificationArguments Class that represents arguments for the TileUpdatedNotification . Inheritance System.Object TileUpdatedNotificationArguments Implements INotificationArguments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Notifications.Arguments Assembly : Fibula.Notifications.dll Syntax public class TileUpdatedNotificationArguments : INotificationArguments Constructors | Improve this Doc View Source TileUpdatedNotificationArguments(Location, Func<IPlayer, Location, (IDictionary<String, Object> descriptionMetadata, ReadOnlySequence<Byte> descriptionData)>) Initializes a new instance of the TileUpdatedNotificationArguments class. Declaration public TileUpdatedNotificationArguments(Location location, Func<IPlayer, Location, (IDictionary<string, object> descriptionMetadata, ReadOnlySequence<byte> descriptionData)> descriptionFunction) Parameters Type Name Description Location location The location of the updated tile. System.Func < IPlayer , Location , System.ValueTuple < System.Collections.Generic.IDictionary < System.String , System.Object >, System.Buffers.ReadOnlySequence < System.Byte >>> descriptionFunction The function used to get the description of the updated tile. Properties | Improve this Doc View Source Location Gets the location of the updated tile. Declaration public Location Location { get; } Property Value Type Description Location | Improve this Doc View Source TileDescriptionFunction Gets the function that decribes the tile. Declaration public Func<IPlayer, Location, (IDictionary<string, object> descriptionMetadata, ReadOnlySequence<byte> descriptionData)> TileDescriptionFunction { get; } Property Value Type Description System.Func < IPlayer , Location , System.ValueTuple < System.Collections.Generic.IDictionary < System.String , System.Object >, System.Buffers.ReadOnlySequence < System.Byte >>> Implements INotificationArguments Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Notifications.Arguments.WorldLightChangedNotificationArguments.html": {
    "href": "code/Fibula.Notifications.Arguments.WorldLightChangedNotificationArguments.html",
    "title": "Class WorldLightChangedNotificationArguments | Fibula MMO",
    "keywords": "Class WorldLightChangedNotificationArguments Class that represents arguments for the world light changed notification. Inheritance System.Object WorldLightChangedNotificationArguments Implements INotificationArguments Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Notifications.Arguments Assembly : Fibula.Notifications.dll Syntax public class WorldLightChangedNotificationArguments : INotificationArguments Constructors | Improve this Doc View Source WorldLightChangedNotificationArguments(Byte, Byte) Initializes a new instance of the WorldLightChangedNotificationArguments class. Declaration public WorldLightChangedNotificationArguments(byte lightLevel, byte lightColor = 215) Parameters Type Name Description System.Byte lightLevel The new world light level. System.Byte lightColor The new world light color. Properties | Improve this Doc View Source LightColor Gets the new world light color. Declaration public byte LightColor { get; } Property Value Type Description System.Byte | Improve this Doc View Source LightLevel Gets the new world light level. Declaration public byte LightLevel { get; } Property Value Type Description System.Byte Implements INotificationArguments Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Notifications.Contracts.Abstractions.html": {
    "href": "code/Fibula.Notifications.Contracts.Abstractions.html",
    "title": "Namespace Fibula.Notifications.Contracts.Abstractions | Fibula MMO",
    "keywords": "Namespace Fibula.Notifications.Contracts.Abstractions Interfaces INotification Interface for all notifications. INotificationArguments Interface for all notification arguments. INotificationContext Interface for a notification context."
  },
  "code/Fibula.Notifications.Contracts.Abstractions.INotification.html": {
    "href": "code/Fibula.Notifications.Contracts.Abstractions.INotification.html",
    "title": "Interface INotification | Fibula MMO",
    "keywords": "Interface INotification Interface for all notifications. Inherited Members IEvent.Cancelled IEvent.Expedited IEvent.EventId IEvent.RequestorId IEvent.CanBeCancelled IEvent.RepeatAfter IEvent.Cancel() IEvent.Execute(IEventContext) IEvent.Expedite() Namespace : Fibula.Notifications.Contracts.Abstractions Assembly : Fibula.Notifications.Contracts.dll Syntax public interface INotification : IEvent Methods | Improve this Doc View Source Send(INotificationContext) Sends the notification to the players intented. Declaration void Send(INotificationContext context) Parameters Type Name Description INotificationContext context The context for this notification. Events | Improve this Doc View Source Sent Event to call when the notification is sent. Declaration event OnSent Sent Event Type Type Description OnSent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Notifications.Contracts.Abstractions.INotificationArguments.html": {
    "href": "code/Fibula.Notifications.Contracts.Abstractions.INotificationArguments.html",
    "title": "Interface INotificationArguments | Fibula MMO",
    "keywords": "Interface INotificationArguments Interface for all notification arguments. Namespace : Fibula.Notifications.Contracts.Abstractions Assembly : Fibula.Notifications.Contracts.dll Syntax public interface INotificationArguments Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Notifications.Contracts.Abstractions.INotificationContext.html": {
    "href": "code/Fibula.Notifications.Contracts.Abstractions.INotificationContext.html",
    "title": "Interface INotificationContext | Fibula MMO",
    "keywords": "Interface INotificationContext Interface for a notification context. Inherited Members IEventContext.Logger Namespace : Fibula.Notifications.Contracts.Abstractions Assembly : Fibula.Notifications.Contracts.dll Syntax public interface INotificationContext : IEventContext Properties | Improve this Doc View Source CreatureFinder Gets the reference to the creature finder in use. Declaration ICreatureFinder CreatureFinder { get; } Property Value Type Description ICreatureFinder | Improve this Doc View Source MapDescriptor Gets a reference to the map descriptor in use. Declaration IMapDescriptor MapDescriptor { get; } Property Value Type Description IMapDescriptor Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Notifications.Contracts.Delegates.html": {
    "href": "code/Fibula.Notifications.Contracts.Delegates.html",
    "title": "Namespace Fibula.Notifications.Contracts.Delegates | Fibula MMO",
    "keywords": "Namespace Fibula.Notifications.Contracts.Delegates Delegates OnSent Delegate meant for when a notification is sent to a client."
  },
  "code/Fibula.Notifications.Contracts.Delegates.OnSent.html": {
    "href": "code/Fibula.Notifications.Contracts.Delegates.OnSent.html",
    "title": "Delegate OnSent | Fibula MMO",
    "keywords": "Delegate OnSent Delegate meant for when a notification is sent to a client. Namespace : Fibula.Notifications.Contracts.Delegates Assembly : Fibula.Notifications.Contracts.dll Syntax public delegate void OnSent(IClient toClient); Parameters Type Name Description IClient toClient The client to which the notification was sent. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Notifications.CreatureMovedNotification.html": {
    "href": "code/Fibula.Notifications.CreatureMovedNotification.html",
    "title": "Class CreatureMovedNotification | Fibula MMO",
    "keywords": "Class CreatureMovedNotification Class that represents a notification for when a creature has moved. Inheritance System.Object Priority_Queue.FastPriorityQueueNode Priority_Queue.StablePriorityQueueNode BaseEvent Notification CreatureMovedNotification Implements System.IEquatable < BaseEvent > INotification IEvent Inherited Members Notification.Sent Notification.CanBeCancelled Notification.Execute(IEventContext) Notification.Send(INotificationContext) BaseEvent.Cancelled BaseEvent.Expedited BaseEvent.EventId BaseEvent.RequestorId BaseEvent.RepeatAfter BaseEvent.HasCancellationHandler BaseEvent.HasExpeditionHandler BaseEvent.Cancel() BaseEvent.Expedite() BaseEvent.Equals(BaseEvent) Priority_Queue.StablePriorityQueueNode.InsertionIndex Priority_Queue.FastPriorityQueueNode.Priority Priority_Queue.FastPriorityQueueNode.QueueIndex System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Notifications Assembly : Fibula.Notifications.dll Syntax public class CreatureMovedNotification : Notification, IEquatable<BaseEvent>, INotification, IEvent Constructors | Improve this Doc View Source CreatureMovedNotification(Func<IEnumerable<IPlayer>>, CreatureMovedNotificationArguments) Initializes a new instance of the CreatureMovedNotification class. Declaration public CreatureMovedNotification(Func<IEnumerable<IPlayer>> findTargetPlayers, CreatureMovedNotificationArguments arguments) Parameters Type Name Description System.Func < System.Collections.Generic.IEnumerable < IPlayer >> findTargetPlayers A function to determine the target players of this notification. CreatureMovedNotificationArguments arguments The arguments for this notification. Properties | Improve this Doc View Source Arguments Gets this notification's arguments. Declaration public CreatureMovedNotificationArguments Arguments { get; } Property Value Type Description CreatureMovedNotificationArguments Methods | Improve this Doc View Source Prepare(INotificationContext, IPlayer) Finalizes the notification in preparation to it being sent. Declaration protected override IEnumerable<IOutboundPacket> Prepare(INotificationContext context, IPlayer player) Parameters Type Name Description INotificationContext context The context of this notification. IPlayer player The player which this notification is being prepared for. Returns Type Description System.Collections.Generic.IEnumerable < IOutboundPacket > A collection of IOutboundPacket s, the ones to be sent. Overrides Notification.Prepare(INotificationContext, IPlayer) Implements System.IEquatable<T> INotification IEvent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Notifications.CreatureRemovedNotification.html": {
    "href": "code/Fibula.Notifications.CreatureRemovedNotification.html",
    "title": "Class CreatureRemovedNotification | Fibula MMO",
    "keywords": "Class CreatureRemovedNotification Class that represents a notification for a creature being removed. Inheritance System.Object Priority_Queue.FastPriorityQueueNode Priority_Queue.StablePriorityQueueNode BaseEvent Notification CreatureRemovedNotification Implements System.IEquatable < BaseEvent > INotification IEvent Inherited Members Notification.Sent Notification.CanBeCancelled Notification.Execute(IEventContext) Notification.Send(INotificationContext) BaseEvent.Cancelled BaseEvent.Expedited BaseEvent.EventId BaseEvent.RequestorId BaseEvent.RepeatAfter BaseEvent.HasCancellationHandler BaseEvent.HasExpeditionHandler BaseEvent.Cancel() BaseEvent.Expedite() BaseEvent.Equals(BaseEvent) Priority_Queue.StablePriorityQueueNode.InsertionIndex Priority_Queue.FastPriorityQueueNode.Priority Priority_Queue.FastPriorityQueueNode.QueueIndex System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Notifications Assembly : Fibula.Notifications.dll Syntax public class CreatureRemovedNotification : Notification, IEquatable<BaseEvent>, INotification, IEvent Constructors | Improve this Doc View Source CreatureRemovedNotification(Func<IEnumerable<IPlayer>>, CreatureRemovedNotificationArguments) Initializes a new instance of the CreatureRemovedNotification class. Declaration public CreatureRemovedNotification(Func<IEnumerable<IPlayer>> findTargetPlayers, CreatureRemovedNotificationArguments arguments) Parameters Type Name Description System.Func < System.Collections.Generic.IEnumerable < IPlayer >> findTargetPlayers A function to determine the target players of this notification. CreatureRemovedNotificationArguments arguments The arguments for this notification. Properties | Improve this Doc View Source Arguments Gets this notification's arguments. Declaration public CreatureRemovedNotificationArguments Arguments { get; } Property Value Type Description CreatureRemovedNotificationArguments Methods | Improve this Doc View Source Prepare(INotificationContext, IPlayer) Finalizes the notification in preparation to it being sent. Declaration protected override IEnumerable<IOutboundPacket> Prepare(INotificationContext context, IPlayer player) Parameters Type Name Description INotificationContext context The context of this notification. IPlayer player The player which this notification is being prepared for. Returns Type Description System.Collections.Generic.IEnumerable < IOutboundPacket > A collection of IOutboundPacket s, the ones to be sent. Overrides Notification.Prepare(INotificationContext, IPlayer) Implements System.IEquatable<T> INotification IEvent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Notifications.CreatureSpeechNotification.html": {
    "href": "code/Fibula.Notifications.CreatureSpeechNotification.html",
    "title": "Class CreatureSpeechNotification | Fibula MMO",
    "keywords": "Class CreatureSpeechNotification Class that represents a notification for a creature speech. Inheritance System.Object Priority_Queue.FastPriorityQueueNode Priority_Queue.StablePriorityQueueNode BaseEvent Notification CreatureSpeechNotification Implements System.IEquatable < BaseEvent > INotification IEvent Inherited Members Notification.Sent Notification.CanBeCancelled Notification.Execute(IEventContext) Notification.Send(INotificationContext) BaseEvent.Cancelled BaseEvent.Expedited BaseEvent.EventId BaseEvent.RequestorId BaseEvent.RepeatAfter BaseEvent.HasCancellationHandler BaseEvent.HasExpeditionHandler BaseEvent.Cancel() BaseEvent.Expedite() BaseEvent.Equals(BaseEvent) Priority_Queue.StablePriorityQueueNode.InsertionIndex Priority_Queue.FastPriorityQueueNode.Priority Priority_Queue.FastPriorityQueueNode.QueueIndex System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Notifications Assembly : Fibula.Notifications.dll Syntax public class CreatureSpeechNotification : Notification, IEquatable<BaseEvent>, INotification, IEvent Constructors | Improve this Doc View Source CreatureSpeechNotification(Func<IEnumerable<IPlayer>>, CreatureSpeechNotificationArguments) Initializes a new instance of the CreatureSpeechNotification class. Declaration public CreatureSpeechNotification(Func<IEnumerable<IPlayer>> findTargetPlayers, CreatureSpeechNotificationArguments arguments) Parameters Type Name Description System.Func < System.Collections.Generic.IEnumerable < IPlayer >> findTargetPlayers A function to determine the target players of this notification. CreatureSpeechNotificationArguments arguments The arguments for this notification. Properties | Improve this Doc View Source Arguments Gets this notification's arguments. Declaration public CreatureSpeechNotificationArguments Arguments { get; } Property Value Type Description CreatureSpeechNotificationArguments Methods | Improve this Doc View Source Prepare(INotificationContext, IPlayer) Finalizes the notification in preparation to it being sent. Declaration protected override IEnumerable<IOutboundPacket> Prepare(INotificationContext context, IPlayer player) Parameters Type Name Description INotificationContext context The context of this notification. IPlayer player The player which this notification is being prepared for. Returns Type Description System.Collections.Generic.IEnumerable < IOutboundPacket > A collection of IOutboundPacket s, the ones to be sent. Overrides Notification.Prepare(INotificationContext, IPlayer) Implements System.IEquatable<T> INotification IEvent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Notifications.CreatureTurnedNotification.html": {
    "href": "code/Fibula.Notifications.CreatureTurnedNotification.html",
    "title": "Class CreatureTurnedNotification | Fibula MMO",
    "keywords": "Class CreatureTurnedNotification Class that represents a notification for when a creature has turned. Inheritance System.Object Priority_Queue.FastPriorityQueueNode Priority_Queue.StablePriorityQueueNode BaseEvent Notification CreatureTurnedNotification Implements System.IEquatable < BaseEvent > INotification IEvent Inherited Members Notification.Sent Notification.CanBeCancelled Notification.Execute(IEventContext) Notification.Send(INotificationContext) BaseEvent.Cancelled BaseEvent.Expedited BaseEvent.EventId BaseEvent.RequestorId BaseEvent.RepeatAfter BaseEvent.HasCancellationHandler BaseEvent.HasExpeditionHandler BaseEvent.Cancel() BaseEvent.Expedite() BaseEvent.Equals(BaseEvent) Priority_Queue.StablePriorityQueueNode.InsertionIndex Priority_Queue.FastPriorityQueueNode.Priority Priority_Queue.FastPriorityQueueNode.QueueIndex System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Notifications Assembly : Fibula.Notifications.dll Syntax public class CreatureTurnedNotification : Notification, IEquatable<BaseEvent>, INotification, IEvent Constructors | Improve this Doc View Source CreatureTurnedNotification(Func<IEnumerable<IPlayer>>, CreatureTurnedNotificationArguments) Initializes a new instance of the CreatureTurnedNotification class. Declaration public CreatureTurnedNotification(Func<IEnumerable<IPlayer>> findTargetPlayers, CreatureTurnedNotificationArguments arguments) Parameters Type Name Description System.Func < System.Collections.Generic.IEnumerable < IPlayer >> findTargetPlayers A function to determine the target players of this notification. CreatureTurnedNotificationArguments arguments The arguments for this notification. Properties | Improve this Doc View Source Arguments Gets this notification's arguments. Declaration public CreatureTurnedNotificationArguments Arguments { get; } Property Value Type Description CreatureTurnedNotificationArguments Methods | Improve this Doc View Source Prepare(INotificationContext, IPlayer) Finalizes the notification in preparation to it being sent. Declaration protected override IEnumerable<IOutboundPacket> Prepare(INotificationContext context, IPlayer player) Parameters Type Name Description INotificationContext context The context of this notification. IPlayer player The player which this notification is being prepared for. Returns Type Description System.Collections.Generic.IEnumerable < IOutboundPacket > A collection of IOutboundPacket s, the ones to be sent. Overrides Notification.Prepare(INotificationContext, IPlayer) Implements System.IEquatable<T> INotification IEvent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Notifications.GenericNotification.html": {
    "href": "code/Fibula.Notifications.GenericNotification.html",
    "title": "Class GenericNotification | Fibula MMO",
    "keywords": "Class GenericNotification Class that represents a generic notification. Inheritance System.Object Priority_Queue.FastPriorityQueueNode Priority_Queue.StablePriorityQueueNode BaseEvent Notification GenericNotification Implements System.IEquatable < BaseEvent > INotification IEvent Inherited Members Notification.Sent Notification.CanBeCancelled Notification.Execute(IEventContext) Notification.Send(INotificationContext) BaseEvent.Cancelled BaseEvent.Expedited BaseEvent.EventId BaseEvent.RequestorId BaseEvent.RepeatAfter BaseEvent.HasCancellationHandler BaseEvent.HasExpeditionHandler BaseEvent.Cancel() BaseEvent.Expedite() BaseEvent.Equals(BaseEvent) Priority_Queue.StablePriorityQueueNode.InsertionIndex Priority_Queue.FastPriorityQueueNode.Priority Priority_Queue.FastPriorityQueueNode.QueueIndex System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Notifications Assembly : Fibula.Notifications.dll Syntax public class GenericNotification : Notification, IEquatable<BaseEvent>, INotification, IEvent Constructors | Improve this Doc View Source GenericNotification(Func<IEnumerable<IPlayer>>, GenericNotificationArguments) Initializes a new instance of the GenericNotification class. Declaration public GenericNotification(Func<IEnumerable<IPlayer>> findTargetPlayers, GenericNotificationArguments arguments) Parameters Type Name Description System.Func < System.Collections.Generic.IEnumerable < IPlayer >> findTargetPlayers A function to determine the target players of this notification. GenericNotificationArguments arguments The arguments for this notification. Properties | Improve this Doc View Source Arguments Gets this notification's arguments. Declaration public GenericNotificationArguments Arguments { get; } Property Value Type Description GenericNotificationArguments Methods | Improve this Doc View Source Prepare(INotificationContext, IPlayer) Finalizes the notification in preparation to it being sent. Declaration protected override IEnumerable<IOutboundPacket> Prepare(INotificationContext context, IPlayer player) Parameters Type Name Description INotificationContext context The context of this notification. IPlayer player The player which this notification is being prepared for. Returns Type Description System.Collections.Generic.IEnumerable < IOutboundPacket > A collection of IOutboundPacket s, the ones to be sent. Overrides Notification.Prepare(INotificationContext, IPlayer) Implements System.IEquatable<T> INotification IEvent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Notifications.html": {
    "href": "code/Fibula.Notifications.html",
    "title": "Namespace Fibula.Notifications | Fibula MMO",
    "keywords": "Namespace Fibula.Notifications Classes CreatureMovedNotification Class that represents a notification for when a creature has moved. CreatureRemovedNotification Class that represents a notification for a creature being removed. CreatureSpeechNotification Class that represents a notification for a creature speech. CreatureTurnedNotification Class that represents a notification for when a creature has turned. GenericNotification Class that represents a generic notification. Notification Abstract class that represents a notification to a player's connection. Notifications are basically any message that the server sends to the client of a specific player. NotificationContext Class that represents a context for notifications. TextMessageNotification Class that represents a notification for text messages. TileUpdatedNotification Class that represents a notification for a tile update. WorldLightChangedNotification Class that represents a notification for a world light change."
  },
  "code/Fibula.Notifications.Notification.html": {
    "href": "code/Fibula.Notifications.Notification.html",
    "title": "Class Notification | Fibula MMO",
    "keywords": "Class Notification Abstract class that represents a notification to a player's connection. Notifications are basically any message that the server sends to the client of a specific player. Inheritance System.Object Priority_Queue.FastPriorityQueueNode Priority_Queue.StablePriorityQueueNode BaseEvent Notification CreatureMovedNotification CreatureRemovedNotification CreatureSpeechNotification CreatureTurnedNotification GenericNotification TextMessageNotification TileUpdatedNotification WorldLightChangedNotification Implements System.IEquatable < BaseEvent > INotification IEvent Inherited Members BaseEvent.Cancelled BaseEvent.Expedited BaseEvent.EventId BaseEvent.RequestorId BaseEvent.RepeatAfter BaseEvent.HasCancellationHandler BaseEvent.HasExpeditionHandler BaseEvent.Cancel() BaseEvent.Expedite() BaseEvent.Equals(BaseEvent) Priority_Queue.StablePriorityQueueNode.InsertionIndex Priority_Queue.FastPriorityQueueNode.Priority Priority_Queue.FastPriorityQueueNode.QueueIndex System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Notifications Assembly : Fibula.Notifications.dll Syntax public abstract class Notification : BaseEvent, IEquatable<BaseEvent>, INotification, IEvent Constructors | Improve this Doc View Source Notification(Func<IEnumerable<IPlayer>>) Initializes a new instance of the Notification class. Declaration protected Notification(Func<IEnumerable<IPlayer>> findTargetPlayers) Parameters Type Name Description System.Func < System.Collections.Generic.IEnumerable < IPlayer >> findTargetPlayers A function to determine the target players of this notification. Properties | Improve this Doc View Source CanBeCancelled Gets or sets a value indicating whether the event can be cancelled. Declaration public override bool CanBeCancelled { get; protected set; } Property Value Type Description System.Boolean Overrides BaseEvent.CanBeCancelled Methods | Improve this Doc View Source Execute(IEventContext) Sends the notification to the players intented. Declaration public override void Execute(IEventContext context) Parameters Type Name Description IEventContext context The context for this notification. Overrides BaseEvent.Execute(IEventContext) | Improve this Doc View Source Prepare(INotificationContext, IPlayer) Finalizes the notification in preparation to it being sent. Declaration protected abstract IEnumerable<IOutboundPacket> Prepare(INotificationContext context, IPlayer player) Parameters Type Name Description INotificationContext context The context of this notification. IPlayer player The player which this notification is being prepared for. Returns Type Description System.Collections.Generic.IEnumerable < IOutboundPacket > A collection of IOutboundPacket s, the ones to be sent. | Improve this Doc View Source Send(INotificationContext) Sends the notification to the players intented. Declaration public void Send(INotificationContext context) Parameters Type Name Description INotificationContext context The context for this notification. Events | Improve this Doc View Source Sent Event to call when the notification is sent. Declaration public event OnSent Sent Event Type Type Description OnSent Implements System.IEquatable<T> INotification IEvent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Notifications.NotificationContext.html": {
    "href": "code/Fibula.Notifications.NotificationContext.html",
    "title": "Class NotificationContext | Fibula MMO",
    "keywords": "Class NotificationContext Class that represents a context for notifications. Inheritance System.Object NotificationContext Implements INotificationContext IEventContext Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Notifications Assembly : Fibula.Notifications.dll Syntax public class NotificationContext : INotificationContext, IEventContext Constructors | Improve this Doc View Source NotificationContext(ILogger, IMapDescriptor, ICreatureFinder) Initializes a new instance of the NotificationContext class. Declaration public NotificationContext(ILogger logger, IMapDescriptor mapDescriptor, ICreatureFinder creatureFinder) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. IMapDescriptor mapDescriptor A reference to the map descriptor in use. ICreatureFinder creatureFinder A reference to the creature finder in use. Properties | Improve this Doc View Source CreatureFinder Gets the creature finder in use. Declaration public ICreatureFinder CreatureFinder { get; } Property Value Type Description ICreatureFinder | Improve this Doc View Source Logger Gets the logger in use. Declaration public ILogger Logger { get; } Property Value Type Description Serilog.ILogger | Improve this Doc View Source MapDescriptor Gets the map descriptor in use. Declaration public IMapDescriptor MapDescriptor { get; } Property Value Type Description IMapDescriptor Implements INotificationContext IEventContext Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Notifications.TextMessageNotification.html": {
    "href": "code/Fibula.Notifications.TextMessageNotification.html",
    "title": "Class TextMessageNotification | Fibula MMO",
    "keywords": "Class TextMessageNotification Class that represents a notification for text messages. Inheritance System.Object Priority_Queue.FastPriorityQueueNode Priority_Queue.StablePriorityQueueNode BaseEvent Notification TextMessageNotification Implements System.IEquatable < BaseEvent > INotification IEvent Inherited Members Notification.Sent Notification.CanBeCancelled Notification.Execute(IEventContext) Notification.Send(INotificationContext) BaseEvent.Cancelled BaseEvent.Expedited BaseEvent.EventId BaseEvent.RequestorId BaseEvent.RepeatAfter BaseEvent.HasCancellationHandler BaseEvent.HasExpeditionHandler BaseEvent.Cancel() BaseEvent.Expedite() BaseEvent.Equals(BaseEvent) Priority_Queue.StablePriorityQueueNode.InsertionIndex Priority_Queue.FastPriorityQueueNode.Priority Priority_Queue.FastPriorityQueueNode.QueueIndex System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Notifications Assembly : Fibula.Notifications.dll Syntax public class TextMessageNotification : Notification, IEquatable<BaseEvent>, INotification, IEvent Constructors | Improve this Doc View Source TextMessageNotification(Func<IEnumerable<IPlayer>>, TextMessageNotificationArguments) Initializes a new instance of the TextMessageNotification class. Declaration public TextMessageNotification(Func<IEnumerable<IPlayer>> findTargetPlayers, TextMessageNotificationArguments arguments) Parameters Type Name Description System.Func < System.Collections.Generic.IEnumerable < IPlayer >> findTargetPlayers A function to determine the target players of this notification. TextMessageNotificationArguments arguments The arguments for this notification. Properties | Improve this Doc View Source Arguments Gets this notification's arguments. Declaration public TextMessageNotificationArguments Arguments { get; } Property Value Type Description TextMessageNotificationArguments Methods | Improve this Doc View Source Prepare(INotificationContext, IPlayer) Finalizes the notification in preparation to it being sent. Declaration protected override IEnumerable<IOutboundPacket> Prepare(INotificationContext context, IPlayer player) Parameters Type Name Description INotificationContext context The context of this notification. IPlayer player The player which this notification is being prepared for. Returns Type Description System.Collections.Generic.IEnumerable < IOutboundPacket > A collection of IOutboundPacket s, the ones to be sent. Overrides Notification.Prepare(INotificationContext, IPlayer) Implements System.IEquatable<T> INotification IEvent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Notifications.TileUpdatedNotification.html": {
    "href": "code/Fibula.Notifications.TileUpdatedNotification.html",
    "title": "Class TileUpdatedNotification | Fibula MMO",
    "keywords": "Class TileUpdatedNotification Class that represents a notification for a tile update. Inheritance System.Object Priority_Queue.FastPriorityQueueNode Priority_Queue.StablePriorityQueueNode BaseEvent Notification TileUpdatedNotification Implements System.IEquatable < BaseEvent > INotification IEvent Inherited Members Notification.Sent Notification.CanBeCancelled Notification.Execute(IEventContext) Notification.Send(INotificationContext) BaseEvent.Cancelled BaseEvent.Expedited BaseEvent.EventId BaseEvent.RequestorId BaseEvent.RepeatAfter BaseEvent.HasCancellationHandler BaseEvent.HasExpeditionHandler BaseEvent.Cancel() BaseEvent.Expedite() BaseEvent.Equals(BaseEvent) Priority_Queue.StablePriorityQueueNode.InsertionIndex Priority_Queue.FastPriorityQueueNode.Priority Priority_Queue.FastPriorityQueueNode.QueueIndex System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Notifications Assembly : Fibula.Notifications.dll Syntax public class TileUpdatedNotification : Notification, IEquatable<BaseEvent>, INotification, IEvent Constructors | Improve this Doc View Source TileUpdatedNotification(Func<IEnumerable<IPlayer>>, TileUpdatedNotificationArguments) Initializes a new instance of the TileUpdatedNotification class. Declaration public TileUpdatedNotification(Func<IEnumerable<IPlayer>> findTargetPlayers, TileUpdatedNotificationArguments arguments) Parameters Type Name Description System.Func < System.Collections.Generic.IEnumerable < IPlayer >> findTargetPlayers A function to determine the target players of this notification. TileUpdatedNotificationArguments arguments The arguments for this notification. Properties | Improve this Doc View Source Arguments Gets this notification's arguments. Declaration public TileUpdatedNotificationArguments Arguments { get; } Property Value Type Description TileUpdatedNotificationArguments Methods | Improve this Doc View Source Prepare(INotificationContext, IPlayer) Finalizes the notification in preparation to it being sent. Declaration protected override IEnumerable<IOutboundPacket> Prepare(INotificationContext context, IPlayer player) Parameters Type Name Description INotificationContext context The context of this notification. IPlayer player The player which this notification is being prepared for. Returns Type Description System.Collections.Generic.IEnumerable < IOutboundPacket > A collection of IOutboundPacket s, the ones to be sent. Overrides Notification.Prepare(INotificationContext, IPlayer) Implements System.IEquatable<T> INotification IEvent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Notifications.WorldLightChangedNotification.html": {
    "href": "code/Fibula.Notifications.WorldLightChangedNotification.html",
    "title": "Class WorldLightChangedNotification | Fibula MMO",
    "keywords": "Class WorldLightChangedNotification Class that represents a notification for a world light change. Inheritance System.Object Priority_Queue.FastPriorityQueueNode Priority_Queue.StablePriorityQueueNode BaseEvent Notification WorldLightChangedNotification Implements System.IEquatable < BaseEvent > INotification IEvent Inherited Members Notification.Sent Notification.CanBeCancelled Notification.Execute(IEventContext) Notification.Send(INotificationContext) BaseEvent.Cancelled BaseEvent.Expedited BaseEvent.EventId BaseEvent.RequestorId BaseEvent.RepeatAfter BaseEvent.HasCancellationHandler BaseEvent.HasExpeditionHandler BaseEvent.Cancel() BaseEvent.Expedite() BaseEvent.Equals(BaseEvent) Priority_Queue.StablePriorityQueueNode.InsertionIndex Priority_Queue.FastPriorityQueueNode.Priority Priority_Queue.FastPriorityQueueNode.QueueIndex System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Notifications Assembly : Fibula.Notifications.dll Syntax public class WorldLightChangedNotification : Notification, IEquatable<BaseEvent>, INotification, IEvent Constructors | Improve this Doc View Source WorldLightChangedNotification(Func<IEnumerable<IPlayer>>, WorldLightChangedNotificationArguments) Initializes a new instance of the WorldLightChangedNotification class. Declaration public WorldLightChangedNotification(Func<IEnumerable<IPlayer>> findTargetPlayers, WorldLightChangedNotificationArguments arguments) Parameters Type Name Description System.Func < System.Collections.Generic.IEnumerable < IPlayer >> findTargetPlayers A function to determine the target players of this notification. WorldLightChangedNotificationArguments arguments The arguments for this notification. Properties | Improve this Doc View Source Arguments Gets this notification's arguments. Declaration public WorldLightChangedNotificationArguments Arguments { get; } Property Value Type Description WorldLightChangedNotificationArguments Methods | Improve this Doc View Source Prepare(INotificationContext, IPlayer) Finalizes the notification in preparation to it being sent. Declaration protected override IEnumerable<IOutboundPacket> Prepare(INotificationContext context, IPlayer player) Parameters Type Name Description INotificationContext context The context of this notification. IPlayer player The player which this notification is being prepared for. Returns Type Description System.Collections.Generic.IEnumerable < IOutboundPacket > A collection of IOutboundPacket s, the ones to be sent. Overrides Notification.Prepare(INotificationContext, IPlayer) Implements System.IEquatable<T> INotification IEvent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Parsing.CipFiles.CipFileParser.html": {
    "href": "code/Fibula.Parsing.CipFiles.CipFileParser.html",
    "title": "Class CipFileParser | Fibula MMO",
    "keywords": "Class CipFileParser Static class that parses Cip files. Inheritance System.Object CipFileParser Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Parsing.CipFiles Assembly : Fibula.Parsing.CipFiles.dll Syntax public static class CipFileParser Fields | Improve this Doc View Source CloseCurly The close curly brace character. Declaration public const char CloseCurly = '}' Field Value Type Description System.Char | Improve this Doc View Source CloseParenthesis The close parenthesis character. Declaration public const char CloseParenthesis = ')' Field Value Type Description System.Char | Improve this Doc View Source Comma The comma character. Declaration public const char Comma = ',' Field Value Type Description System.Char | Improve this Doc View Source ContentAttributeName The name of the content attribute. Declaration public const string ContentAttributeName = \"Content\" Field Value Type Description System.String | Improve this Doc View Source EqualsSign The equals sign character. Declaration public const char EqualsSign = '=' Field Value Type Description System.Char | Improve this Doc View Source OpenCurly The open curly brace character. Declaration public const char OpenCurly = '{' Field Value Type Description System.Char | Improve this Doc View Source OpenParenthesis The open parenthesis character. Declaration public const char OpenParenthesis = '(' Field Value Type Description System.Char | Improve this Doc View Source Space The space character. Declaration public const char Space = ' ' Field Value Type Description System.Char Methods | Improve this Doc View Source Parse(String) Attempts to parse a string into a CipElement . Declaration public static IEnumerable<CipElement> Parse(string inputStr) Parameters Type Name Description System.String inputStr The input string. Returns Type Description System.Collections.Generic.IEnumerable < CipElement > A collection of CipElement s parsed. | Improve this Doc View Source ParseMonsterInventory(String) Parses a monster's possible inventory items out of a string. Declaration public static IEnumerable<(ushort typeId, byte maxAmount, ushort dropChance)> ParseMonsterInventory(string inventoryStr) Parameters Type Name Description System.String inventoryStr The string to parse. Returns Type Description System.Collections.Generic.IEnumerable < System.ValueTuple < System.UInt16 , System.Byte , System.UInt16 >> A collection of tuples containing the possible inventory items of the monster. | Improve this Doc View Source ParseMonsterSkills(String) Parses a monster's skills out of a string. Declaration public static IEnumerable<(string, int, int, int, uint, uint, byte)> ParseMonsterSkills(string skillsStr) Parameters Type Name Description System.String skillsStr The string to parse. Returns Type Description System.Collections.Generic.IEnumerable < System.ValueTuple < System.String , System.Int32 , System.Int32 , System.Int32 , System.UInt32 , System.UInt32 , System.Byte >> A collection of tuples containing the skills information. | Improve this Doc View Source ParseMonsterSpells(String) Parses monster spells out of a string. Declaration public static IEnumerable<(IEnumerable<string> conditions, IEnumerable<string> effects, string chance)> ParseMonsterSpells(string spellsStr) Parameters Type Name Description System.String spellsStr The string to parse. Returns Type Description System.Collections.Generic.IEnumerable < System.ValueTuple < System.Collections.Generic.IEnumerable < System.String >, System.Collections.Generic.IEnumerable < System.String >, System.String >> A collection of data containing the spell conditions, effects and an asociated chance. | Improve this Doc View Source ParseMonsterStrategy(String) Parses a monster's strategy values out of a string. Declaration public static (byte, byte, byte, byte) ParseMonsterStrategy(string strategyStr) Parameters Type Name Description System.String strategyStr The string to parse. Returns Type Description System.ValueTuple < System.Byte , System.Byte , System.Byte , System.Byte > A tuple containing the monster strategy chances. | Improve this Doc View Source ParsePhrases(String) Parses a creature's phrases out of a string. Declaration public static IEnumerable<string> ParsePhrases(string phrasesStr) Parameters Type Name Description System.String phrasesStr The string to parse. Returns Type Description System.Collections.Generic.IEnumerable < System.String > A collection of strings, the phrases of the creature."
  },
  "code/Fibula.Parsing.CipFiles.CipGrammar.html": {
    "href": "code/Fibula.Parsing.CipFiles.CipGrammar.html",
    "title": "Class CipGrammar | Fibula MMO",
    "keywords": "Class CipGrammar Static class that contains common grammar used to parse CipSoft files. Inheritance System.Object CipGrammar Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Parsing.CipFiles Assembly : Fibula.Parsing.CipFiles.dll Syntax public static class CipGrammar Remarks NOTE: Members of this class must remain public in order for it to work correctly, because Sprache. Fields | Improve this Doc View Source ActionFunction Parses action functions. Declaration public static readonly Parser<ActionFunction> ActionFunction Field Value Type Description Sprache.Parser < ActionFunction > | Improve this Doc View Source Actions Parses a collection of action functions. Declaration public static readonly Parser<IEnumerable<string>> Actions Field Value Type Description Sprache.Parser < System.Collections.Generic.IEnumerable < System.String >> | Improve this Doc View Source Argument Parses a function arguments that are only text and numbers. Declaration public static readonly Parser<string> Argument Field Value Type Description Sprache.Parser < System.String > | Improve this Doc View Source Arguments Parses multiple arguments. Declaration public static readonly Parser<IEnumerable<string>> Arguments Field Value Type Description Sprache.Parser < System.Collections.Generic.IEnumerable < System.String >> | Improve this Doc View Source Backslash The backslash character. Declaration public static readonly Parser<char> Backslash Field Value Type Description Sprache.Parser < System.Char > | Improve this Doc View Source BracketedTupleArgument Parses a bracket tuple argument in the form: [val0, val1, .. valN]. Declaration public static readonly Parser<string> BracketedTupleArgument Field Value Type Description Sprache.Parser < System.String > | Improve this Doc View Source CloseBracket The close bracket character. Declaration public static readonly Parser<char> CloseBracket Field Value Type Description Sprache.Parser < System.Char > | Improve this Doc View Source CloseCurly The close curly brace character. Declaration public static readonly Parser<char> CloseCurly Field Value Type Description Sprache.Parser < System.Char > | Improve this Doc View Source CloseParenthesis The close parenthesis character. Declaration public static readonly Parser<char> CloseParenthesis Field Value Type Description Sprache.Parser < System.Char > | Improve this Doc View Source Colon The colon character. Declaration public static readonly Parser<char> Colon Field Value Type Description Sprache.Parser < System.Char > | Improve this Doc View Source Comma The comma character. Declaration public static readonly Parser<char> Comma Field Value Type Description Sprache.Parser < System.Char > | Improve this Doc View Source ComparisonFunction Parses comparison functions. Declaration public static readonly Parser<ComparisonFunction> ComparisonFunction Field Value Type Description Sprache.Parser < ComparisonFunction > | Improve this Doc View Source Conditions Parses a collection of condition functions. Declaration public static readonly Parser<IEnumerable<string>> Conditions Field Value Type Description Sprache.Parser < System.Collections.Generic.IEnumerable < System.String >> | Improve this Doc View Source ConditionsActionsSeparator The separator between a rule's conditions and actions. Declaration public static readonly Parser<IEnumerable<char>> ConditionsActionsSeparator Field Value Type Description Sprache.Parser < System.Collections.Generic.IEnumerable < System.Char >> | Improve this Doc View Source CreaturePhrases Parses a creature phrases in the form { \"phrase0\", \"phrase1\", .. \"phraseN\" }. Declaration public static readonly Parser<IEnumerable<string>> CreaturePhrases Field Value Type Description Sprache.Parser < System.Collections.Generic.IEnumerable < System.String >> | Improve this Doc View Source DoubleQuote The double quote character. Declaration public static readonly Parser<char> DoubleQuote Field Value Type Description Sprache.Parser < System.Char > | Improve this Doc View Source EqualSign The equals sign character. Declaration public static readonly Parser<char> EqualSign Field Value Type Description Sprache.Parser < System.Char > | Improve this Doc View Source EqualToComparison The 'equals' comparison. Declaration public static readonly Parser<string> EqualToComparison Field Value Type Description Sprache.Parser < System.String > | Improve this Doc View Source Escaped An escaped character, preceded by '&apos;. Declaration public static readonly Parser<char> Escaped Field Value Type Description Sprache.Parser < System.Char > | Improve this Doc View Source FunctionOrComparisonString Parses a function in the form: Func(arg0, arg1, ..., argN). Declaration public static readonly Parser<string> FunctionOrComparisonString Field Value Type Description Sprache.Parser < System.String > | Improve this Doc View Source GreaterThanComparison The 'greater than' comparison. Declaration public static readonly Parser<string> GreaterThanComparison Field Value Type Description Sprache.Parser < System.String > | Improve this Doc View Source GreaterThanOrEqualToComparison The 'greater than or equal' comparison. Declaration public static readonly Parser<string> GreaterThanOrEqualToComparison Field Value Type Description Sprache.Parser < System.String > | Improve this Doc View Source KeyValStr Parses a Key/Value pair in the form: key=value. Declaration public static readonly Parser<string> KeyValStr Field Value Type Description Sprache.Parser < System.String > | Improve this Doc View Source LessThanComparison The 'less than' comparison. Declaration public static readonly Parser<string> LessThanComparison Field Value Type Description Sprache.Parser < System.String > | Improve this Doc View Source LessThanOrEqualToComparison The 'less than or equal' comparison. Declaration public static readonly Parser<string> LessThanOrEqualToComparison Field Value Type Description Sprache.Parser < System.String > | Improve this Doc View Source LocationString Parses a location string, in the form [x, y, z]. Declaration public static readonly Parser<string> LocationString Field Value Type Description Sprache.Parser < System.String > | Improve this Doc View Source MonsterInventory Parses a monster inventory. Declaration public static readonly Parser<IEnumerable<(ushort, byte, ushort)>> MonsterInventory Field Value Type Description Sprache.Parser < System.Collections.Generic.IEnumerable < System.ValueTuple < System.UInt16 , System.Byte , System.UInt16 >>> | Improve this Doc View Source MonsterInventoryEntry Parses monster inventory entries. Declaration public static readonly Parser<(ushort, byte, ushort)> MonsterInventoryEntry Field Value Type Description Sprache.Parser < System.ValueTuple < System.UInt16 , System.Byte , System.UInt16 >> | Improve this Doc View Source MonsterSkillEntry Parses monster skill entries, in the form (skillName, currentLevel, minimumLevel, maximumLevel, currentCount, countForNextLevel, addOnLevel). Declaration public static readonly Parser<(string, int, int, int, uint, uint, byte)> MonsterSkillEntry Field Value Type Description Sprache.Parser < System.ValueTuple < System.String , System.Int32 , System.Int32 , System.Int32 , System.UInt32 , System.UInt32 , System.Byte >> | Improve this Doc View Source MonsterSkills Parses a monster's skills. Declaration public static readonly Parser<IEnumerable<(string, int, int, int, uint, uint, byte)>> MonsterSkills Field Value Type Description Sprache.Parser < System.Collections.Generic.IEnumerable < System.ValueTuple < System.String , System.Int32 , System.Int32 , System.Int32 , System.UInt32 , System.UInt32 , System.Byte >>> | Improve this Doc View Source MonsterSpellRule Parses monster spells. Declaration public static readonly Parser<(IEnumerable<string> conditions, IEnumerable<string> effects, string chance)> MonsterSpellRule Field Value Type Description Sprache.Parser < System.ValueTuple < System.Collections.Generic.IEnumerable < System.String >, System.Collections.Generic.IEnumerable < System.String >, System.String >> | Improve this Doc View Source MonsterSpellRules Parses monster spells. Declaration public static readonly Parser<IEnumerable<(IEnumerable<string> conditions, IEnumerable<string> effects, string chance)>> MonsterSpellRules Field Value Type Description Sprache.Parser < System.Collections.Generic.IEnumerable < System.ValueTuple < System.Collections.Generic.IEnumerable < System.String >, System.Collections.Generic.IEnumerable < System.String >, System.String >>> | Improve this Doc View Source MonsterStrategy Parses a monster strategy. Declaration public static readonly Parser<(byte, byte, byte, byte)> MonsterStrategy Field Value Type Description Sprache.Parser < System.ValueTuple < System.Byte , System.Byte , System.Byte , System.Byte >> | Improve this Doc View Source OneOrMoreArguments Parses a multiple arguments separated by a comma: val0, val1, .. valN. Declaration public static readonly Parser<IEnumerable<string>> OneOrMoreArguments Field Value Type Description Sprache.Parser < System.Collections.Generic.IEnumerable < System.String >> | Improve this Doc View Source OpenBracket The open bracket character. Declaration public static readonly Parser<char> OpenBracket Field Value Type Description Sprache.Parser < System.Char > | Improve this Doc View Source OpenCurly The open curly brace character. Declaration public static readonly Parser<char> OpenCurly Field Value Type Description Sprache.Parser < System.Char > | Improve this Doc View Source OpenParenthesis The open parenthesis character. Declaration public static readonly Parser<char> OpenParenthesis Field Value Type Description Sprache.Parser < System.Char > | Improve this Doc View Source ParenthesizedTupleArgument Parses a parenthesis tuple argument in the form: (val0, val1, .. valN). Declaration public static readonly Parser<string> ParenthesizedTupleArgument Field Value Type Description Sprache.Parser < System.String > | Improve this Doc View Source Quoted Any character except for double quotes. Declaration public static readonly Parser<char> Quoted Field Value Type Description Sprache.Parser < System.Char > | Improve this Doc View Source QuotedMessage A message enclosed in double quotes. Declaration public static readonly Parser<string> QuotedMessage Field Value Type Description Sprache.Parser < System.String > | Improve this Doc View Source Text Any text, except for special characters. Declaration public static readonly Parser<string> Text Field Value Type Description Sprache.Parser < System.String >"
  },
  "code/Fibula.Parsing.CipFiles.Enumerations.CipItemAttribute.html": {
    "href": "code/Fibula.Parsing.CipFiles.Enumerations.CipItemAttribute.html",
    "title": "Enum CipItemAttribute | Fibula MMO",
    "keywords": "Enum CipItemAttribute Enumerates the different attributes of an item in the CIP files. Namespace : Fibula.Parsing.CipFiles.Enumerations Assembly : Fibula.Parsing.CipFiles.dll Syntax public enum CipItemAttribute : byte Remarks These will all be revisited and possibly change a lot. Fields Name Description AbsTeleportEffect Effect to display on absolute teleport. AmmoAttackValue The attack value for ammunition. AmmoEffectStrength The strength of any AmmoSpecialEffect specified. AmmoMissile The type of missile. AmmoSpecialEffect Indicates that this ammunition produces a special effect. AmmoType The type of ammunition. Amount Indicates that this item is cumulative, and if so, it's current amount. ArmorValue The armor value of an item. AvoidDamageTypes Indicates that stepping on this item should be avoided for this specific damage types. BodyPosition Inidicates that this item is dessable and where it should be dressed. BowAmmoType Inidicates that this item can be used to shoot projectiles, and if so, what type of projectiles it supports. BowRange Inidicates that this item can be used to shoot projectiles, and if so, how far can it be used from. Brightness Inidicates the level of irradiated light from this item. Capacity Inidicates the capacity that this item can hold. ChangeTarget Indicates that this item can be changed when used, and if so, to what other item. ContainerLiquidType The type of liquids that this container supports. CorpseType The type of corpse that this item is. DamageReduction The percentual value of damage reduced by an item. DestroyTarget The target id to transform after this item is destroyed. DisguiseTarget The id of the item that this item disguises as. Elevation The elevation that this item adds. ExpireTarget The id of the item that this item expires to. FontSize The size of font that this item has, which directly correlates with how far someone can read it from. InformationType An extra type of information that this item provides. KeydoorTarget The id of the item to change into once the correct key is used on this door. LeveldoorTarget The id of the item to change into once this gate is used. LightColor The color of the light irradiated by this item. MaxLength The maximum length that this item support when accepting text. MaxLengthOnce The maximum length that this item support when accepting text once. Meaning A special meaning value. MinimumLevel The minimum level that a player must be to wield this item. NamedoorTarget The id to change to in case the user uses and is named on this door. Nutrition The nutrition that this item provides. PoolLiquidType The type of liquid that this pool is of. Professions The professions that can wield this item. ProtectionDamageTypes The type of damages that this item provides protection from. QuestdoorTarget The id to change to in case the user successfully uses this quest door. RelTeleportDisplacement The value to teleport by relatively. RelTeleportEffect Effect to display on absolute teleport. RotateTarget The id of the item to rotate this item to. SavedExpireTime The time left for item expiration. ShieldDefendValue The shield value that this item provides. SkillModification The value by which this item modifies a certain skill by. SkillNumber The skill that this item modifies. SourceLiquidType The type of liquid that this item is a source for. String The text that this item holds. ThrowAttackValue The attack value of this item when thrown. ThrowDefendValue The defense value of this item when thrown. ThrowEffectStrength The strength of the effect that this item produces when thrown. ThrowFragility The percentual chance that this item breaks when thrown. ThrowMissile The missile effect that this item produces when thrown. ThrowRange The range within which this item can ben thrown. ThrowSpecialEffect The effect produced when (and where) this item impacts. TotalExpireTime the total (starting) expiration time of this item. TotalUses The maximum uses that this item has. WandAttackStrength The attack strength for wand items. WandAttackVariation The attack damage variation for wand items. WandDamageType The damage type for wand items. WandManaConsumption The mana required to use a wand item. WandMissile The missile effect of a wand item. WandRange The range of the wand item. Waypoints The speed at which the ground item allows to be walked in. WeaponAttackValue The attack value of a weapon. WeaponDefendValue The defense value of a weapon. WeaponType The type of a weapon. WearoutTarget The id of the item into which this item wears out to, after it's maximum uses. Weight The weight of an item. Extension Methods ObjectExtensions.YieldSingleItem<CipItemAttribute>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<CipItemAttribute>(String) CipItemAttributeExtensions.ToItemAttribute()"
  },
  "code/Fibula.Parsing.CipFiles.Enumerations.CipItemFlag.html": {
    "href": "code/Fibula.Parsing.CipFiles.Enumerations.CipItemFlag.html",
    "title": "Enum CipItemFlag | Fibula MMO",
    "keywords": "Enum CipItemFlag Enumerates all known CIP item flags. Namespace : Fibula.Parsing.CipFiles.Enumerations Assembly : Fibula.Parsing.CipFiles.dll Syntax public enum CipItemFlag : byte Fields Name Description Ammo The item is ammunition. Armor The item has armor traits. Avoid The item hints at avoiding pathfind. Bank The item has pathfinding. Bed The item is a bed. Bottom The item stays on bottom. Bow The item shoots ammunition. ChangeUse The item can be changed on use. Chest The item is a chest. Clip The item is clipped. Clothes The item can be dressed. CollisionEvent The item can trigger collision event rules. Container The item is a container. Corpse The item is a corpse. Cumulative The item is cummulative. Destroy The item can be destroyed. Disguise The item looks like another item. DistUse The item can be used at a distance. Expire The item has time based expiration. ExpireStop The item's expiration stops on use or undressing. Food The item has nutrition. ForceUse The item can be used even if there are other items blocking it. Hang The item can be hanged on a wall with a hook. Height The item has height. HookEast The item can hang/unhang as long as it is interacted with from the east. HookSouth The item can hang/unhang as long as it is interacted with from the south. Information The item provides extra information. Key The item is a key. KeyDoor The item is a door that can be locked. LevelDoor The item is a door that has level requirements. Light The item irradiates light. LiquidContainer The item is a liquid container. LiquidPool The item is a liquid pool. LiquidSource The item is a liquid source. MagicField The item is a magic field. MovementEvent The item can trigger movement events. MultiUse The item can be used on other things. NameDoor The item is a door which has a list of allowed users. Protection The item provides protection against some type of damage. QuestDoor The item is a door that is part of a quest. RestrictLevel The item has a level restriction. RestrictProfession The item has a profession restriction. RopeSpot The item is a spot where a rope can be used. Rotate The item can be rotated. Rune The item is a rune. SeparationEvent The item can trigger separation events. Shield The item has shield traits. ShowDetail The item has extra detail, like expire time. SkillBoost The item boosts skills. Special The item has special traits. Take The item can be taken. TeleportAbsolute The item is a teleportation device to an absolute location. TeleportRelative The item is a teleportation device to a relative location. Text The item holds text information. Throw The item can be thrown (as a weapon). Top The item stays on top of others. Unlay The item blocks laying other items on top. Unmove The item cannot be moved. Unpass The item blocks movement on top of it. Unthrow The item blocks throws through it. UseEvent The item can trigger use events. Wand The item is a wand. Weapon The item is a weapon. WearOut The item has a limited number of uses. Write The item can be writen on, multiple times. WriteOnce The item can be writen on only once. Extension Methods ObjectExtensions.YieldSingleItem<CipItemFlag>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<CipItemFlag>(String) CipItemFlagExtensions.ToItemFlag()"
  },
  "code/Fibula.Parsing.CipFiles.Enumerations.html": {
    "href": "code/Fibula.Parsing.CipFiles.Enumerations.html",
    "title": "Namespace Fibula.Parsing.CipFiles.Enumerations | Fibula MMO",
    "keywords": "Namespace Fibula.Parsing.CipFiles.Enumerations Enums CipItemAttribute Enumerates the different attributes of an item in the CIP files. CipItemFlag Enumerates all known CIP item flags."
  },
  "code/Fibula.Parsing.CipFiles.Extensions.CipItemAttributeExtensions.html": {
    "href": "code/Fibula.Parsing.CipFiles.Extensions.CipItemAttributeExtensions.html",
    "title": "Class CipItemAttributeExtensions | Fibula MMO",
    "keywords": "Class CipItemAttributeExtensions Helper class that contains extension methods for CipItemAttribute s. Inheritance System.Object CipItemAttributeExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Parsing.CipFiles.Extensions Assembly : Fibula.Parsing.CipFiles.dll Syntax public static class CipItemAttributeExtensions Methods | Improve this Doc View Source ToItemAttribute(CipItemAttribute) Converts a CipItemAttribute to an ItemAttribute . Declaration public static ItemAttribute? ToItemAttribute(this CipItemAttribute cipAttribute) Parameters Type Name Description CipItemAttribute cipAttribute The Cip item attribute to convert. Returns Type Description System.Nullable < ItemAttribute > The ItemAttribute picked, if any."
  },
  "code/Fibula.Parsing.CipFiles.Extensions.CipItemFlagExtensions.html": {
    "href": "code/Fibula.Parsing.CipFiles.Extensions.CipItemFlagExtensions.html",
    "title": "Class CipItemFlagExtensions | Fibula MMO",
    "keywords": "Class CipItemFlagExtensions Helper class that contains extension methods for CipItemFlag s. Inheritance System.Object CipItemFlagExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Parsing.CipFiles.Extensions Assembly : Fibula.Parsing.CipFiles.dll Syntax public static class CipItemFlagExtensions Methods | Improve this Doc View Source ToItemFlag(CipItemFlag) Converts a CipItemFlag to an ItemFlag . Declaration public static ItemFlag? ToItemFlag(this CipItemFlag cipFlag) Parameters Type Name Description CipItemFlag cipFlag The CIP item flag to convert. Returns Type Description System.Nullable < ItemFlag > The ItemFlag picked, if any."
  },
  "code/Fibula.Parsing.CipFiles.Extensions.html": {
    "href": "code/Fibula.Parsing.CipFiles.Extensions.html",
    "title": "Namespace Fibula.Parsing.CipFiles.Extensions | Fibula MMO",
    "keywords": "Namespace Fibula.Parsing.CipFiles.Extensions Classes CipItemAttributeExtensions Helper class that contains extension methods for CipItemAttribute s. CipItemFlagExtensions Helper class that contains extension methods for CipItemFlag s."
  },
  "code/Fibula.Parsing.CipFiles.html": {
    "href": "code/Fibula.Parsing.CipFiles.html",
    "title": "Namespace Fibula.Parsing.CipFiles | Fibula MMO",
    "keywords": "Namespace Fibula.Parsing.CipFiles Classes CipFileParser Static class that parses Cip files. CipGrammar Static class that contains common grammar used to parse CipSoft files."
  },
  "code/Fibula.Parsing.CipFiles.Models.CipAttribute.html": {
    "href": "code/Fibula.Parsing.CipFiles.Models.CipAttribute.html",
    "title": "Class CipAttribute | Fibula MMO",
    "keywords": "Class CipAttribute Class that represents an attribute. Inheritance System.Object CipAttribute Implements IParsedAttribute Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Parsing.CipFiles.Models Assembly : Fibula.Parsing.CipFiles.dll Syntax public class CipAttribute : IParsedAttribute Properties | Improve this Doc View Source Name Gets or sets the attribute's name. Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Value Gets or sets the attribute's value. Declaration public object Value { get; set; } Property Value Type Description System.Object Implements IParsedAttribute Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Parsing.CipFiles.Models.CipElement.html": {
    "href": "code/Fibula.Parsing.CipFiles.Models.CipElement.html",
    "title": "Class CipElement | Fibula MMO",
    "keywords": "Class CipElement Class that represents an element. Inheritance System.Object CipElement Implements IParsedElement Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Parsing.CipFiles.Models Assembly : Fibula.Parsing.CipFiles.dll Syntax public class CipElement : IParsedElement Constructors | Improve this Doc View Source CipElement(Int32, IList<IParsedAttribute>) Initializes a new instance of the CipElement class. Declaration public CipElement(int id, IList<IParsedAttribute> attributes = null) Parameters Type Name Description System.Int32 id The id of the element. System.Collections.Generic.IList < IParsedAttribute > attributes The attributes of this element. Properties | Improve this Doc View Source Attributes Gets the attributes of the element. Declaration public IList<IParsedAttribute> Attributes { get; } Property Value Type Description System.Collections.Generic.IList < IParsedAttribute > | Improve this Doc View Source Id Gets the id of the element. Declaration public int Id { get; } Property Value Type Description System.Int32 | Improve this Doc View Source IsFlag Gets a value indicating whether this element is a flag. Declaration public bool IsFlag { get; } Property Value Type Description System.Boolean Implements IParsedElement Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Parsing.CipFiles.Models.html": {
    "href": "code/Fibula.Parsing.CipFiles.Models.html",
    "title": "Namespace Fibula.Parsing.CipFiles.Models | Fibula MMO",
    "keywords": "Namespace Fibula.Parsing.CipFiles.Models Classes CipAttribute Class that represents an attribute. CipElement Class that represents an element."
  },
  "code/Fibula.Parsing.Contracts.Abstractions.html": {
    "href": "code/Fibula.Parsing.Contracts.Abstractions.html",
    "title": "Namespace Fibula.Parsing.Contracts.Abstractions | Fibula MMO",
    "keywords": "Namespace Fibula.Parsing.Contracts.Abstractions Interfaces IParsedAttribute Interface for a parsed attribute. IParsedElement Interface for a parsed element."
  },
  "code/Fibula.Parsing.Contracts.Abstractions.IParsedAttribute.html": {
    "href": "code/Fibula.Parsing.Contracts.Abstractions.IParsedAttribute.html",
    "title": "Interface IParsedAttribute | Fibula MMO",
    "keywords": "Interface IParsedAttribute Interface for a parsed attribute. Namespace : Fibula.Parsing.Contracts.Abstractions Assembly : Fibula.Parsing.Contracts.dll Syntax public interface IParsedAttribute Properties | Improve this Doc View Source Name Gets or sets the attribute's name. Declaration string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Value Gets or sets the attribute's value. Declaration object Value { get; set; } Property Value Type Description System.Object Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Parsing.Contracts.Abstractions.IParsedElement.html": {
    "href": "code/Fibula.Parsing.Contracts.Abstractions.IParsedElement.html",
    "title": "Interface IParsedElement | Fibula MMO",
    "keywords": "Interface IParsedElement Interface for a parsed element. Namespace : Fibula.Parsing.Contracts.Abstractions Assembly : Fibula.Parsing.Contracts.dll Syntax public interface IParsedElement Properties | Improve this Doc View Source Attributes Gets the attributes of the element. Declaration IList<IParsedAttribute> Attributes { get; } Property Value Type Description System.Collections.Generic.IList < IParsedAttribute > | Improve this Doc View Source Id Gets the id of the element. Declaration int Id { get; } Property Value Type Description System.Int32 | Improve this Doc View Source IsFlag Gets a value indicating whether this element is a flag. Declaration bool IsFlag { get; } Property Value Type Description System.Boolean Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Parsing.Contracts.ActionFunction.html": {
    "href": "code/Fibula.Parsing.Contracts.ActionFunction.html",
    "title": "Class ActionFunction | Fibula MMO",
    "keywords": "Class ActionFunction Class that represents a script function. Inheritance System.Object ActionFunction Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Parsing.Contracts Assembly : Fibula.Parsing.Contracts.dll Syntax public class ActionFunction Constructors | Improve this Doc View Source ActionFunction(String, Object[]) Initializes a new instance of the ActionFunction class. Declaration public ActionFunction(string name, params object[] parameters) Parameters Type Name Description System.String name The name of the function. System.Object [] parameters The function parameters. Properties | Improve this Doc View Source Name Gets the name of the function. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Parameters Gets the function's parameters. Declaration public object[] Parameters { get; } Property Value Type Description System.Object [] Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Parsing.Contracts.ComparisonFunction.html": {
    "href": "code/Fibula.Parsing.Contracts.ComparisonFunction.html",
    "title": "Class ComparisonFunction | Fibula MMO",
    "keywords": "Class ComparisonFunction Class that represents a function that is a comparison to a value or constant. Inheritance System.Object ComparisonFunction Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Parsing.Contracts Assembly : Fibula.Parsing.Contracts.dll Syntax public class ComparisonFunction Constructors | Improve this Doc View Source ComparisonFunction(String, String, String, String[]) Initializes a new instance of the ComparisonFunction class. Declaration public ComparisonFunction(string name, string comparisonType, string constantOrValue, params string[] parameters) Parameters Type Name Description System.String name The name of the function. System.String comparisonType The comparison type. System.String constantOrValue The constant or value being compared against. System.String [] parameters The parameters of the function. Properties | Improve this Doc View Source ConstantOrValue Gets the constant or value to compare against. Declaration public string ConstantOrValue { get; } Property Value Type Description System.String | Improve this Doc View Source Name Gets the name of the function. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Parameters Gets the parameters of the function. Declaration public string[] Parameters { get; } Property Value Type Description System.String [] | Improve this Doc View Source Type Gets the type of comparison to the ConstantOrValue . Declaration public FunctionComparisonType Type { get; } Property Value Type Description FunctionComparisonType Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Parsing.Contracts.Enumerations.FunctionComparisonType.html": {
    "href": "code/Fibula.Parsing.Contracts.Enumerations.FunctionComparisonType.html",
    "title": "Enum FunctionComparisonType | Fibula MMO",
    "keywords": "Enum FunctionComparisonType Enumerates the types of function comparison. Namespace : Fibula.Parsing.Contracts.Enumerations Assembly : Fibula.Parsing.Contracts.dll Syntax public enum FunctionComparisonType : byte Fields Name Description Equal Equal. GreaterThan Greater than. GreaterThanOrEqual Greater than or equal. LessThan Less than. LessThanOrEqual Less than or equal. Undefined Undefined. Extension Methods ObjectExtensions.YieldSingleItem<FunctionComparisonType>() ObjectExtensions.GetPropertyValue(String) Validate.ThrowIfNull(String) Validate.ThrowIfDefaultValue<FunctionComparisonType>(String)"
  },
  "code/Fibula.Parsing.Contracts.Enumerations.html": {
    "href": "code/Fibula.Parsing.Contracts.Enumerations.html",
    "title": "Namespace Fibula.Parsing.Contracts.Enumerations | Fibula MMO",
    "keywords": "Namespace Fibula.Parsing.Contracts.Enumerations Enums FunctionComparisonType Enumerates the types of function comparison."
  },
  "code/Fibula.Parsing.Contracts.html": {
    "href": "code/Fibula.Parsing.Contracts.html",
    "title": "Namespace Fibula.Parsing.Contracts | Fibula MMO",
    "keywords": "Namespace Fibula.Parsing.Contracts Classes ActionFunction Class that represents a script function. ComparisonFunction Class that represents a function that is a comparison to a value or constant."
  },
  "code/Fibula.Parsing.Contracts.Models.html": {
    "href": "code/Fibula.Parsing.Contracts.Models.html",
    "title": "Namespace Fibula.Parsing.Contracts.Models | Fibula MMO",
    "keywords": "Namespace Fibula.Parsing.Contracts.Models Classes RawMonsterSpell Class that represents a raw monster spell rule."
  },
  "code/Fibula.Parsing.Contracts.Models.RawMonsterSpell.html": {
    "href": "code/Fibula.Parsing.Contracts.Models.RawMonsterSpell.html",
    "title": "Class RawMonsterSpell | Fibula MMO",
    "keywords": "Class RawMonsterSpell Class that represents a raw monster spell rule. Inheritance System.Object RawMonsterSpell Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Parsing.Contracts.Models Assembly : Fibula.Parsing.Contracts.dll Syntax public class RawMonsterSpell Constructors | Improve this Doc View Source RawMonsterSpell(IEnumerable<String>, IEnumerable<String>, String) Initializes a new instance of the RawMonsterSpell class. Declaration public RawMonsterSpell(IEnumerable<string> conditions, IEnumerable<string> effects, string chance) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.String > conditions The conditions for the spell. System.Collections.Generic.IEnumerable < System.String > effects The effects of the spell. System.String chance The chance of the spell. Properties | Improve this Doc View Source Chance Gets the chance of this spell being picked. Declaration public byte Chance { get; } Property Value Type Description System.Byte | Improve this Doc View Source ConditionSet Gets the set of conditions for this rule. Declaration public IList<string> ConditionSet { get; } Property Value Type Description System.Collections.Generic.IList < System.String > | Improve this Doc View Source EffectSet Gets the set of effects for this rule. Declaration public IList<string> EffectSet { get; } Property Value Type Description System.Collections.Generic.IList < System.String > Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.PathFinding.AStar.AStarPathFinder.html": {
    "href": "code/Fibula.PathFinding.AStar.AStarPathFinder.html",
    "title": "Class AStarPathFinder | Fibula MMO",
    "keywords": "Class AStarPathFinder Class that represents a path finder that implements the A* algorithm to find a path bewteen two Location s. Inheritance System.Object AStarPathFinder Implements IPathFinder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.PathFinding.AStar Assembly : Fibula.Mechanics.PathFinding.AStar.dll Syntax public class AStarPathFinder : IPathFinder Constructors | Improve this Doc View Source AStarPathFinder(INodeFactory, IMap, IOptions<AStarPathFinderOptions>) Initializes a new instance of the AStarPathFinder class. Declaration public AStarPathFinder(INodeFactory nodeFactory, IMap map, IOptions<AStarPathFinderOptions> pathfinderOptions) Parameters Type Name Description INodeFactory nodeFactory A reference to the node factory in use. IMap map A refernce to the map isntance. Microsoft.Extensions.Options.IOptions < AStarPathFinderOptions > pathfinderOptions The options for this pathfinder. Properties | Improve this Doc View Source Map Gets the tile accessor in use. Declaration public IMap Map { get; } Property Value Type Description IMap | Improve this Doc View Source NodeFactory Gets a reference to the node factory in use. Declaration public INodeFactory NodeFactory { get; } Property Value Type Description INodeFactory | Improve this Doc View Source Options Gets the options to use for this path finder. Declaration public AStarPathFinderOptions Options { get; } Property Value Type Description AStarPathFinderOptions Methods | Improve this Doc View Source FindBetween(Location, Location, out Location, ICreature, Int32, Boolean, Int32) Attempts to find a path using the AStar implementation between two Location s. Declaration public IEnumerable<Direction> FindBetween(Location startLocation, Location targetLocation, out Location endLocation, ICreature onBehalfOfCreature = null, int maxStepsCount = 0, bool considerAvoidsAsBlocking = true, int targetDistance = 1) Parameters Type Name Description Location startLocation The start location. Location targetLocation The target location to find a path to. Location endLocation The last searched location before returning. ICreature onBehalfOfCreature Optional. The creature on behalf of which the search is being performed. System.Int32 maxStepsCount Optional. The maximum number of search steps to perform before giving up on finding the target location. Default is DefaultMaximumSteps . System.Boolean considerAvoidsAsBlocking Optional. A value indicating whether to consider the creature avoid tastes as blocking in path finding. Defaults to true. System.Int32 targetDistance Optional. The target distance from the target node to shoot for. Returns Type Description System.Collections.Generic.IEnumerable < Direction > An System.Collections.Generic.IEnumerable<T> of Direction s leading to the end location. The endLocation and targetLocation may or may not be the same. Implements IPathFinder Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.PathFinding.AStar.AStarPathFinderOptions.html": {
    "href": "code/Fibula.PathFinding.AStar.AStarPathFinderOptions.html",
    "title": "Class AStarPathFinderOptions | Fibula MMO",
    "keywords": "Class AStarPathFinderOptions Class that represents options for the AStarPathFinder . Inheritance System.Object AStarPathFinderOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.PathFinding.AStar Assembly : Fibula.Mechanics.PathFinding.AStar.dll Syntax public class AStarPathFinderOptions Properties | Improve this Doc View Source DefaultMaximumSteps Gets or sets the default maximum steps to perform in a single search. Declaration [Range(50, 10000, ErrorMessage = \"The value for DefaultMaximumSteps must be in the range [50, 10000].\")] public int DefaultMaximumSteps { get; set; } Property Value Type Description System.Int32 Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.PathFinding.AStar.ConfigurationRootExtensions.html": {
    "href": "code/Fibula.PathFinding.AStar.ConfigurationRootExtensions.html",
    "title": "Class ConfigurationRootExtensions | Fibula MMO",
    "keywords": "Class ConfigurationRootExtensions Static class that adds convenient methods to add the concrete implementations contained in this library. Inheritance System.Object ConfigurationRootExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.PathFinding.AStar Assembly : Fibula.Mechanics.PathFinding.AStar.dll Syntax public static class ConfigurationRootExtensions Methods | Improve this Doc View Source AddAStarPathFinder(IServiceCollection, IConfiguration) Adds all implementations related to the A* path finder contained in this library to the services collection. Additionally, registers the options related to the concrete implementations added, such as: AStarPathFinderOptions . Declaration public static void AddAStarPathFinder(this IServiceCollection services, IConfiguration configuration) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services The services collection. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration reference."
  },
  "code/Fibula.PathFinding.AStar.html": {
    "href": "code/Fibula.PathFinding.AStar.html",
    "title": "Namespace Fibula.PathFinding.AStar | Fibula MMO",
    "keywords": "Namespace Fibula.PathFinding.AStar Classes AStarPathFinder Class that represents a path finder that implements the A* algorithm to find a path bewteen two Location s. AStarPathFinderOptions Class that represents options for the AStarPathFinder . ConfigurationRootExtensions Static class that adds convenient methods to add the concrete implementations contained in this library."
  },
  "code/Fibula.Protocol.V772.ClientConnectionFactory-1.html": {
    "href": "code/Fibula.Protocol.V772.ClientConnectionFactory-1.html",
    "title": "Class ClientConnectionFactory<TProtocol> | Fibula MMO",
    "keywords": "Class ClientConnectionFactory<TProtocol> Class that implements a ISocketConnectionFactory which creates new connections that target a given protocol. Inheritance System.Object ClientConnectionFactory<TProtocol> Implements ISocketConnectionFactory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772 Assembly : Fibula.Protocol.V772.dll Syntax public class ClientConnectionFactory<TProtocol> : ISocketConnectionFactory where TProtocol : IProtocol Type Parameters Name Description TProtocol The type of protocol to use. Constructors | Improve this Doc View Source ClientConnectionFactory(ILogger, TProtocol) Initializes a new instance of the ClientConnectionFactory<TProtocol> class. Declaration public ClientConnectionFactory(ILogger logger, TProtocol protocol) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. TProtocol protocol A reference to the protocol to target. Methods | Improve this Doc View Source Create(Socket) Creates a new ISocketConnection for the given socket. Declaration public ISocketConnection Create(Socket socket) Parameters Type Name Description System.Net.Sockets.Socket socket The socket of the connection. Returns Type Description ISocketConnection A new instance of a ISocketConnection . Implements ISocketConnectionFactory Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.ConfigurationRootExtensions.html": {
    "href": "code/Fibula.Protocol.V772.ConfigurationRootExtensions.html",
    "title": "Class ConfigurationRootExtensions | Fibula MMO",
    "keywords": "Class ConfigurationRootExtensions Static class that adds convenient methods to add the concrete implementations contained in this library. Inheritance System.Object ConfigurationRootExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772 Assembly : Fibula.Protocol.V772.dll Syntax public static class ConfigurationRootExtensions Methods | Improve this Doc View Source AddProtocol772GameServerComponents(IServiceCollection, IConfiguration) Adds all the game server components related to protocol 7.72 contained in this library to the services collection. It also configures any Microsoft.Extensions.Options.IOptions<TOptions> required by any such components. Declaration public static void AddProtocol772GameServerComponents(this IServiceCollection services, IConfiguration configuration) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services The services collection. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration loaded. | Improve this Doc View Source AddProtocol772GatewayServerComponents(IServiceCollection, IConfiguration) Adds all the gateway server components related to protocol 7.72 contained in this library to the services collection. It also configures any Microsoft.Extensions.Options.IOptions<TOptions> required by any such components. Declaration public static void AddProtocol772GatewayServerComponents(this IServiceCollection services, IConfiguration configuration) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services The services collection. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration loaded."
  },
  "code/Fibula.Protocol.V772.GameProtocol_v772.html": {
    "href": "code/Fibula.Protocol.V772.GameProtocol_v772.html",
    "title": "Class GameProtocol_v772 | Fibula MMO",
    "keywords": "Class GameProtocol_v772 Class that represents a game protocol for version 7.72. Inheritance System.Object GameProtocol_v772 Implements IProtocol Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772 Assembly : Fibula.Protocol.V772.dll Syntax public class GameProtocol_v772 : IProtocol Constructors | Improve this Doc View Source GameProtocol_v772(ILogger) Initializes a new instance of the GameProtocol_v772 class. Declaration public GameProtocol_v772(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source RegisterPacketReader(Byte, IPacketReader) Registers a packet reader to this protocol. Declaration public void RegisterPacketReader(byte forType, IPacketReader packetReader) Parameters Type Name Description System.Byte forType The type of packet to register for. IPacketReader packetReader The packet reader to register. | Improve this Doc View Source RegisterPacketWriter(Byte, IPacketWriter) Registers a packet writer to this protocol. Declaration public void RegisterPacketWriter(byte forType, IPacketWriter packetWriter) Parameters Type Name Description System.Byte forType The type of packet to register for. IPacketWriter packetWriter The packet writer to register. | Improve this Doc View Source SelectPacketReader(Byte) Selects the most appropriate packet reader for the specified type. Declaration public IPacketReader SelectPacketReader(byte forPacketType) Parameters Type Name Description System.Byte forPacketType The type of packet. Returns Type Description IPacketReader An instance of an IPacketReader implementation. | Improve this Doc View Source SelectPacketWriter(Byte) Selects the most appropriate packet writer for the specified type. Declaration public IPacketWriter SelectPacketWriter(byte forPacketType) Parameters Type Name Description System.Byte forPacketType The type of packet. Returns Type Description IPacketWriter An instance of an IPacketWriter implementation. Implements IProtocol Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.GatewayProtocol_v772.html": {
    "href": "code/Fibula.Protocol.V772.GatewayProtocol_v772.html",
    "title": "Class GatewayProtocol_v772 | Fibula MMO",
    "keywords": "Class GatewayProtocol_v772 Class that represents a gateway protocol for version 7.72. Inheritance System.Object GatewayProtocol_v772 Implements IProtocol Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772 Assembly : Fibula.Protocol.V772.dll Syntax public class GatewayProtocol_v772 : IProtocol Constructors | Improve this Doc View Source GatewayProtocol_v772(ILogger) Initializes a new instance of the GatewayProtocol_v772 class. Declaration public GatewayProtocol_v772(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source RegisterPacketReader(Byte, IPacketReader) Registers a packet reader to this protocol. Declaration public void RegisterPacketReader(byte forType, IPacketReader packetReader) Parameters Type Name Description System.Byte forType The type of packet to register for. IPacketReader packetReader The packet reader to register. | Improve this Doc View Source RegisterPacketWriter(Byte, IPacketWriter) Registers a packet writer to this protocol. Declaration public void RegisterPacketWriter(byte forType, IPacketWriter packetWriter) Parameters Type Name Description System.Byte forType The type of packet to register for. IPacketWriter packetWriter The packet writer to register. | Improve this Doc View Source SelectPacketReader(Byte) Selects the most appropriate packet reader for the specified type. Declaration public IPacketReader SelectPacketReader(byte forPacketType) Parameters Type Name Description System.Byte forPacketType The type of packet. Returns Type Description IPacketReader An instance of an IPacketReader implementation. | Improve this Doc View Source SelectPacketWriter(Byte) Selects the most appropriate packet writer for the specified type. Declaration public IPacketWriter SelectPacketWriter(byte forPacketType) Parameters Type Name Description System.Byte forPacketType The type of packet. Returns Type Description IPacketWriter An instance of an IPacketWriter implementation. Implements IProtocol Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.html": {
    "href": "code/Fibula.Protocol.V772.html",
    "title": "Namespace Fibula.Protocol.V772 | Fibula MMO",
    "keywords": "Namespace Fibula.Protocol.V772 Classes ClientConnectionFactory<TProtocol> Class that implements a ISocketConnectionFactory which creates new connections that target a given protocol. ConfigurationRootExtensions Static class that adds convenient methods to add the concrete implementations contained in this library. GameProtocol_v772 Class that represents a game protocol for version 7.72. GatewayProtocol_v772 Class that represents a gateway protocol for version 7.72. NetworkMessageExtensions Static class that defines extension methods for an INetworkMessage . PredefinedItemSet_v772 Class that implements a IPredefinedItemSet for the protocol version 7.72. SocketConnection_v772 Class that represents a standard 7.72 client connection over a TCP socket. TileDescriptor_v772 Class that represents a tile descriptor for protocol 7.72."
  },
  "code/Fibula.Protocol.V772.NetworkMessageExtensions.html": {
    "href": "code/Fibula.Protocol.V772.NetworkMessageExtensions.html",
    "title": "Class NetworkMessageExtensions | Fibula MMO",
    "keywords": "Class NetworkMessageExtensions Static class that defines extension methods for an INetworkMessage . Inheritance System.Object NetworkMessageExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772 Assembly : Fibula.Protocol.V772.dll Syntax public static class NetworkMessageExtensions Methods | Improve this Doc View Source AddCreature(INetworkMessage, ICreature, Boolean, UInt32) Add a ICreature 's description to the message. Declaration public static void AddCreature(this INetworkMessage message, ICreature creature, bool asKnown, uint creatureToRemoveId) Parameters Type Name Description INetworkMessage message The message to add the creature description to. ICreature creature The creature to describe and add. System.Boolean asKnown A value indicating whether this creature is known. System.UInt32 creatureToRemoveId The id of another creature to replace if the client buffer is known to be full. | Improve this Doc View Source AddItem(INetworkMessage, IItem) Adds an IItem 's description to a message. Declaration public static void AddItem(this INetworkMessage message, IItem item) Parameters Type Name Description INetworkMessage message The message to add the item description to. IItem item The item to describe and add. | Improve this Doc View Source AddLocation(INetworkMessage, Location) Adds a Location 's description to the message. Declaration public static void AddLocation(this INetworkMessage message, Location location) Parameters Type Name Description INetworkMessage message The message to add the location to. Location location The location to add. | Improve this Doc View Source AddOutfit(INetworkMessage, Outfit) Adds an Outfit 's description to the message. Declaration public static void AddOutfit(this INetworkMessage message, Outfit outfit) Parameters Type Name Description INetworkMessage message The message to add the outfit to. Outfit outfit The outfit to add. | Improve this Doc View Source PrepareToSend(INetworkMessage, UInt32[]) Prepares an INetworkMessage to be sent, encrypting it with the supplied key. Declaration public static bool PrepareToSend(this INetworkMessage message, uint[] xteaKey) Parameters Type Name Description INetworkMessage message The message to prepare. System.UInt32 [] xteaKey The XTea key to encrypt with. Returns Type Description System.Boolean True if the message is prepared successfully, false otherwise. | Improve this Doc View Source ToLiquidColor(LiquidType) Converts a LiquidType to the client supported LiquidColor . Declaration public static LiquidColor ToLiquidColor(this LiquidType liquidType) Parameters Type Name Description LiquidType liquidType The type of liquid. Returns Type Description LiquidColor The color supported by the client. | Improve this Doc View Source XteaDecrypt(INetworkMessage, UInt32[]) Attempts to decrypt the message using XTea keys. Declaration public static bool XteaDecrypt(this INetworkMessage message, uint[] key) Parameters Type Name Description INetworkMessage message The message to act on. System.UInt32 [] key The key to use. Returns Type Description System.Boolean True if the message could be decrypted, false otherwise. | Improve this Doc View Source XteaEncrypt(INetworkMessage, UInt32[]) Attempts to encrypt the message using XTea keys. Declaration public static bool XteaEncrypt(this INetworkMessage message, uint[] key) Parameters Type Name Description INetworkMessage message The message to act on. System.UInt32 [] key The XTEA key. Returns Type Description System.Boolean True if the encryption succeeds, false otherwise."
  },
  "code/Fibula.Protocol.V772.PacketReaders.AttackPacketReader.html": {
    "href": "code/Fibula.Protocol.V772.PacketReaders.AttackPacketReader.html",
    "title": "Class AttackPacketReader | Fibula MMO",
    "keywords": "Class AttackPacketReader Class that represents an attack packet reader for the game server. Inheritance System.Object BasePacketReader AttackPacketReader Implements IPacketReader Inherited Members BasePacketReader.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketReaders Assembly : Fibula.Protocol.V772.dll Syntax public sealed class AttackPacketReader : BasePacketReader, IPacketReader Constructors | Improve this Doc View Source AttackPacketReader(ILogger) Initializes a new instance of the AttackPacketReader class. Declaration public AttackPacketReader(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source ReadFromMessage(INetworkMessage) Reads a packet from the given INetworkMessage . Declaration public override IIncomingPacket ReadFromMessage(INetworkMessage message) Parameters Type Name Description INetworkMessage message The message to read from. Returns Type Description IIncomingPacket The packet read from the message. Overrides BasePacketReader.ReadFromMessage(INetworkMessage) Implements IPacketReader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketReaders.AutoMoveCancelPacketReader.html": {
    "href": "code/Fibula.Protocol.V772.PacketReaders.AutoMoveCancelPacketReader.html",
    "title": "Class AutoMoveCancelPacketReader | Fibula MMO",
    "keywords": "Class AutoMoveCancelPacketReader Class that represents an auto move cancellation packet reader for the game server. Inheritance System.Object BasePacketReader AutoMoveCancelPacketReader Implements IPacketReader Inherited Members BasePacketReader.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketReaders Assembly : Fibula.Protocol.V772.dll Syntax public sealed class AutoMoveCancelPacketReader : BasePacketReader, IPacketReader Constructors | Improve this Doc View Source AutoMoveCancelPacketReader(ILogger) Initializes a new instance of the AutoMoveCancelPacketReader class. Declaration public AutoMoveCancelPacketReader(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source ReadFromMessage(INetworkMessage) Reads a packet from the given INetworkMessage . Declaration public override IIncomingPacket ReadFromMessage(INetworkMessage message) Parameters Type Name Description INetworkMessage message The message to read from. Returns Type Description IIncomingPacket The packet read from the message. Overrides BasePacketReader.ReadFromMessage(INetworkMessage) Implements IPacketReader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketReaders.AutoMovePacketReader.html": {
    "href": "code/Fibula.Protocol.V772.PacketReaders.AutoMovePacketReader.html",
    "title": "Class AutoMovePacketReader | Fibula MMO",
    "keywords": "Class AutoMovePacketReader Class that represents an auto walk packet reader for the game server. Inheritance System.Object BasePacketReader AutoMovePacketReader Implements IPacketReader Inherited Members BasePacketReader.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketReaders Assembly : Fibula.Protocol.V772.dll Syntax public sealed class AutoMovePacketReader : BasePacketReader, IPacketReader Constructors | Improve this Doc View Source AutoMovePacketReader(ILogger) Initializes a new instance of the AutoMovePacketReader class. Declaration public AutoMovePacketReader(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source ReadFromMessage(INetworkMessage) Reads a packet from the given INetworkMessage . Declaration public override IIncomingPacket ReadFromMessage(INetworkMessage message) Parameters Type Name Description INetworkMessage message The message to read from. Returns Type Description IIncomingPacket The packet read from the message. Overrides BasePacketReader.ReadFromMessage(INetworkMessage) Implements IPacketReader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketReaders.ChangeModesPacketReader.html": {
    "href": "code/Fibula.Protocol.V772.PacketReaders.ChangeModesPacketReader.html",
    "title": "Class ChangeModesPacketReader | Fibula MMO",
    "keywords": "Class ChangeModesPacketReader Class that represents a change modes packet reader for the game server. Inheritance System.Object BasePacketReader ChangeModesPacketReader Implements IPacketReader Inherited Members BasePacketReader.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketReaders Assembly : Fibula.Protocol.V772.dll Syntax public sealed class ChangeModesPacketReader : BasePacketReader, IPacketReader Constructors | Improve this Doc View Source ChangeModesPacketReader(ILogger) Initializes a new instance of the ChangeModesPacketReader class. Declaration public ChangeModesPacketReader(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source ReadFromMessage(INetworkMessage) Reads a packet from the given INetworkMessage . Declaration public override IIncomingPacket ReadFromMessage(INetworkMessage message) Parameters Type Name Description INetworkMessage message The message to read from. Returns Type Description IIncomingPacket The packet read from the message. Overrides BasePacketReader.ReadFromMessage(INetworkMessage) Implements IPacketReader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketReaders.GameLogInPacketReader.html": {
    "href": "code/Fibula.Protocol.V772.PacketReaders.GameLogInPacketReader.html",
    "title": "Class GameLogInPacketReader | Fibula MMO",
    "keywords": "Class GameLogInPacketReader Class that represents a log in packet reader for the game server. Inheritance System.Object BasePacketReader GameLogInPacketReader Implements IPacketReader Inherited Members BasePacketReader.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketReaders Assembly : Fibula.Protocol.V772.dll Syntax public sealed class GameLogInPacketReader : BasePacketReader, IPacketReader Constructors | Improve this Doc View Source GameLogInPacketReader(ILogger, IApplicationContext) Initializes a new instance of the GameLogInPacketReader class. Declaration public GameLogInPacketReader(ILogger logger, IApplicationContext applicationContext) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. IApplicationContext applicationContext A reference to the application context. Properties | Improve this Doc View Source ApplicationContext Gets a reference to the application context. Declaration public IApplicationContext ApplicationContext { get; } Property Value Type Description IApplicationContext Methods | Improve this Doc View Source ReadFromMessage(INetworkMessage) Reads a packet from the given INetworkMessage . Declaration public override IIncomingPacket ReadFromMessage(INetworkMessage message) Parameters Type Name Description INetworkMessage message The message to read from. Returns Type Description IIncomingPacket The packet read from the message. Overrides BasePacketReader.ReadFromMessage(INetworkMessage) Implements IPacketReader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketReaders.GameLogOutPacketReader.html": {
    "href": "code/Fibula.Protocol.V772.PacketReaders.GameLogOutPacketReader.html",
    "title": "Class GameLogOutPacketReader | Fibula MMO",
    "keywords": "Class GameLogOutPacketReader Class that represents a log out packet reader for the game server. Inheritance System.Object BasePacketReader GameLogOutPacketReader Implements IPacketReader Inherited Members BasePacketReader.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketReaders Assembly : Fibula.Protocol.V772.dll Syntax public sealed class GameLogOutPacketReader : BasePacketReader, IPacketReader Constructors | Improve this Doc View Source GameLogOutPacketReader(ILogger) Initializes a new instance of the GameLogOutPacketReader class. Declaration public GameLogOutPacketReader(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source ReadFromMessage(INetworkMessage) Reads a packet from the given INetworkMessage . Declaration public override IIncomingPacket ReadFromMessage(INetworkMessage message) Parameters Type Name Description INetworkMessage message The message to read from. Returns Type Description IIncomingPacket The packet read from the message. Overrides BasePacketReader.ReadFromMessage(INetworkMessage) Implements IPacketReader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketReaders.GatewayLogInPacketReader.html": {
    "href": "code/Fibula.Protocol.V772.PacketReaders.GatewayLogInPacketReader.html",
    "title": "Class GatewayLogInPacketReader | Fibula MMO",
    "keywords": "Class GatewayLogInPacketReader Class that represents a log in packet reader for the gateway server. Inheritance System.Object BasePacketReader GatewayLogInPacketReader Implements IPacketReader Inherited Members BasePacketReader.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketReaders Assembly : Fibula.Protocol.V772.dll Syntax public sealed class GatewayLogInPacketReader : BasePacketReader, IPacketReader Constructors | Improve this Doc View Source GatewayLogInPacketReader(ILogger, IApplicationContext) Initializes a new instance of the GatewayLogInPacketReader class. Declaration public GatewayLogInPacketReader(ILogger logger, IApplicationContext applicationContext) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. IApplicationContext applicationContext A reference to the application context. Properties | Improve this Doc View Source ApplicationContext Gets a reference to the application context. Declaration public IApplicationContext ApplicationContext { get; } Property Value Type Description IApplicationContext Methods | Improve this Doc View Source ReadFromMessage(INetworkMessage) Reads a packet from the given INetworkMessage . Declaration public override IIncomingPacket ReadFromMessage(INetworkMessage message) Parameters Type Name Description INetworkMessage message The message to read from. Returns Type Description IIncomingPacket The packet read from the message. Overrides BasePacketReader.ReadFromMessage(INetworkMessage) Implements IPacketReader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketReaders.HeartbeatPacketReader.html": {
    "href": "code/Fibula.Protocol.V772.PacketReaders.HeartbeatPacketReader.html",
    "title": "Class HeartbeatPacketReader | Fibula MMO",
    "keywords": "Class HeartbeatPacketReader Class that represents a keep alive packet reader for the game server. Inheritance System.Object BasePacketReader HeartbeatPacketReader Implements IPacketReader Inherited Members BasePacketReader.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketReaders Assembly : Fibula.Protocol.V772.dll Syntax public sealed class HeartbeatPacketReader : BasePacketReader, IPacketReader Constructors | Improve this Doc View Source HeartbeatPacketReader(ILogger) Initializes a new instance of the HeartbeatPacketReader class. Declaration public HeartbeatPacketReader(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source ReadFromMessage(INetworkMessage) Reads a packet from the given INetworkMessage . Declaration public override IIncomingPacket ReadFromMessage(INetworkMessage message) Parameters Type Name Description INetworkMessage message The message to read from. Returns Type Description IIncomingPacket The packet read from the message. Overrides BasePacketReader.ReadFromMessage(INetworkMessage) Implements IPacketReader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketReaders.HeartbeatResponsePacketReader.html": {
    "href": "code/Fibula.Protocol.V772.PacketReaders.HeartbeatResponsePacketReader.html",
    "title": "Class HeartbeatResponsePacketReader | Fibula MMO",
    "keywords": "Class HeartbeatResponsePacketReader Class that represents a heartbeat check packet reader for the game server. Inheritance System.Object BasePacketReader HeartbeatResponsePacketReader Implements IPacketReader Inherited Members BasePacketReader.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketReaders Assembly : Fibula.Protocol.V772.dll Syntax public sealed class HeartbeatResponsePacketReader : BasePacketReader, IPacketReader Constructors | Improve this Doc View Source HeartbeatResponsePacketReader(ILogger) Initializes a new instance of the HeartbeatResponsePacketReader class. Declaration public HeartbeatResponsePacketReader(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source ReadFromMessage(INetworkMessage) Reads a packet from the given INetworkMessage . Declaration public override IIncomingPacket ReadFromMessage(INetworkMessage message) Parameters Type Name Description INetworkMessage message The message to read from. Returns Type Description IIncomingPacket The packet read from the message. Overrides BasePacketReader.ReadFromMessage(INetworkMessage) Implements IPacketReader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketReaders.html": {
    "href": "code/Fibula.Protocol.V772.PacketReaders.html",
    "title": "Namespace Fibula.Protocol.V772.PacketReaders | Fibula MMO",
    "keywords": "Namespace Fibula.Protocol.V772.PacketReaders Classes AttackPacketReader Class that represents an attack packet reader for the game server. AutoMoveCancelPacketReader Class that represents an auto move cancellation packet reader for the game server. AutoMovePacketReader Class that represents an auto walk packet reader for the game server. ChangeModesPacketReader Class that represents a change modes packet reader for the game server. GameLogInPacketReader Class that represents a log in packet reader for the game server. GameLogOutPacketReader Class that represents a log out packet reader for the game server. GatewayLogInPacketReader Class that represents a log in packet reader for the gateway server. HeartbeatPacketReader Class that represents a keep alive packet reader for the game server. HeartbeatResponsePacketReader Class that represents a heartbeat check packet reader for the game server. LookAtPacketReader Class that represents a look at packet reader for the game server. SpeechPacketReader Class that represents a speech packet reader for the game server. StopAllActionsPacketReader Class that represents a stop all actions packet reader for the game server. TurnEastPacketReader Class that represents a turn east packet reader for the game server. TurnNorthPacketReader Class that represents a turn north packet reader for the game server. TurnSouthPacketReader Class that represents a turn south packet reader for the game server. TurnWestPacketReader Class that represents a turn west packet reader for the game server. WalkEastPacketReader Class that represents a walk east packet reader for the game server. WalkNortheastPacketReader Class that represents a walk northeast packet reader for the game server. WalkNorthPacketReader Class that represents a walk north packet reader for the game server. WalkNorthwestPacketReader Class that represents a walk northwest packet reader for the game server. WalkSoutheastPacketReader Class that represents a walk southeast packet reader for the game server. WalkSouthPacketReader Class that represents a walk south packet reader for the game server. WalkSouthwestPacketReader Class that represents a walk southeast packet reader for the game server. WalkWestPacketReader Class that represents a walk west packet reader for the game server."
  },
  "code/Fibula.Protocol.V772.PacketReaders.LookAtPacketReader.html": {
    "href": "code/Fibula.Protocol.V772.PacketReaders.LookAtPacketReader.html",
    "title": "Class LookAtPacketReader | Fibula MMO",
    "keywords": "Class LookAtPacketReader Class that represents a look at packet reader for the game server. Inheritance System.Object BasePacketReader LookAtPacketReader Implements IPacketReader Inherited Members BasePacketReader.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketReaders Assembly : Fibula.Protocol.V772.dll Syntax public sealed class LookAtPacketReader : BasePacketReader, IPacketReader Constructors | Improve this Doc View Source LookAtPacketReader(ILogger) Initializes a new instance of the LookAtPacketReader class. Declaration public LookAtPacketReader(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source ReadFromMessage(INetworkMessage) Reads a packet from the given INetworkMessage . Declaration public override IIncomingPacket ReadFromMessage(INetworkMessage message) Parameters Type Name Description INetworkMessage message The message to read from. Returns Type Description IIncomingPacket The packet read from the message. Overrides BasePacketReader.ReadFromMessage(INetworkMessage) Implements IPacketReader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketReaders.SpeechPacketReader.html": {
    "href": "code/Fibula.Protocol.V772.PacketReaders.SpeechPacketReader.html",
    "title": "Class SpeechPacketReader | Fibula MMO",
    "keywords": "Class SpeechPacketReader Class that represents a speech packet reader for the game server. Inheritance System.Object BasePacketReader SpeechPacketReader Implements IPacketReader Inherited Members BasePacketReader.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketReaders Assembly : Fibula.Protocol.V772.dll Syntax public sealed class SpeechPacketReader : BasePacketReader, IPacketReader Constructors | Improve this Doc View Source SpeechPacketReader(ILogger) Initializes a new instance of the SpeechPacketReader class. Declaration public SpeechPacketReader(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source ReadFromMessage(INetworkMessage) Reads a packet from the given INetworkMessage . Declaration public override IIncomingPacket ReadFromMessage(INetworkMessage message) Parameters Type Name Description INetworkMessage message The message to read from. Returns Type Description IIncomingPacket The packet read from the message. Overrides BasePacketReader.ReadFromMessage(INetworkMessage) Implements IPacketReader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketReaders.StopAllActionsPacketReader.html": {
    "href": "code/Fibula.Protocol.V772.PacketReaders.StopAllActionsPacketReader.html",
    "title": "Class StopAllActionsPacketReader | Fibula MMO",
    "keywords": "Class StopAllActionsPacketReader Class that represents a stop all actions packet reader for the game server. Inheritance System.Object BasePacketReader StopAllActionsPacketReader Implements IPacketReader Inherited Members BasePacketReader.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketReaders Assembly : Fibula.Protocol.V772.dll Syntax public sealed class StopAllActionsPacketReader : BasePacketReader, IPacketReader Constructors | Improve this Doc View Source StopAllActionsPacketReader(ILogger) Initializes a new instance of the StopAllActionsPacketReader class. Declaration public StopAllActionsPacketReader(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source ReadFromMessage(INetworkMessage) Reads a packet from the given INetworkMessage . Declaration public override IIncomingPacket ReadFromMessage(INetworkMessage message) Parameters Type Name Description INetworkMessage message The message to read from. Returns Type Description IIncomingPacket The packet read from the message. Overrides BasePacketReader.ReadFromMessage(INetworkMessage) Implements IPacketReader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketReaders.TurnEastPacketReader.html": {
    "href": "code/Fibula.Protocol.V772.PacketReaders.TurnEastPacketReader.html",
    "title": "Class TurnEastPacketReader | Fibula MMO",
    "keywords": "Class TurnEastPacketReader Class that represents a turn east packet reader for the game server. Inheritance System.Object BasePacketReader TurnEastPacketReader Implements IPacketReader Inherited Members BasePacketReader.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketReaders Assembly : Fibula.Protocol.V772.dll Syntax public sealed class TurnEastPacketReader : BasePacketReader, IPacketReader Constructors | Improve this Doc View Source TurnEastPacketReader(ILogger) Initializes a new instance of the TurnEastPacketReader class. Declaration public TurnEastPacketReader(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source ReadFromMessage(INetworkMessage) Reads a packet from the given INetworkMessage . Declaration public override IIncomingPacket ReadFromMessage(INetworkMessage message) Parameters Type Name Description INetworkMessage message The message to read from. Returns Type Description IIncomingPacket The packet read from the message. Overrides BasePacketReader.ReadFromMessage(INetworkMessage) Implements IPacketReader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketReaders.TurnNorthPacketReader.html": {
    "href": "code/Fibula.Protocol.V772.PacketReaders.TurnNorthPacketReader.html",
    "title": "Class TurnNorthPacketReader | Fibula MMO",
    "keywords": "Class TurnNorthPacketReader Class that represents a turn north packet reader for the game server. Inheritance System.Object BasePacketReader TurnNorthPacketReader Implements IPacketReader Inherited Members BasePacketReader.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketReaders Assembly : Fibula.Protocol.V772.dll Syntax public sealed class TurnNorthPacketReader : BasePacketReader, IPacketReader Constructors | Improve this Doc View Source TurnNorthPacketReader(ILogger) Initializes a new instance of the TurnNorthPacketReader class. Declaration public TurnNorthPacketReader(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source ReadFromMessage(INetworkMessage) Reads a packet from the given INetworkMessage . Declaration public override IIncomingPacket ReadFromMessage(INetworkMessage message) Parameters Type Name Description INetworkMessage message The message to read from. Returns Type Description IIncomingPacket The packet read from the message. Overrides BasePacketReader.ReadFromMessage(INetworkMessage) Implements IPacketReader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketReaders.TurnSouthPacketReader.html": {
    "href": "code/Fibula.Protocol.V772.PacketReaders.TurnSouthPacketReader.html",
    "title": "Class TurnSouthPacketReader | Fibula MMO",
    "keywords": "Class TurnSouthPacketReader Class that represents a turn south packet reader for the game server. Inheritance System.Object BasePacketReader TurnSouthPacketReader Implements IPacketReader Inherited Members BasePacketReader.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketReaders Assembly : Fibula.Protocol.V772.dll Syntax public sealed class TurnSouthPacketReader : BasePacketReader, IPacketReader Constructors | Improve this Doc View Source TurnSouthPacketReader(ILogger) Initializes a new instance of the TurnSouthPacketReader class. Declaration public TurnSouthPacketReader(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source ReadFromMessage(INetworkMessage) Reads a packet from the given INetworkMessage . Declaration public override IIncomingPacket ReadFromMessage(INetworkMessage message) Parameters Type Name Description INetworkMessage message The message to read from. Returns Type Description IIncomingPacket The packet read from the message. Overrides BasePacketReader.ReadFromMessage(INetworkMessage) Implements IPacketReader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketReaders.TurnWestPacketReader.html": {
    "href": "code/Fibula.Protocol.V772.PacketReaders.TurnWestPacketReader.html",
    "title": "Class TurnWestPacketReader | Fibula MMO",
    "keywords": "Class TurnWestPacketReader Class that represents a turn west packet reader for the game server. Inheritance System.Object BasePacketReader TurnWestPacketReader Implements IPacketReader Inherited Members BasePacketReader.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketReaders Assembly : Fibula.Protocol.V772.dll Syntax public sealed class TurnWestPacketReader : BasePacketReader, IPacketReader Constructors | Improve this Doc View Source TurnWestPacketReader(ILogger) Initializes a new instance of the TurnWestPacketReader class. Declaration public TurnWestPacketReader(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source ReadFromMessage(INetworkMessage) Reads a packet from the given INetworkMessage . Declaration public override IIncomingPacket ReadFromMessage(INetworkMessage message) Parameters Type Name Description INetworkMessage message The message to read from. Returns Type Description IIncomingPacket The packet read from the message. Overrides BasePacketReader.ReadFromMessage(INetworkMessage) Implements IPacketReader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketReaders.WalkEastPacketReader.html": {
    "href": "code/Fibula.Protocol.V772.PacketReaders.WalkEastPacketReader.html",
    "title": "Class WalkEastPacketReader | Fibula MMO",
    "keywords": "Class WalkEastPacketReader Class that represents a walk east packet reader for the game server. Inheritance System.Object BasePacketReader WalkEastPacketReader Implements IPacketReader Inherited Members BasePacketReader.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketReaders Assembly : Fibula.Protocol.V772.dll Syntax public sealed class WalkEastPacketReader : BasePacketReader, IPacketReader Constructors | Improve this Doc View Source WalkEastPacketReader(ILogger) Initializes a new instance of the WalkEastPacketReader class. Declaration public WalkEastPacketReader(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source ReadFromMessage(INetworkMessage) Reads a packet from the given INetworkMessage . Declaration public override IIncomingPacket ReadFromMessage(INetworkMessage message) Parameters Type Name Description INetworkMessage message The message to read from. Returns Type Description IIncomingPacket The packet read from the message. Overrides BasePacketReader.ReadFromMessage(INetworkMessage) Implements IPacketReader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketReaders.WalkNortheastPacketReader.html": {
    "href": "code/Fibula.Protocol.V772.PacketReaders.WalkNortheastPacketReader.html",
    "title": "Class WalkNortheastPacketReader | Fibula MMO",
    "keywords": "Class WalkNortheastPacketReader Class that represents a walk northeast packet reader for the game server. Inheritance System.Object BasePacketReader WalkNortheastPacketReader Implements IPacketReader Inherited Members BasePacketReader.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketReaders Assembly : Fibula.Protocol.V772.dll Syntax public sealed class WalkNortheastPacketReader : BasePacketReader, IPacketReader Constructors | Improve this Doc View Source WalkNortheastPacketReader(ILogger) Initializes a new instance of the WalkNortheastPacketReader class. Declaration public WalkNortheastPacketReader(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source ReadFromMessage(INetworkMessage) Reads a packet from the given INetworkMessage . Declaration public override IIncomingPacket ReadFromMessage(INetworkMessage message) Parameters Type Name Description INetworkMessage message The message to read from. Returns Type Description IIncomingPacket The packet read from the message. Overrides BasePacketReader.ReadFromMessage(INetworkMessage) Implements IPacketReader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketReaders.WalkNorthPacketReader.html": {
    "href": "code/Fibula.Protocol.V772.PacketReaders.WalkNorthPacketReader.html",
    "title": "Class WalkNorthPacketReader | Fibula MMO",
    "keywords": "Class WalkNorthPacketReader Class that represents a walk north packet reader for the game server. Inheritance System.Object BasePacketReader WalkNorthPacketReader Implements IPacketReader Inherited Members BasePacketReader.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketReaders Assembly : Fibula.Protocol.V772.dll Syntax public sealed class WalkNorthPacketReader : BasePacketReader, IPacketReader Constructors | Improve this Doc View Source WalkNorthPacketReader(ILogger) Initializes a new instance of the WalkNorthPacketReader class. Declaration public WalkNorthPacketReader(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source ReadFromMessage(INetworkMessage) Reads a packet from the given INetworkMessage . Declaration public override IIncomingPacket ReadFromMessage(INetworkMessage message) Parameters Type Name Description INetworkMessage message The message to read from. Returns Type Description IIncomingPacket The packet read from the message. Overrides BasePacketReader.ReadFromMessage(INetworkMessage) Implements IPacketReader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketReaders.WalkNorthwestPacketReader.html": {
    "href": "code/Fibula.Protocol.V772.PacketReaders.WalkNorthwestPacketReader.html",
    "title": "Class WalkNorthwestPacketReader | Fibula MMO",
    "keywords": "Class WalkNorthwestPacketReader Class that represents a walk northwest packet reader for the game server. Inheritance System.Object BasePacketReader WalkNorthwestPacketReader Implements IPacketReader Inherited Members BasePacketReader.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketReaders Assembly : Fibula.Protocol.V772.dll Syntax public sealed class WalkNorthwestPacketReader : BasePacketReader, IPacketReader Constructors | Improve this Doc View Source WalkNorthwestPacketReader(ILogger) Initializes a new instance of the WalkNorthwestPacketReader class. Declaration public WalkNorthwestPacketReader(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source ReadFromMessage(INetworkMessage) Reads a packet from the given INetworkMessage . Declaration public override IIncomingPacket ReadFromMessage(INetworkMessage message) Parameters Type Name Description INetworkMessage message The message to read from. Returns Type Description IIncomingPacket The packet read from the message. Overrides BasePacketReader.ReadFromMessage(INetworkMessage) Implements IPacketReader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketReaders.WalkSoutheastPacketReader.html": {
    "href": "code/Fibula.Protocol.V772.PacketReaders.WalkSoutheastPacketReader.html",
    "title": "Class WalkSoutheastPacketReader | Fibula MMO",
    "keywords": "Class WalkSoutheastPacketReader Class that represents a walk southeast packet reader for the game server. Inheritance System.Object BasePacketReader WalkSoutheastPacketReader Implements IPacketReader Inherited Members BasePacketReader.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketReaders Assembly : Fibula.Protocol.V772.dll Syntax public sealed class WalkSoutheastPacketReader : BasePacketReader, IPacketReader Constructors | Improve this Doc View Source WalkSoutheastPacketReader(ILogger) Initializes a new instance of the WalkSoutheastPacketReader class. Declaration public WalkSoutheastPacketReader(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source ReadFromMessage(INetworkMessage) Reads a packet from the given INetworkMessage . Declaration public override IIncomingPacket ReadFromMessage(INetworkMessage message) Parameters Type Name Description INetworkMessage message The message to read from. Returns Type Description IIncomingPacket The packet read from the message. Overrides BasePacketReader.ReadFromMessage(INetworkMessage) Implements IPacketReader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketReaders.WalkSouthPacketReader.html": {
    "href": "code/Fibula.Protocol.V772.PacketReaders.WalkSouthPacketReader.html",
    "title": "Class WalkSouthPacketReader | Fibula MMO",
    "keywords": "Class WalkSouthPacketReader Class that represents a walk south packet reader for the game server. Inheritance System.Object BasePacketReader WalkSouthPacketReader Implements IPacketReader Inherited Members BasePacketReader.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketReaders Assembly : Fibula.Protocol.V772.dll Syntax public sealed class WalkSouthPacketReader : BasePacketReader, IPacketReader Constructors | Improve this Doc View Source WalkSouthPacketReader(ILogger) Initializes a new instance of the WalkSouthPacketReader class. Declaration public WalkSouthPacketReader(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source ReadFromMessage(INetworkMessage) Reads a packet from the given INetworkMessage . Declaration public override IIncomingPacket ReadFromMessage(INetworkMessage message) Parameters Type Name Description INetworkMessage message The message to read from. Returns Type Description IIncomingPacket The packet read from the message. Overrides BasePacketReader.ReadFromMessage(INetworkMessage) Implements IPacketReader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketReaders.WalkSouthwestPacketReader.html": {
    "href": "code/Fibula.Protocol.V772.PacketReaders.WalkSouthwestPacketReader.html",
    "title": "Class WalkSouthwestPacketReader | Fibula MMO",
    "keywords": "Class WalkSouthwestPacketReader Class that represents a walk southeast packet reader for the game server. Inheritance System.Object BasePacketReader WalkSouthwestPacketReader Implements IPacketReader Inherited Members BasePacketReader.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketReaders Assembly : Fibula.Protocol.V772.dll Syntax public sealed class WalkSouthwestPacketReader : BasePacketReader, IPacketReader Constructors | Improve this Doc View Source WalkSouthwestPacketReader(ILogger) Initializes a new instance of the WalkSouthwestPacketReader class. Declaration public WalkSouthwestPacketReader(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source ReadFromMessage(INetworkMessage) Reads a packet from the given INetworkMessage . Declaration public override IIncomingPacket ReadFromMessage(INetworkMessage message) Parameters Type Name Description INetworkMessage message The message to read from. Returns Type Description IIncomingPacket The packet read from the message. Overrides BasePacketReader.ReadFromMessage(INetworkMessage) Implements IPacketReader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketReaders.WalkWestPacketReader.html": {
    "href": "code/Fibula.Protocol.V772.PacketReaders.WalkWestPacketReader.html",
    "title": "Class WalkWestPacketReader | Fibula MMO",
    "keywords": "Class WalkWestPacketReader Class that represents a walk west packet reader for the game server. Inheritance System.Object BasePacketReader WalkWestPacketReader Implements IPacketReader Inherited Members BasePacketReader.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketReaders Assembly : Fibula.Protocol.V772.dll Syntax public sealed class WalkWestPacketReader : BasePacketReader, IPacketReader Constructors | Improve this Doc View Source WalkWestPacketReader(ILogger) Initializes a new instance of the WalkWestPacketReader class. Declaration public WalkWestPacketReader(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source ReadFromMessage(INetworkMessage) Reads a packet from the given INetworkMessage . Declaration public override IIncomingPacket ReadFromMessage(INetworkMessage message) Parameters Type Name Description INetworkMessage message The message to read from. Returns Type Description IIncomingPacket The packet read from the message. Overrides BasePacketReader.ReadFromMessage(INetworkMessage) Implements IPacketReader Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.AddCreaturePacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.AddCreaturePacketWriter.html",
    "title": "Class AddCreaturePacketWriter | Fibula MMO",
    "keywords": "Class AddCreaturePacketWriter Class that represents an add creature packet writer for the game server. Inheritance System.Object BasePacketWriter AddCreaturePacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class AddCreaturePacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source AddCreaturePacketWriter(ILogger) Initializes a new instance of the AddCreaturePacketWriter class. Declaration public AddCreaturePacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.AnimatedTextPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.AnimatedTextPacketWriter.html",
    "title": "Class AnimatedTextPacketWriter | Fibula MMO",
    "keywords": "Class AnimatedTextPacketWriter Class that represents an animated text packet writer for the game server. Inheritance System.Object BasePacketWriter AnimatedTextPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class AnimatedTextPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source AnimatedTextPacketWriter(ILogger) Initializes a new instance of the AnimatedTextPacketWriter class. Declaration public AnimatedTextPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.CharacterListPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.CharacterListPacketWriter.html",
    "title": "Class CharacterListPacketWriter | Fibula MMO",
    "keywords": "Class CharacterListPacketWriter Class that represents a character list packet writer for the game server. Inheritance System.Object BasePacketWriter CharacterListPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class CharacterListPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source CharacterListPacketWriter(ILogger) Initializes a new instance of the CharacterListPacketWriter class. Declaration public CharacterListPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.ContainerAddItemPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.ContainerAddItemPacketWriter.html",
    "title": "Class ContainerAddItemPacketWriter | Fibula MMO",
    "keywords": "Class ContainerAddItemPacketWriter Class that represents a container add item packet writer for the game server. Inheritance System.Object BasePacketWriter ContainerAddItemPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class ContainerAddItemPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source ContainerAddItemPacketWriter(ILogger) Initializes a new instance of the ContainerAddItemPacketWriter class. Declaration public ContainerAddItemPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.ContainerClosePacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.ContainerClosePacketWriter.html",
    "title": "Class ContainerClosePacketWriter | Fibula MMO",
    "keywords": "Class ContainerClosePacketWriter Class that represents a container close packet writer for the game server. Inheritance System.Object BasePacketWriter ContainerClosePacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class ContainerClosePacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source ContainerClosePacketWriter(ILogger) Initializes a new instance of the ContainerClosePacketWriter class. Declaration public ContainerClosePacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.ContainerOpenPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.ContainerOpenPacketWriter.html",
    "title": "Class ContainerOpenPacketWriter | Fibula MMO",
    "keywords": "Class ContainerOpenPacketWriter Class that represents a container open packet writer for the game server. Inheritance System.Object BasePacketWriter ContainerOpenPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class ContainerOpenPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source ContainerOpenPacketWriter(ILogger) Initializes a new instance of the ContainerOpenPacketWriter class. Declaration public ContainerOpenPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.ContainerRemoveItemPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.ContainerRemoveItemPacketWriter.html",
    "title": "Class ContainerRemoveItemPacketWriter | Fibula MMO",
    "keywords": "Class ContainerRemoveItemPacketWriter Class that represents a container remote item packet writer for the game server. Inheritance System.Object BasePacketWriter ContainerRemoveItemPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class ContainerRemoveItemPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source ContainerRemoveItemPacketWriter(ILogger) Initializes a new instance of the ContainerRemoveItemPacketWriter class. Declaration public ContainerRemoveItemPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.ContainerUpdateItemPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.ContainerUpdateItemPacketWriter.html",
    "title": "Class ContainerUpdateItemPacketWriter | Fibula MMO",
    "keywords": "Class ContainerUpdateItemPacketWriter Class that represents a container update item packet writer for the game server. Inheritance System.Object BasePacketWriter ContainerUpdateItemPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class ContainerUpdateItemPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source ContainerUpdateItemPacketWriter(ILogger) Initializes a new instance of the ContainerUpdateItemPacketWriter class. Declaration public ContainerUpdateItemPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.CreatureHealthPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.CreatureHealthPacketWriter.html",
    "title": "Class CreatureHealthPacketWriter | Fibula MMO",
    "keywords": "Class CreatureHealthPacketWriter Class that represents a creature health packet writer for the game server. Inheritance System.Object BasePacketWriter CreatureHealthPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class CreatureHealthPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source CreatureHealthPacketWriter(ILogger) Initializes a new instance of the CreatureHealthPacketWriter class. Declaration public CreatureHealthPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.CreatureLightPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.CreatureLightPacketWriter.html",
    "title": "Class CreatureLightPacketWriter | Fibula MMO",
    "keywords": "Class CreatureLightPacketWriter Class that represents a creature light packet writer for the game server. Inheritance System.Object BasePacketWriter CreatureLightPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class CreatureLightPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source CreatureLightPacketWriter(ILogger) Initializes a new instance of the CreatureLightPacketWriter class. Declaration public CreatureLightPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.CreatureMovedPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.CreatureMovedPacketWriter.html",
    "title": "Class CreatureMovedPacketWriter | Fibula MMO",
    "keywords": "Class CreatureMovedPacketWriter Class that represents a creature moved packet writer for the game server. Inheritance System.Object BasePacketWriter CreatureMovedPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class CreatureMovedPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source CreatureMovedPacketWriter(ILogger) Initializes a new instance of the CreatureMovedPacketWriter class. Declaration public CreatureMovedPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.CreatureSkullPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.CreatureSkullPacketWriter.html",
    "title": "Class CreatureSkullPacketWriter | Fibula MMO",
    "keywords": "Class CreatureSkullPacketWriter Class that represents a creature skull packet writer for the game server. Inheritance System.Object BasePacketWriter CreatureSkullPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class CreatureSkullPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source CreatureSkullPacketWriter(ILogger) Initializes a new instance of the CreatureSkullPacketWriter class. Declaration public CreatureSkullPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.CreatureSpeechPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.CreatureSpeechPacketWriter.html",
    "title": "Class CreatureSpeechPacketWriter | Fibula MMO",
    "keywords": "Class CreatureSpeechPacketWriter Class that represents a creature speech packet writer for the game server. Inheritance System.Object BasePacketWriter CreatureSpeechPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class CreatureSpeechPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source CreatureSpeechPacketWriter(ILogger) Initializes a new instance of the CreatureSpeechPacketWriter class. Declaration public CreatureSpeechPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.CreatureSpeedChangePacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.CreatureSpeedChangePacketWriter.html",
    "title": "Class CreatureSpeedChangePacketWriter | Fibula MMO",
    "keywords": "Class CreatureSpeedChangePacketWriter Class that represents a creature speed change packet writer for the game server. Inheritance System.Object BasePacketWriter CreatureSpeedChangePacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class CreatureSpeedChangePacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source CreatureSpeedChangePacketWriter(ILogger) Initializes a new instance of the CreatureSpeedChangePacketWriter class. Declaration public CreatureSpeedChangePacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.CreatureTurnedPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.CreatureTurnedPacketWriter.html",
    "title": "Class CreatureTurnedPacketWriter | Fibula MMO",
    "keywords": "Class CreatureTurnedPacketWriter Class that represents a creature turned packet writer for the game server. Inheritance System.Object BasePacketWriter CreatureTurnedPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class CreatureTurnedPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source CreatureTurnedPacketWriter(ILogger) Initializes a new instance of the CreatureTurnedPacketWriter class. Declaration public CreatureTurnedPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.GameServerDisconnectPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.GameServerDisconnectPacketWriter.html",
    "title": "Class GameServerDisconnectPacketWriter | Fibula MMO",
    "keywords": "Class GameServerDisconnectPacketWriter Class that represents a game server disconnection packet writer for the game server. Inheritance System.Object BasePacketWriter GameServerDisconnectPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class GameServerDisconnectPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source GameServerDisconnectPacketWriter(ILogger) Initializes a new instance of the GameServerDisconnectPacketWriter class. Declaration public GameServerDisconnectPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.GatewayServerDisconnectPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.GatewayServerDisconnectPacketWriter.html",
    "title": "Class GatewayServerDisconnectPacketWriter | Fibula MMO",
    "keywords": "Class GatewayServerDisconnectPacketWriter Class that represents a gateway server disconnect packet writer for the game server. Inheritance System.Object BasePacketWriter GatewayServerDisconnectPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class GatewayServerDisconnectPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source GatewayServerDisconnectPacketWriter(ILogger) Initializes a new instance of the GatewayServerDisconnectPacketWriter class. Declaration public GatewayServerDisconnectPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.HeartbeatPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.HeartbeatPacketWriter.html",
    "title": "Class HeartbeatPacketWriter | Fibula MMO",
    "keywords": "Class HeartbeatPacketWriter Class that represents a heartbeat packet writer for the game server. Inheritance System.Object BasePacketWriter HeartbeatPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class HeartbeatPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source HeartbeatPacketWriter(ILogger) Initializes a new instance of the HeartbeatPacketWriter class. Declaration public HeartbeatPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.HeartbeatResponsePacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.HeartbeatResponsePacketWriter.html",
    "title": "Class HeartbeatResponsePacketWriter | Fibula MMO",
    "keywords": "Class HeartbeatResponsePacketWriter Class that represents a heartbeat response packet writer for the game server. Inheritance System.Object BasePacketWriter HeartbeatResponsePacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class HeartbeatResponsePacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source HeartbeatResponsePacketWriter(ILogger) Initializes a new instance of the HeartbeatResponsePacketWriter class. Declaration public HeartbeatResponsePacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.html",
    "title": "Namespace Fibula.Protocol.V772.PacketWriters | Fibula MMO",
    "keywords": "Namespace Fibula.Protocol.V772.PacketWriters Classes AddCreaturePacketWriter Class that represents an add creature packet writer for the game server. AnimatedTextPacketWriter Class that represents an animated text packet writer for the game server. CharacterListPacketWriter Class that represents a character list packet writer for the game server. ContainerAddItemPacketWriter Class that represents a container add item packet writer for the game server. ContainerClosePacketWriter Class that represents a container close packet writer for the game server. ContainerOpenPacketWriter Class that represents a container open packet writer for the game server. ContainerRemoveItemPacketWriter Class that represents a container remote item packet writer for the game server. ContainerUpdateItemPacketWriter Class that represents a container update item packet writer for the game server. CreatureHealthPacketWriter Class that represents a creature health packet writer for the game server. CreatureLightPacketWriter Class that represents a creature light packet writer for the game server. CreatureMovedPacketWriter Class that represents a creature moved packet writer for the game server. CreatureSkullPacketWriter Class that represents a creature skull packet writer for the game server. CreatureSpeechPacketWriter Class that represents a creature speech packet writer for the game server. CreatureSpeedChangePacketWriter Class that represents a creature speed change packet writer for the game server. CreatureTurnedPacketWriter Class that represents a creature turned packet writer for the game server. GameServerDisconnectPacketWriter Class that represents a game server disconnection packet writer for the game server. GatewayServerDisconnectPacketWriter Class that represents a gateway server disconnect packet writer for the game server. HeartbeatPacketWriter Class that represents a heartbeat packet writer for the game server. HeartbeatResponsePacketWriter Class that represents a heartbeat response packet writer for the game server. MagicEffectPacketWriter Class that represents a magic effect response writer for the game server. MapDescriptionPacketWriter Class that represents a map description response writer for the game server. MapPartialDescriptionPacketWriter Class that represents a map partial description packet writer for the game server. MessageOfTheDayPacketWriter Class that represents a message of the day packet writer for the game server. PlayerCancelAttackPacketWriter Class that represents a player cancel attack packet writer for the game server. PlayerCancelWalkPacketWriter Class that represents a player cancel walk packet writer for the game server. PlayerConditionsPacketWriter Class that represents a player conditions packet writer for the game server. PlayerInventoryClearSlotPacketWriter Class that represents an inventory slot clear packet writer for the game server. PlayerInventorySetSlotPacketWriter Class that represents an inventory set slot packet writer for the game server. PlayerLoginPacketWriter Class that represents a player login packet writer for the game server. PlayerSkillsPacketWriter Class that represents a player skills packet writer for the game server. PlayerStatsPacketWriter Class that represents a player stats packet writer for the game server. RemoveAtPositionPacketWriter Class that represents a remove at position packet writer for the game server. SquarePacketWriter Class that represents a creature square packet writer for the game server. TextMessagePacketWriter Class that represents a text message packet writer for the game server. TileUpdatePacketWriter Class that represents a tile update packet writer for the game server. WorldLightPacketWriter Class that represents a world light packet writer for the game server."
  },
  "code/Fibula.Protocol.V772.PacketWriters.MagicEffectPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.MagicEffectPacketWriter.html",
    "title": "Class MagicEffectPacketWriter | Fibula MMO",
    "keywords": "Class MagicEffectPacketWriter Class that represents a magic effect response writer for the game server. Inheritance System.Object BasePacketWriter MagicEffectPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class MagicEffectPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source MagicEffectPacketWriter(ILogger) Initializes a new instance of the MagicEffectPacketWriter class. Declaration public MagicEffectPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.MapDescriptionPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.MapDescriptionPacketWriter.html",
    "title": "Class MapDescriptionPacketWriter | Fibula MMO",
    "keywords": "Class MapDescriptionPacketWriter Class that represents a map description response writer for the game server. Inheritance System.Object BasePacketWriter MapDescriptionPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class MapDescriptionPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source MapDescriptionPacketWriter(ILogger) Initializes a new instance of the MapDescriptionPacketWriter class. Declaration public MapDescriptionPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.MapPartialDescriptionPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.MapPartialDescriptionPacketWriter.html",
    "title": "Class MapPartialDescriptionPacketWriter | Fibula MMO",
    "keywords": "Class MapPartialDescriptionPacketWriter Class that represents a map partial description packet writer for the game server. Inheritance System.Object BasePacketWriter MapPartialDescriptionPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class MapPartialDescriptionPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source MapPartialDescriptionPacketWriter(ILogger) Initializes a new instance of the MapPartialDescriptionPacketWriter class. Declaration public MapPartialDescriptionPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.MessageOfTheDayPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.MessageOfTheDayPacketWriter.html",
    "title": "Class MessageOfTheDayPacketWriter | Fibula MMO",
    "keywords": "Class MessageOfTheDayPacketWriter Class that represents a message of the day packet writer for the game server. Inheritance System.Object BasePacketWriter MessageOfTheDayPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class MessageOfTheDayPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source MessageOfTheDayPacketWriter(ILogger) Initializes a new instance of the MessageOfTheDayPacketWriter class. Declaration public MessageOfTheDayPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.PlayerCancelAttackPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.PlayerCancelAttackPacketWriter.html",
    "title": "Class PlayerCancelAttackPacketWriter | Fibula MMO",
    "keywords": "Class PlayerCancelAttackPacketWriter Class that represents a player cancel attack packet writer for the game server. Inheritance System.Object BasePacketWriter PlayerCancelAttackPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class PlayerCancelAttackPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source PlayerCancelAttackPacketWriter(ILogger) Initializes a new instance of the PlayerCancelAttackPacketWriter class. Declaration public PlayerCancelAttackPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.PlayerCancelWalkPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.PlayerCancelWalkPacketWriter.html",
    "title": "Class PlayerCancelWalkPacketWriter | Fibula MMO",
    "keywords": "Class PlayerCancelWalkPacketWriter Class that represents a player cancel walk packet writer for the game server. Inheritance System.Object BasePacketWriter PlayerCancelWalkPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class PlayerCancelWalkPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source PlayerCancelWalkPacketWriter(ILogger) Initializes a new instance of the PlayerCancelWalkPacketWriter class. Declaration public PlayerCancelWalkPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.PlayerConditionsPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.PlayerConditionsPacketWriter.html",
    "title": "Class PlayerConditionsPacketWriter | Fibula MMO",
    "keywords": "Class PlayerConditionsPacketWriter Class that represents a player conditions packet writer for the game server. Inheritance System.Object BasePacketWriter PlayerConditionsPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class PlayerConditionsPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source PlayerConditionsPacketWriter(ILogger) Initializes a new instance of the PlayerConditionsPacketWriter class. Declaration public PlayerConditionsPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.PlayerInventoryClearSlotPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.PlayerInventoryClearSlotPacketWriter.html",
    "title": "Class PlayerInventoryClearSlotPacketWriter | Fibula MMO",
    "keywords": "Class PlayerInventoryClearSlotPacketWriter Class that represents an inventory slot clear packet writer for the game server. Inheritance System.Object BasePacketWriter PlayerInventoryClearSlotPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class PlayerInventoryClearSlotPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source PlayerInventoryClearSlotPacketWriter(ILogger) Initializes a new instance of the PlayerInventoryClearSlotPacketWriter class. Declaration public PlayerInventoryClearSlotPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.PlayerInventorySetSlotPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.PlayerInventorySetSlotPacketWriter.html",
    "title": "Class PlayerInventorySetSlotPacketWriter | Fibula MMO",
    "keywords": "Class PlayerInventorySetSlotPacketWriter Class that represents an inventory set slot packet writer for the game server. Inheritance System.Object BasePacketWriter PlayerInventorySetSlotPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class PlayerInventorySetSlotPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source PlayerInventorySetSlotPacketWriter(ILogger) Initializes a new instance of the PlayerInventorySetSlotPacketWriter class. Declaration public PlayerInventorySetSlotPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.PlayerLoginPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.PlayerLoginPacketWriter.html",
    "title": "Class PlayerLoginPacketWriter | Fibula MMO",
    "keywords": "Class PlayerLoginPacketWriter Class that represents a player login packet writer for the game server. Inheritance System.Object BasePacketWriter PlayerLoginPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class PlayerLoginPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source PlayerLoginPacketWriter(ILogger) Initializes a new instance of the PlayerLoginPacketWriter class. Declaration public PlayerLoginPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.PlayerSkillsPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.PlayerSkillsPacketWriter.html",
    "title": "Class PlayerSkillsPacketWriter | Fibula MMO",
    "keywords": "Class PlayerSkillsPacketWriter Class that represents a player skills packet writer for the game server. Inheritance System.Object BasePacketWriter PlayerSkillsPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class PlayerSkillsPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source PlayerSkillsPacketWriter(ILogger) Initializes a new instance of the PlayerSkillsPacketWriter class. Declaration public PlayerSkillsPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.PlayerStatsPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.PlayerStatsPacketWriter.html",
    "title": "Class PlayerStatsPacketWriter | Fibula MMO",
    "keywords": "Class PlayerStatsPacketWriter Class that represents a player stats packet writer for the game server. Inheritance System.Object BasePacketWriter PlayerStatsPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class PlayerStatsPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source PlayerStatsPacketWriter(ILogger) Initializes a new instance of the PlayerStatsPacketWriter class. Declaration public PlayerStatsPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.RemoveAtPositionPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.RemoveAtPositionPacketWriter.html",
    "title": "Class RemoveAtPositionPacketWriter | Fibula MMO",
    "keywords": "Class RemoveAtPositionPacketWriter Class that represents a remove at position packet writer for the game server. Inheritance System.Object BasePacketWriter RemoveAtPositionPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class RemoveAtPositionPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source RemoveAtPositionPacketWriter(ILogger) Initializes a new instance of the RemoveAtPositionPacketWriter class. Declaration public RemoveAtPositionPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.SquarePacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.SquarePacketWriter.html",
    "title": "Class SquarePacketWriter | Fibula MMO",
    "keywords": "Class SquarePacketWriter Class that represents a creature square packet writer for the game server. Inheritance System.Object BasePacketWriter SquarePacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class SquarePacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source SquarePacketWriter(ILogger) Initializes a new instance of the SquarePacketWriter class. Declaration public SquarePacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.TextMessagePacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.TextMessagePacketWriter.html",
    "title": "Class TextMessagePacketWriter | Fibula MMO",
    "keywords": "Class TextMessagePacketWriter Class that represents a text message packet writer for the game server. Inheritance System.Object BasePacketWriter TextMessagePacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class TextMessagePacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source TextMessagePacketWriter(ILogger) Initializes a new instance of the TextMessagePacketWriter class. Declaration public TextMessagePacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.TileUpdatePacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.TileUpdatePacketWriter.html",
    "title": "Class TileUpdatePacketWriter | Fibula MMO",
    "keywords": "Class TileUpdatePacketWriter Class that represents a tile update packet writer for the game server. Inheritance System.Object BasePacketWriter TileUpdatePacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class TileUpdatePacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source TileUpdatePacketWriter(ILogger) Initializes a new instance of the TileUpdatePacketWriter class. Declaration public TileUpdatePacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PacketWriters.WorldLightPacketWriter.html": {
    "href": "code/Fibula.Protocol.V772.PacketWriters.WorldLightPacketWriter.html",
    "title": "Class WorldLightPacketWriter | Fibula MMO",
    "keywords": "Class WorldLightPacketWriter Class that represents a world light packet writer for the game server. Inheritance System.Object BasePacketWriter WorldLightPacketWriter Implements IPacketWriter Inherited Members BasePacketWriter.Logger System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772.PacketWriters Assembly : Fibula.Protocol.V772.dll Syntax public class WorldLightPacketWriter : BasePacketWriter, IPacketWriter Constructors | Improve this Doc View Source WorldLightPacketWriter(ILogger) Initializes a new instance of the WorldLightPacketWriter class. Declaration public WorldLightPacketWriter(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Methods | Improve this Doc View Source WriteToMessage(IOutboundPacket, ref INetworkMessage) Writes a packet to the given INetworkMessage . Declaration public override void WriteToMessage(IOutboundPacket packet, ref INetworkMessage message) Parameters Type Name Description IOutboundPacket packet The packet to write. INetworkMessage message The message to write into. Overrides BasePacketWriter.WriteToMessage(IOutboundPacket, ref INetworkMessage) Implements IPacketWriter Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.PredefinedItemSet_v772.html": {
    "href": "code/Fibula.Protocol.V772.PredefinedItemSet_v772.html",
    "title": "Class PredefinedItemSet_v772 | Fibula MMO",
    "keywords": "Class PredefinedItemSet_v772 Class that implements a IPredefinedItemSet for the protocol version 7.72. Inheritance System.Object PredefinedItemSet_v772 Implements IPredefinedItemSet Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772 Assembly : Fibula.Protocol.V772.dll Syntax public class PredefinedItemSet_v772 : IPredefinedItemSet Constructors | Improve this Doc View Source PredefinedItemSet_v772(IItemFactory) Initializes a new instance of the PredefinedItemSet_v772 class. Declaration public PredefinedItemSet_v772(IItemFactory itemFactory) Parameters Type Name Description IItemFactory itemFactory A reference to the item factory in use. Fields | Improve this Doc View Source BloodPoolTypeId The id of the type for a blood pool on the floor. Declaration public const ushort BloodPoolTypeId = 2886 Field Value Type Description System.UInt16 | Improve this Doc View Source BloodSplatterTypeId The id of the type for a blood splatter on the floor. Declaration public const ushort BloodSplatterTypeId = 2889 Field Value Type Description System.UInt16 | Improve this Doc View Source SmallBoneTypeId The id of the type for a small bone. Declaration public const ushort SmallBoneTypeId = 3115 Field Value Type Description System.UInt16 | Improve this Doc View Source SmallFireTypeId The id of the type for a small file. Declaration public const ushort SmallFireTypeId = 2120 Field Value Type Description System.UInt16 Methods | Improve this Doc View Source FindPoolForBloodType(BloodType) Finds the splatter IItemType for a given blood type. Declaration public IItemType FindPoolForBloodType(BloodType bloodType) Parameters Type Name Description BloodType bloodType The type of blood to look the item type for. Returns Type Description IItemType The IItemType that's predefined for that blood type, or null if none is. | Improve this Doc View Source FindSplatterForBloodType(BloodType) Finds the splatter IItemType for a given blood type. Declaration public IItemType FindSplatterForBloodType(BloodType bloodType) Parameters Type Name Description BloodType bloodType The type of blood to look the item type for. Returns Type Description IItemType The IItemType that's predefined for that blood type, or null if none is. Implements IPredefinedItemSet Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.SocketConnection_v772.html": {
    "href": "code/Fibula.Protocol.V772.SocketConnection_v772.html",
    "title": "Class SocketConnection_v772 | Fibula MMO",
    "keywords": "Class SocketConnection_v772 Class that represents a standard 7.72 client connection over a TCP socket. Inheritance System.Object SocketConnection_v772 Implements ISocketConnection IConnection Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772 Assembly : Fibula.Protocol.V772.dll Syntax public class SocketConnection_v772 : ISocketConnection, IConnection Constructors | Improve this Doc View Source SocketConnection_v772(ILogger, Socket, IProtocol) Initializes a new instance of the SocketConnection_v772 class. Declaration public SocketConnection_v772(ILogger logger, Socket socket, IProtocol protocol) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. System.Net.Sockets.Socket socket The socket that this connection is for. IProtocol protocol The protocol in use by this connection. Properties | Improve this Doc View Source IsOrphaned Gets a value indicating whether the connection is an orphan. Declaration public bool IsOrphaned { get; } Property Value Type Description System.Boolean | Improve this Doc View Source SocketIp Gets the Socket IP address of this connection, if it is open. Declaration public string SocketIp { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Close() Closes this connection. Declaration public void Close() | Improve this Doc View Source Read() Reads from this connection's stream. Declaration public void Read() | Improve this Doc View Source Send(IEnumerable<IOutboundPacket>) Prepares a INetworkMessage with the reponse packets supplied and sends it. Declaration public void Send(IEnumerable<IOutboundPacket> responsePackets) Parameters Type Name Description System.Collections.Generic.IEnumerable < IOutboundPacket > responsePackets The packets that compose that response. | Improve this Doc View Source SetupAuthenticationKey(UInt32[]) Sets up an Xtea key expected to be matched on subsequent messages. Declaration public void SetupAuthenticationKey(uint[] xteaKey) Parameters Type Name Description System.UInt32 [] xteaKey The XTea key to use in this connection's communications. Events | Improve this Doc View Source Closed Event fired when this connection has been closed. Declaration public event ConnectionClosedDelegate Closed Event Type Type Description ConnectionClosedDelegate | Improve this Doc View Source PacketProcessed Event fired right after this connection has proccessed an IIncomingPacket by any subscriber of the PacketReady event. Declaration public event ConnectionPacketProccessedDelegate PacketProcessed Event Type Type Description ConnectionPacketProccessedDelegate | Improve this Doc View Source PacketReady Event fired when a IIncomingPacket picked up by this connection is ready to be processed. Declaration public event ConnectionPacketReadyDelegate PacketReady Event Type Type Description ConnectionPacketReadyDelegate Implements ISocketConnection IConnection Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Protocol.V772.TileDescriptor_v772.html": {
    "href": "code/Fibula.Protocol.V772.TileDescriptor_v772.html",
    "title": "Class TileDescriptor_v772 | Fibula MMO",
    "keywords": "Class TileDescriptor_v772 Class that represents a tile descriptor for protocol 7.72. Inheritance System.Object TileDescriptor_v772 Implements IProtocolTileDescriptor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Protocol.V772 Assembly : Fibula.Protocol.V772.dll Syntax public class TileDescriptor_v772 : IProtocolTileDescriptor Constructors | Improve this Doc View Source TileDescriptor_v772(ILogger, ICreatureFinder) Initializes a new instance of the TileDescriptor_v772 class. Declaration public TileDescriptor_v772(ILogger logger, ICreatureFinder creatureFinder) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. ICreatureFinder creatureFinder A reference to the creature finder in use. Properties | Improve this Doc View Source CreatureFinder Gets the creature finder in use. Declaration public ICreatureFinder CreatureFinder { get; } Property Value Type Description ICreatureFinder | Improve this Doc View Source Logger Gets the logger in use. Declaration public ILogger Logger { get; } Property Value Type Description Serilog.ILogger Methods | Improve this Doc View Source DescribeTileForPlayer(IPlayer, ITile, out ISet<UInt32>, out ISet<UInt32>) Gets the description segments of a tile as seen by the given player . Declaration public IEnumerable<MapDescriptionSegment> DescribeTileForPlayer(IPlayer player, ITile tile, out ISet<uint> creatureIdsToLearn, out ISet<uint> creatureIdsToForget) Parameters Type Name Description IPlayer player The player for which the tile is being described. ITile tile The tile being described. System.Collections.Generic.ISet < System.UInt32 > creatureIdsToLearn A set of ids of creatures to learn if this description is sent. System.Collections.Generic.ISet < System.UInt32 > creatureIdsToForget A set of ids of creatures to forget if this description is sent. Returns Type Description System.Collections.Generic.IEnumerable < MapDescriptionSegment > A collection of description segments from the tile. Implements IProtocolTileDescriptor Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Providers.Azure.AadTokenMsiBasedProvider.html": {
    "href": "code/Fibula.Providers.Azure.AadTokenMsiBasedProvider.html",
    "title": "Class AadTokenMsiBasedProvider | Fibula MMO",
    "keywords": "Class AadTokenMsiBasedProvider Class that adapts the concrete Microsoft.Azure.Services.AppAuthentication.AzureServiceTokenProvider implementation to the ITokenProvider interface. Inheritance System.Object AadTokenMsiBasedProvider Implements ITokenProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Providers.Azure Assembly : Fibula.Providers.Azure.dll Syntax public class AadTokenMsiBasedProvider : ITokenProvider Constructors | Improve this Doc View Source AadTokenMsiBasedProvider() Initializes a new instance of the AadTokenMsiBasedProvider class. Declaration public AadTokenMsiBasedProvider() Properties | Improve this Doc View Source TokenCallback Gets the most commonly used authentication callback: (authority, resource, scope) => async accessToken. Declaration public Func<string, string, string, Task<string>> TokenCallback { get; } Property Value Type Description System.Func < System.String , System.String , System.String , System.Threading.Tasks.Task < System.String >> Methods | Improve this Doc View Source GetAccessTokenAsync(String, String) Gets an access token to access the given Azure resource. Declaration public Task<string> GetAccessTokenAsync(string resource, string tenantId = null) Parameters Type Name Description System.String resource The resource to access. e.g. 'https://management.azure.com/'. System.String tenantId If not specified, default tenant is used. Managed Service Identity REST protocols do not accept tenantId, so this can only be used with certificate and client secret based authentication. Returns Type Description System.Threading.Tasks.Task < System.String > The access token. Implements ITokenProvider Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Providers.Azure.ConfigurationRootExtensions.html": {
    "href": "code/Fibula.Providers.Azure.ConfigurationRootExtensions.html",
    "title": "Class ConfigurationRootExtensions | Fibula MMO",
    "keywords": "Class ConfigurationRootExtensions Static class that adds convenient methods to add the concrete implementations contained in this library. Inheritance System.Object ConfigurationRootExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Providers.Azure Assembly : Fibula.Providers.Azure.dll Syntax public static class ConfigurationRootExtensions Methods | Improve this Doc View Source AddAzureProviders(IServiceCollection, IConfiguration) Adds all implementations related to Azure providers contained in this library to the services collection. Additionally, registers the options related to the concrete implementations added, such as: KeyVaultSecretsProviderOptions . Declaration public static void AddAzureProviders(this IServiceCollection services, IConfiguration configuration) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services The services collection. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration reference."
  },
  "code/Fibula.Providers.Azure.html": {
    "href": "code/Fibula.Providers.Azure.html",
    "title": "Namespace Fibula.Providers.Azure | Fibula MMO",
    "keywords": "Namespace Fibula.Providers.Azure Classes AadTokenMsiBasedProvider Class that adapts the concrete Microsoft.Azure.Services.AppAuthentication.AzureServiceTokenProvider implementation to the ITokenProvider interface. ConfigurationRootExtensions Static class that adds convenient methods to add the concrete implementations contained in this library. KeyVaultSecretsProvider Class that represents a secrets provider from Azure KeyVault. KeyVaultSecretsProviderOptions Class that represents options for the Azure Key Vault secrets provider configuration."
  },
  "code/Fibula.Providers.Azure.KeyVaultSecretsProvider.html": {
    "href": "code/Fibula.Providers.Azure.KeyVaultSecretsProvider.html",
    "title": "Class KeyVaultSecretsProvider | Fibula MMO",
    "keywords": "Class KeyVaultSecretsProvider Class that represents a secrets provider from Azure KeyVault. Inheritance System.Object KeyVaultSecretsProvider Implements ISecretsProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Providers.Azure Assembly : Fibula.Providers.Azure.dll Syntax public class KeyVaultSecretsProvider : ISecretsProvider Constructors | Improve this Doc View Source KeyVaultSecretsProvider(IOptions<KeyVaultSecretsProviderOptions>, ITokenProvider, ILogger) Initializes a new instance of the KeyVaultSecretsProvider class. Declaration public KeyVaultSecretsProvider(IOptions<KeyVaultSecretsProviderOptions> secretsProviderOptions, ITokenProvider tokenProvider, ILogger logger) Parameters Type Name Description Microsoft.Extensions.Options.IOptions < KeyVaultSecretsProviderOptions > secretsProviderOptions A reference to the secrets provider options. ITokenProvider tokenProvider A reference to the token provider service to use to obtain access to the vault. Serilog.ILogger logger A logger for this provider. Properties | Improve this Doc View Source BaseUri Gets the KeyVault base uri currenly in use by this provider. Declaration public Uri BaseUri { get; } Property Value Type Description System.Uri | Improve this Doc View Source Logger Gets the logger in use by this provider. Declaration public ILogger Logger { get; } Property Value Type Description Serilog.ILogger Methods | Improve this Doc View Source GetSecretValueAsync(String) Gets a Secret's value from the KeyVault as an asynchronous operation. Declaration public Task<SecureString> GetSecretValueAsync(string secretName) Parameters Type Name Description System.String secretName The name of the secret to get the value of. Returns Type Description System.Threading.Tasks.Task < System.Security.SecureString > A System.Threading.Tasks.Task representing the asynchronous operation. | Improve this Doc View Source ListSecretIdentifiers() Retrieves a list of Secret identifiers from the secret store. Declaration public Task<IEnumerable<string>> ListSecretIdentifiers() Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.IEnumerable < System.String >> A list of secret idetifiers. Implements ISecretsProvider Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Providers.Azure.KeyVaultSecretsProviderOptions.html": {
    "href": "code/Fibula.Providers.Azure.KeyVaultSecretsProviderOptions.html",
    "title": "Class KeyVaultSecretsProviderOptions | Fibula MMO",
    "keywords": "Class KeyVaultSecretsProviderOptions Class that represents options for the Azure Key Vault secrets provider configuration. Inheritance System.Object KeyVaultSecretsProviderOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Providers.Azure Assembly : Fibula.Providers.Azure.dll Syntax public class KeyVaultSecretsProviderOptions Properties | Improve this Doc View Source VaultBaseUrl Gets or sets the base url for the Key Vault. Declaration [Required(ErrorMessage = \"A Key Vault URL is required.\")] [Url(ErrorMessage = \"An invalid URL was supplied.\")] public string VaultBaseUrl { get; set; } Property Value Type Description System.String Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Providers.Contracts.html": {
    "href": "code/Fibula.Providers.Contracts.html",
    "title": "Namespace Fibula.Providers.Contracts | Fibula MMO",
    "keywords": "Namespace Fibula.Providers.Contracts Interfaces ISecretsProvider Interface for a Secrets provider. ITokenProvider Abstracts a token provider service."
  },
  "code/Fibula.Providers.Contracts.ISecretsProvider.html": {
    "href": "code/Fibula.Providers.Contracts.ISecretsProvider.html",
    "title": "Interface ISecretsProvider | Fibula MMO",
    "keywords": "Interface ISecretsProvider Interface for a Secrets provider. Namespace : Fibula.Providers.Contracts Assembly : Fibula.Providers.Contracts.dll Syntax public interface ISecretsProvider Methods | Improve this Doc View Source GetSecretValueAsync(String) Retrieves the specified Secret's value from the secret store. Declaration Task<SecureString> GetSecretValueAsync(string secretName) Parameters Type Name Description System.String secretName The Secret's name to lookup. Returns Type Description System.Threading.Tasks.Task < System.Security.SecureString > A System.Threading.Tasks.Task representig the asynchronous operation. | Improve this Doc View Source ListSecretIdentifiers() Retrieves a list of Secret identifiers from the secret store. Declaration Task<IEnumerable<string>> ListSecretIdentifiers() Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.IEnumerable < System.String >> A list of secret idetifiers. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Providers.Contracts.ITokenProvider.html": {
    "href": "code/Fibula.Providers.Contracts.ITokenProvider.html",
    "title": "Interface ITokenProvider | Fibula MMO",
    "keywords": "Interface ITokenProvider Abstracts a token provider service. Namespace : Fibula.Providers.Contracts Assembly : Fibula.Providers.Contracts.dll Syntax public interface ITokenProvider Properties | Improve this Doc View Source TokenCallback Gets the most commonly used authentication callback: (authority, resource, scope) => async accessToken. Declaration Func<string, string, string, Task<string>> TokenCallback { get; } Property Value Type Description System.Func < System.String , System.String , System.String , System.Threading.Tasks.Task < System.String >> Methods | Improve this Doc View Source GetAccessTokenAsync(String, String) Gets an access token to access the given resource. Declaration Task<string> GetAccessTokenAsync(string resource, string tenantId = null) Parameters Type Name Description System.String resource The resource to access. e.g. 'https://management.azure.com/'. System.String tenantId If not specified, default tenant is used. Managed Service Identity REST protocols do not accept tenantId, so this can only be used with certificate and client secret based authentication. Returns Type Description System.Threading.Tasks.Task < System.String > The access token. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Scheduling.BaseEvent.html": {
    "href": "code/Fibula.Scheduling.BaseEvent.html",
    "title": "Class BaseEvent | Fibula MMO",
    "keywords": "Class BaseEvent Abstract class that represents the base event for scheduling. Inheritance System.Object Priority_Queue.FastPriorityQueueNode Priority_Queue.StablePriorityQueueNode BaseEvent Operation Notification Implements IEvent System.IEquatable < BaseEvent > Inherited Members Priority_Queue.StablePriorityQueueNode.InsertionIndex Priority_Queue.FastPriorityQueueNode.Priority Priority_Queue.FastPriorityQueueNode.QueueIndex System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Scheduling Assembly : Fibula.Scheduling.dll Syntax public abstract class BaseEvent : StablePriorityQueueNode, IEvent, IEquatable<BaseEvent> Constructors | Improve this Doc View Source BaseEvent(UInt32) Initializes a new instance of the BaseEvent class. Declaration public BaseEvent(uint requestorId = 0U) Parameters Type Name Description System.UInt32 requestorId Optional. The id of the creature or entity requesting the event. Default is 0. Properties | Improve this Doc View Source CanBeCancelled Gets or sets a value indicating whether the event can be cancelled. Declaration public abstract bool CanBeCancelled { get; protected set; } Property Value Type Description System.Boolean | Improve this Doc View Source EventId Gets a unique identifier for this event. Declaration public string EventId { get; } Property Value Type Description System.String | Improve this Doc View Source HasCancellationHandler Gets a value indicating whether this event has a handler hooked up for it's Cancelled event. Declaration public bool HasCancellationHandler { get; } Property Value Type Description System.Boolean | Improve this Doc View Source HasExpeditionHandler Gets a value indicating whether this event has a handler hooked up for it's Expedited event. Declaration public bool HasExpeditionHandler { get; } Property Value Type Description System.Boolean | Improve this Doc View Source RepeatAfter Gets or sets the time after which this event should be repeated. The event is not repeated if the value is not positive. Declaration public TimeSpan RepeatAfter { get; protected set; } Property Value Type Description System.TimeSpan | Improve this Doc View Source RequestorId Gets the id of the requestor of this event, if available. Declaration public uint RequestorId { get; } Property Value Type Description System.UInt32 Methods | Improve this Doc View Source Cancel() Attempts to cancel this event. Declaration public bool Cancel() Returns Type Description System.Boolean True if the event is successfully cancelled, false otherwise. | Improve this Doc View Source Equals(BaseEvent) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(BaseEvent other) Parameters Type Name Description BaseEvent other The other object to compare against. Returns Type Description System.Boolean True if the current object is equal to the other parameter, false otherwise. | Improve this Doc View Source Execute(IEventContext) Executes the event logic. Declaration public abstract void Execute(IEventContext context) Parameters Type Name Description IEventContext context The execution context. | Improve this Doc View Source Expedite() Attempts to expedite this event, in other words, requesting it to be fired immediately. Declaration public bool Expedite() Returns Type Description System.Boolean True if the event is successfully expedited, false otherwise. Events | Improve this Doc View Source Cancelled Fired when this event is cancelled. Declaration public event EventCancelledDelegate Cancelled Event Type Type Description EventCancelledDelegate | Improve this Doc View Source Expedited Fired when this event is expedited. Declaration public event EventExpeditedDelegate Expedited Event Type Type Description EventExpeditedDelegate Implements IEvent System.IEquatable<T> Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Scheduling.Contracts.Abstractions.html": {
    "href": "code/Fibula.Scheduling.Contracts.Abstractions.html",
    "title": "Namespace Fibula.Scheduling.Contracts.Abstractions | Fibula MMO",
    "keywords": "Namespace Fibula.Scheduling.Contracts.Abstractions Interfaces IEvent Interface that represents an event. IEventContext Interface for an operation context. IScheduler Interface that represents a scheduler."
  },
  "code/Fibula.Scheduling.Contracts.Abstractions.IEvent.html": {
    "href": "code/Fibula.Scheduling.Contracts.Abstractions.IEvent.html",
    "title": "Interface IEvent | Fibula MMO",
    "keywords": "Interface IEvent Interface that represents an event. Namespace : Fibula.Scheduling.Contracts.Abstractions Assembly : Fibula.Scheduling.Contracts.dll Syntax public interface IEvent Properties | Improve this Doc View Source CanBeCancelled Gets a value indicating whether the event can be cancelled. Declaration bool CanBeCancelled { get; } Property Value Type Description System.Boolean | Improve this Doc View Source EventId Gets a unique identifier for this event. Declaration string EventId { get; } Property Value Type Description System.String | Improve this Doc View Source RepeatAfter Gets the time after which this event should be repeated. The event is not repeated if the value is not positive. Declaration TimeSpan RepeatAfter { get; } Property Value Type Description System.TimeSpan | Improve this Doc View Source RequestorId Gets the id of the requestor of this event, if available. Declaration uint RequestorId { get; } Property Value Type Description System.UInt32 Methods | Improve this Doc View Source Cancel() Attempts to cancel this event. Declaration bool Cancel() Returns Type Description System.Boolean True if the event is successfully cancelled, false otherwise. | Improve this Doc View Source Execute(IEventContext) Executes the event logic. Declaration void Execute(IEventContext context) Parameters Type Name Description IEventContext context The execution context. | Improve this Doc View Source Expedite() Attempts to expedite this event, requesting it to be fired immediately. Declaration bool Expedite() Returns Type Description System.Boolean True if the event is successfully expedited, false otherwise. Events | Improve this Doc View Source Cancelled Delegate fired when this event is cancelled. Declaration event EventCancelledDelegate Cancelled Event Type Type Description EventCancelledDelegate | Improve this Doc View Source Expedited Delegate fired when this event is expedited. Declaration event EventExpeditedDelegate Expedited Event Type Type Description EventExpeditedDelegate Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Scheduling.Contracts.Abstractions.IEventContext.html": {
    "href": "code/Fibula.Scheduling.Contracts.Abstractions.IEventContext.html",
    "title": "Interface IEventContext | Fibula MMO",
    "keywords": "Interface IEventContext Interface for an operation context. Namespace : Fibula.Scheduling.Contracts.Abstractions Assembly : Fibula.Scheduling.Contracts.dll Syntax public interface IEventContext Properties | Improve this Doc View Source Logger Gets a reference to the logger in use. Declaration ILogger Logger { get; } Property Value Type Description Serilog.ILogger Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Scheduling.Contracts.Abstractions.IScheduler.html": {
    "href": "code/Fibula.Scheduling.Contracts.Abstractions.IScheduler.html",
    "title": "Interface IScheduler | Fibula MMO",
    "keywords": "Interface IScheduler Interface that represents a scheduler. Namespace : Fibula.Scheduling.Contracts.Abstractions Assembly : Fibula.Scheduling.Contracts.dll Syntax public interface IScheduler Properties | Improve this Doc View Source CurrentTime Gets the current time. Declaration DateTimeOffset CurrentTime { get; } Property Value Type Description System.DateTimeOffset Methods | Improve this Doc View Source CancelAllFor(UInt32, Type) Cancels all events attributed to the specified requestor. Declaration void CancelAllFor(uint requestorId, Type specificType = null) Parameters Type Name Description System.UInt32 requestorId The id of the requestor. System.Type specificType Optional. The type of event to remove. By default, it will remove all. | Improve this Doc View Source CancelEvent(IEvent) Cancels an event. Declaration bool CancelEvent(IEvent evt) Parameters Type Name Description IEvent evt The event to cancel. Returns Type Description System.Boolean True if the event is cancelled, false otherwise. | Improve this Doc View Source RunAsync(CancellationToken) Begins the scheduler's processing the queue and firing events. Declaration Task RunAsync(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken A token to observe for cancellation. Returns Type Description System.Threading.Tasks.Task A System.Threading.Tasks.Task representing the asynchronous processing operation. | Improve this Doc View Source ScheduleEvent(IEvent, Nullable<TimeSpan>) Schedules an event to be fired at the specified time. Declaration void ScheduleEvent(IEvent eventToSchedule, TimeSpan? delayTime = default(TimeSpan? )) Parameters Type Name Description IEvent eventToSchedule The event to schedule. System.Nullable < System.TimeSpan > delayTime Optional. The time delay after which the event should be fired. If left null, the event is scheduled to be fired ASAP. Events | Improve this Doc View Source EventFired Event fired when an event gets fired by the scheduler. Declaration event EventFiredDelegate EventFired Event Type Type Description EventFiredDelegate Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Scheduling.Contracts.Delegates.EventCancelledDelegate.html": {
    "href": "code/Fibula.Scheduling.Contracts.Delegates.EventCancelledDelegate.html",
    "title": "Delegate EventCancelledDelegate | Fibula MMO",
    "keywords": "Delegate EventCancelledDelegate Delegate to call when an event is cancelled. Namespace : Fibula.Scheduling.Contracts.Delegates Assembly : Fibula.Scheduling.Contracts.dll Syntax public delegate bool EventCancelledDelegate(IEvent evt); Parameters Type Name Description IEvent evt The event that was cancelled. Returns Type Description System.Boolean True if the event is successfully cancelled, false otherwise. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Scheduling.Contracts.Delegates.EventExpeditedDelegate.html": {
    "href": "code/Fibula.Scheduling.Contracts.Delegates.EventExpeditedDelegate.html",
    "title": "Delegate EventExpeditedDelegate | Fibula MMO",
    "keywords": "Delegate EventExpeditedDelegate Delegate to call when an event is processed earlier than the scheduler intended. Namespace : Fibula.Scheduling.Contracts.Delegates Assembly : Fibula.Scheduling.Contracts.dll Syntax public delegate bool EventExpeditedDelegate(IEvent sender); Parameters Type Name Description IEvent sender The sender of the event processed event. Returns Type Description System.Boolean True if the event is successfully expedited, false otherwise. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Scheduling.Contracts.Delegates.EventFiredDelegate.html": {
    "href": "code/Fibula.Scheduling.Contracts.Delegates.EventFiredDelegate.html",
    "title": "Delegate EventFiredDelegate | Fibula MMO",
    "keywords": "Delegate EventFiredDelegate Delegate to call when an event is fired. Namespace : Fibula.Scheduling.Contracts.Delegates Assembly : Fibula.Scheduling.Contracts.dll Syntax public delegate void EventFiredDelegate(object sender, EventFiredEventArgs eventArgs); Parameters Type Name Description System.Object sender The sender of the event fired event. EventFiredEventArgs eventArgs The event arguments that contain the actual event that was fired. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Scheduling.Contracts.Delegates.EventFiredEventArgs.html": {
    "href": "code/Fibula.Scheduling.Contracts.Delegates.EventFiredEventArgs.html",
    "title": "Class EventFiredEventArgs | Fibula MMO",
    "keywords": "Class EventFiredEventArgs Class that represents the event arguments of an EventFiredDelegate event. Inheritance System.Object System.EventArgs EventFiredEventArgs Inherited Members System.EventArgs.Empty System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Scheduling.Contracts.Delegates Assembly : Fibula.Scheduling.Contracts.dll Syntax public class EventFiredEventArgs : EventArgs Constructors | Improve this Doc View Source EventFiredEventArgs(IEvent) Initializes a new instance of the EventFiredEventArgs class. Declaration public EventFiredEventArgs(IEvent evt) Parameters Type Name Description IEvent evt The event to include as the event fired. Properties | Improve this Doc View Source Event Gets the event that was fired. Declaration public IEvent Event { get; } Property Value Type Description IEvent Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Scheduling.Contracts.Delegates.html": {
    "href": "code/Fibula.Scheduling.Contracts.Delegates.html",
    "title": "Namespace Fibula.Scheduling.Contracts.Delegates | Fibula MMO",
    "keywords": "Namespace Fibula.Scheduling.Contracts.Delegates Classes EventFiredEventArgs Class that represents the event arguments of an EventFiredDelegate event. Delegates EventCancelledDelegate Delegate to call when an event is cancelled. EventExpeditedDelegate Delegate to call when an event is processed earlier than the scheduler intended. EventFiredDelegate Delegate to call when an event is fired."
  },
  "code/Fibula.Scheduling.Contracts.Extensions.html": {
    "href": "code/Fibula.Scheduling.Contracts.Extensions.html",
    "title": "Namespace Fibula.Scheduling.Contracts.Extensions | Fibula MMO",
    "keywords": "Namespace Fibula.Scheduling.Contracts.Extensions Classes TimeSpanExtensions Static class that contains helper methods for System.TimeSpan s."
  },
  "code/Fibula.Scheduling.Contracts.Extensions.TimeSpanExtensions.html": {
    "href": "code/Fibula.Scheduling.Contracts.Extensions.TimeSpanExtensions.html",
    "title": "Class TimeSpanExtensions | Fibula MMO",
    "keywords": "Class TimeSpanExtensions Static class that contains helper methods for System.TimeSpan s. Inheritance System.Object TimeSpanExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Scheduling.Contracts.Extensions Assembly : Fibula.Scheduling.Contracts.dll Syntax public static class TimeSpanExtensions Methods | Improve this Doc View Source Round(TimeSpan, TimeSpan) Rounds the given time span by another. Declaration public static TimeSpan Round(this TimeSpan timeSpan, TimeSpan roundBy) Parameters Type Name Description System.TimeSpan timeSpan The time span to round. System.TimeSpan roundBy The time span to round by. Returns Type Description System.TimeSpan The rounded time."
  },
  "code/Fibula.Scheduling.EventContext.html": {
    "href": "code/Fibula.Scheduling.EventContext.html",
    "title": "Class EventContext | Fibula MMO",
    "keywords": "Class EventContext Class that represents an event context. Inheritance System.Object EventContext OperationContext Implements IEventContext Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Scheduling Assembly : Fibula.Scheduling.dll Syntax public class EventContext : IEventContext Constructors | Improve this Doc View Source EventContext(ILogger) Initializes a new instance of the EventContext class. Declaration public EventContext(ILogger logger) Parameters Type Name Description Serilog.ILogger logger A reference to the logger in use. Properties | Improve this Doc View Source Logger Gets a reference to the logger in use. Declaration public ILogger Logger { get; } Property Value Type Description Serilog.ILogger Implements IEventContext Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Scheduling.html": {
    "href": "code/Fibula.Scheduling.html",
    "title": "Namespace Fibula.Scheduling | Fibula MMO",
    "keywords": "Namespace Fibula.Scheduling Classes BaseEvent Abstract class that represents the base event for scheduling. EventContext Class that represents an event context. Scheduler Class that represents a scheduler for events."
  },
  "code/Fibula.Scheduling.Scheduler.html": {
    "href": "code/Fibula.Scheduling.Scheduler.html",
    "title": "Class Scheduler | Fibula MMO",
    "keywords": "Class Scheduler Class that represents a scheduler for events. Inheritance System.Object Scheduler Implements IScheduler Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Scheduling Assembly : Fibula.Scheduling.dll Syntax public class Scheduler : IScheduler Constructors | Improve this Doc View Source Scheduler(ILogger) Initializes a new instance of the Scheduler class. Declaration public Scheduler(ILogger logger) Parameters Type Name Description Serilog.ILogger logger The logger to use. Properties | Improve this Doc View Source CurrentTime Gets the current time. Declaration public DateTimeOffset CurrentTime { get; } Property Value Type Description System.DateTimeOffset | Improve this Doc View Source Logger Gets a reference to the logger instance. Declaration public ILogger Logger { get; } Property Value Type Description Serilog.ILogger Methods | Improve this Doc View Source CancelAllFor(UInt32, Type) Cancels all the events attributed to a requestor. Declaration public void CancelAllFor(uint requestorId, Type specificType = null) Parameters Type Name Description System.UInt32 requestorId The id of the requestor. System.Type specificType Optional. The type of event to remove. By default, it will remove all. | Improve this Doc View Source CancelEvent(IEvent) Cancels an event. Declaration public bool CancelEvent(IEvent evt) Parameters Type Name Description IEvent evt The event to cancel. Returns Type Description System.Boolean True if the event is cancelled, false otherwise. | Improve this Doc View Source RunAsync(CancellationToken) Begins the scheduler's processing the queue and firing events. Declaration public Task RunAsync(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken A token to observe for cancellation. Returns Type Description System.Threading.Tasks.Task A System.Threading.Tasks.Task representing the asynchronous processing operation. | Improve this Doc View Source ScheduleEvent(IEvent, Nullable<TimeSpan>) Schedules an event to be fired after the specified delay time. Declaration public void ScheduleEvent(IEvent eventToSchedule, TimeSpan? delayTime = default(TimeSpan? )) Parameters Type Name Description IEvent eventToSchedule The event to schedule. System.Nullable < System.TimeSpan > delayTime Optional. The time delay after which the event should be fired. If left null, the event is scheduled to be fired ASAP. Events | Improve this Doc View Source EventFired When an event gets fired by the this scheduler. Declaration public event EventFiredDelegate EventFired Event Type Type Description EventFiredDelegate Implements IScheduler Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Scheduling.Tests.html": {
    "href": "code/Fibula.Scheduling.Tests.html",
    "title": "Namespace Fibula.Scheduling.Tests | Fibula MMO",
    "keywords": "Namespace Fibula.Scheduling.Tests Classes SchedulerTests Tests for the Scheduler class."
  },
  "code/Fibula.Scheduling.Tests.SchedulerTests.html": {
    "href": "code/Fibula.Scheduling.Tests.SchedulerTests.html",
    "title": "Class SchedulerTests | Fibula MMO",
    "keywords": "Class SchedulerTests Tests for the Scheduler class. Inheritance System.Object SchedulerTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Scheduling.Tests Assembly : Fibula.Scheduling.Tests.dll Syntax [TestClass] public class SchedulerTests Methods | Improve this Doc View Source Cancelling_AllEventsFor() Checks that CancelAllFor(UInt32, Type) does what it should. Declaration [TestMethod] public Task Cancelling_AllEventsFor() Returns Type Description System.Threading.Tasks.Task A System.Threading.Tasks.Task representing the asynchronous unit test. | Improve this Doc View Source Cancelling_SingleEvent() Checks that CancelEvent(IEvent) does what it should. Declaration [TestMethod] public Task Cancelling_SingleEvent() Returns Type Description System.Threading.Tasks.Task A System.Threading.Tasks.Task representing the asynchronous unit test. | Improve this Doc View Source Event_Expedition_Works() Checks that event expedition works as intented. Declaration [TestMethod] public Task Event_Expedition_Works() Returns Type Description System.Threading.Tasks.Task A System.Threading.Tasks.Task representing the asynchronous unit test. | Improve this Doc View Source OnEventFired_IsCalled() Checks that EventFired gets fired when an event is scheduled. Declaration [TestMethod] public Task OnEventFired_IsCalled() Returns Type Description System.Threading.Tasks.Task A System.Threading.Tasks.Task representing the asynchronous unit test. | Improve this Doc View Source ScheduleEvent_Throws_WhenBad() Checks that ScheduleEvent(IEvent, Nullable<TimeSpan>) throws when needed. Declaration [TestMethod] public void ScheduleEvent_Throws_WhenBad() | Improve this Doc View Source Scheduler_Initialization() Checks Scheduler initialization. Declaration [TestMethod] public void Scheduler_Initialization() Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Security.ConfigurationRootExtensions.html": {
    "href": "code/Fibula.Security.ConfigurationRootExtensions.html",
    "title": "Class ConfigurationRootExtensions | Fibula MMO",
    "keywords": "Class ConfigurationRootExtensions Static class that adds convenient methods to add the concrete implementations contained in this library. Inheritance System.Object ConfigurationRootExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Security Assembly : Fibula.Security.dll Syntax public static class ConfigurationRootExtensions Methods | Improve this Doc View Source AddLocalPemFileRsaDecryptor(IServiceCollection, IConfiguration) Adds the LocalPemFileRsaDecryptor contained in this library to the services collection. It aslo configures the options required by it: LocalPemFileRsaDecryptorOptions . Declaration public static void AddLocalPemFileRsaDecryptor(this IServiceCollection services, IConfiguration configuration) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services The services collection. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration loaded. | Improve this Doc View Source AddSimpleDosDefender(IServiceCollection, IConfiguration) Adds the SimpleDosDefender contained in this library to the services collection. It aslo configures the options required by it: SimpleDosDefenderOptions . Declaration public static void AddSimpleDosDefender(this IServiceCollection services, IConfiguration configuration) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services The services collection. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration loaded."
  },
  "code/Fibula.Security.Contracts.html": {
    "href": "code/Fibula.Security.Contracts.html",
    "title": "Namespace Fibula.Security.Contracts | Fibula MMO",
    "keywords": "Namespace Fibula.Security.Contracts Interfaces IDoSDefender Interface for a DoS defender service. IRsaDecryptor Interface for all RSA decryptor implementations."
  },
  "code/Fibula.Security.Contracts.IDoSDefender.html": {
    "href": "code/Fibula.Security.Contracts.IDoSDefender.html",
    "title": "Interface IDoSDefender | Fibula MMO",
    "keywords": "Interface IDoSDefender Interface for a DoS defender service. Namespace : Fibula.Security.Contracts Assembly : Fibula.Security.Contracts.dll Syntax public interface IDoSDefender Methods | Improve this Doc View Source BlockAddress(String) Blocks a given address. Declaration void BlockAddress(string addressStr) Parameters Type Name Description System.String addressStr The address to block. | Improve this Doc View Source IsBlocked(String) Checks if a given address is blocked. Declaration bool IsBlocked(string addressStr) Parameters Type Name Description System.String addressStr The address to check for. Returns Type Description System.Boolean True if the address is blocked, false otherwise. | Improve this Doc View Source LogConnectionAttempt(String) Logs a connection attempt. Declaration void LogConnectionAttempt(string addressStr) Parameters Type Name Description System.String addressStr The address from which the connection attempt took place. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Security.Contracts.IRsaDecryptor.html": {
    "href": "code/Fibula.Security.Contracts.IRsaDecryptor.html",
    "title": "Interface IRsaDecryptor | Fibula MMO",
    "keywords": "Interface IRsaDecryptor Interface for all RSA decryptor implementations. Namespace : Fibula.Security.Contracts Assembly : Fibula.Security.Contracts.dll Syntax public interface IRsaDecryptor Methods | Improve this Doc View Source Decrypt(Byte[]) Decrypts the data supplied. Declaration Span<byte> Decrypt(byte[] data) Parameters Type Name Description System.Byte [] data The data to decrypt. Returns Type Description System.Span < System.Byte > The decrypted bytes of data. Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Security.Encryption.html": {
    "href": "code/Fibula.Security.Encryption.html",
    "title": "Namespace Fibula.Security.Encryption | Fibula MMO",
    "keywords": "Namespace Fibula.Security.Encryption Classes LocalPemFileRsaDecryptor Class that implements an IRsaDecryptor that loads the private key from a file specified. LocalPemFileRsaDecryptorOptions Class that represents options for the LocalPemFileRsaDecryptor . Xtea Static class that provides helper methods for Xtea encryption and decryption."
  },
  "code/Fibula.Security.Encryption.LocalPemFileRsaDecryptor.html": {
    "href": "code/Fibula.Security.Encryption.LocalPemFileRsaDecryptor.html",
    "title": "Class LocalPemFileRsaDecryptor | Fibula MMO",
    "keywords": "Class LocalPemFileRsaDecryptor Class that implements an IRsaDecryptor that loads the private key from a file specified. Inheritance System.Object LocalPemFileRsaDecryptor Implements IRsaDecryptor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Security.Encryption Assembly : Fibula.Security.dll Syntax public class LocalPemFileRsaDecryptor : IRsaDecryptor Constructors | Improve this Doc View Source LocalPemFileRsaDecryptor(IOptions<LocalPemFileRsaDecryptorOptions>) Initializes a new instance of the LocalPemFileRsaDecryptor class. Declaration public LocalPemFileRsaDecryptor(IOptions<LocalPemFileRsaDecryptorOptions> options) Parameters Type Name Description Microsoft.Extensions.Options.IOptions < LocalPemFileRsaDecryptorOptions > options The options for this decryptor. Properties | Improve this Doc View Source Options Gets the options for this decryptor. Declaration public LocalPemFileRsaDecryptorOptions Options { get; } Property Value Type Description LocalPemFileRsaDecryptorOptions Methods | Improve this Doc View Source Decrypt(Byte[]) Decrypts the data supplied. Declaration public Span<byte> Decrypt(byte[] data) Parameters Type Name Description System.Byte [] data The data to decrypt. Returns Type Description System.Span < System.Byte > The decrypted bytes of data. Implements IRsaDecryptor Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Security.Encryption.LocalPemFileRsaDecryptorOptions.html": {
    "href": "code/Fibula.Security.Encryption.LocalPemFileRsaDecryptorOptions.html",
    "title": "Class LocalPemFileRsaDecryptorOptions | Fibula MMO",
    "keywords": "Class LocalPemFileRsaDecryptorOptions Class that represents options for the LocalPemFileRsaDecryptor . Inheritance System.Object LocalPemFileRsaDecryptorOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Security.Encryption Assembly : Fibula.Security.dll Syntax public class LocalPemFileRsaDecryptorOptions Properties | Improve this Doc View Source FilePath Gets or sets the path to the PEM file. Declaration [Required(ErrorMessage = \"A path for the .pem file must be speficied.\")] public string FilePath { get; set; } Property Value Type Description System.String Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Security.Encryption.Xtea.html": {
    "href": "code/Fibula.Security.Encryption.Xtea.html",
    "title": "Class Xtea | Fibula MMO",
    "keywords": "Class Xtea Static class that provides helper methods for Xtea encryption and decryption. Inheritance System.Object Xtea Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Security.Encryption Assembly : Fibula.Security.dll Syntax public static class Xtea Methods | Improve this Doc View Source Decrypt(Span<Byte>, UInt32[], out Int32) Decrypts a byte range. Declaration public static bool Decrypt(Span<byte> buffer, uint[] key, out int messageLength) Parameters Type Name Description System.Span < System.Byte > buffer The bytes to decrypt. System.UInt32 [] key The decryption key bytes. System.Int32 messageLength The resulting length of the buffer. Returns Type Description System.Boolean True if decryption was successful, false otherwise. | Improve this Doc View Source Encrypt(Span<Byte>, UInt32[], out Int32) Encrypts a byte range. Declaration public static bool Encrypt(Span<byte> buffer, uint[] key, out int messageLength) Parameters Type Name Description System.Span < System.Byte > buffer The bytes to encrypt. System.UInt32 [] key The encryption key bytes. System.Int32 messageLength The resulting length of the buffer. Returns Type Description System.Boolean True if encryption was successful, false otherwise."
  },
  "code/Fibula.Security.html": {
    "href": "code/Fibula.Security.html",
    "title": "Namespace Fibula.Security | Fibula MMO",
    "keywords": "Namespace Fibula.Security Classes ConfigurationRootExtensions Static class that adds convenient methods to add the concrete implementations contained in this library. SimpleDosDefender Class that represents a simple DoS defender that will block addresses but not unblock them (until the application is restarted, since state is not persisted). This is helpful only with high connection attempt counts. SimpleDosDefenderOptions Class that represents options for the login listener."
  },
  "code/Fibula.Security.SimpleDosDefender.html": {
    "href": "code/Fibula.Security.SimpleDosDefender.html",
    "title": "Class SimpleDosDefender | Fibula MMO",
    "keywords": "Class SimpleDosDefender Class that represents a simple DoS defender that will block addresses but not unblock them (until the application is restarted, since state is not persisted). This is helpful only with high connection attempt counts. Inheritance System.Object SimpleDosDefender Implements IDoSDefender Microsoft.Extensions.Hosting.IHostedService Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Security Assembly : Fibula.Security.dll Syntax public class SimpleDosDefender : IDoSDefender, IHostedService Constructors | Improve this Doc View Source SimpleDosDefender(IOptions<SimpleDosDefenderOptions>) Initializes a new instance of the SimpleDosDefender class. Declaration public SimpleDosDefender(IOptions<SimpleDosDefenderOptions> options) Parameters Type Name Description Microsoft.Extensions.Options.IOptions < SimpleDosDefenderOptions > options The options for this defender. Properties | Improve this Doc View Source Options Gets the options set for this defender. Declaration public SimpleDosDefenderOptions Options { get; } Property Value Type Description SimpleDosDefenderOptions Methods | Improve this Doc View Source BlockAddress(String) Blocks a given address. Declaration public void BlockAddress(string addressStr) Parameters Type Name Description System.String addressStr The address to block. | Improve this Doc View Source IsBlocked(String) Checks if a given address is blocked. Declaration public bool IsBlocked(string addressStr) Parameters Type Name Description System.String addressStr The address to check for. Returns Type Description System.Boolean True if the address is blocked, false otherwise. | Improve this Doc View Source LogConnectionAttempt(String) Logs a connection attempt. Declaration public void LogConnectionAttempt(string addressStr) Parameters Type Name Description System.String addressStr The address from which the connection attempt took place. | Improve this Doc View Source StartAsync(CancellationToken) Starts the defender service. Declaration public Task StartAsync(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken A token to observe for cancellation. Returns Type Description System.Threading.Tasks.Task A System.Threading.Tasks.Task representing the result of the asynchronous operation. | Improve this Doc View Source StopAsync(CancellationToken) Stops the defender service. Declaration public Task StopAsync(CancellationToken cancellationToken) Parameters Type Name Description System.Threading.CancellationToken cancellationToken A token to observe for cancellation. Returns Type Description System.Threading.Tasks.Task A System.Threading.Tasks.Task representing the asynchronous operation. Implements IDoSDefender Microsoft.Extensions.Hosting.IHostedService Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Security.SimpleDosDefenderOptions.html": {
    "href": "code/Fibula.Security.SimpleDosDefenderOptions.html",
    "title": "Class SimpleDosDefenderOptions | Fibula MMO",
    "keywords": "Class SimpleDosDefenderOptions Class that represents options for the login listener. Inheritance System.Object SimpleDosDefenderOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Security Assembly : Fibula.Security.dll Syntax public class SimpleDosDefenderOptions Properties | Improve this Doc View Source BlockAtCount Gets or sets the count to reach before blocking an IP address, within a timeframe. Declaration [Required(ErrorMessage = \"A value at which to block requests must be speficied.\")] [Range(5, 10000, ErrorMessage = \"The value of BlockAtCount must be in the range [5, 10000].\")] public uint BlockAtCount { get; set; } Property Value Type Description System.UInt32 | Improve this Doc View Source ListSizeLimit Gets or sets the maximum of IP addresses to block. Declaration [Range(100, 2147483647, ErrorMessage = \"The value of ListSizeLimit must be in the range [100, 2147483647].\")] public uint ListSizeLimit { get; set; } Property Value Type Description System.UInt32 | Improve this Doc View Source TimeframeInSeconds Gets or sets the number of seconds per timeframe. Declaration [Required(ErrorMessage = \"A time frame duration (in seconds) must be speficied.\")] [Range(1, 3600, ErrorMessage = \"The value of TimeframeInSeconds must be in the range [1, 3600].\")] public int TimeframeInSeconds { get; set; } Property Value Type Description System.Int32 Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Security.Tests.html": {
    "href": "code/Fibula.Security.Tests.html",
    "title": "Namespace Fibula.Security.Tests | Fibula MMO",
    "keywords": "Namespace Fibula.Security.Tests Classes SimpleDoSDefenderTests Tests for the SimpleDosDefender class."
  },
  "code/Fibula.Security.Tests.SimpleDoSDefenderTests.html": {
    "href": "code/Fibula.Security.Tests.SimpleDoSDefenderTests.html",
    "title": "Class SimpleDoSDefenderTests | Fibula MMO",
    "keywords": "Class SimpleDoSDefenderTests Tests for the SimpleDosDefender class. Inheritance System.Object SimpleDoSDefenderTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Security.Tests Assembly : Fibula.Security.Tests.dll Syntax [TestClass] public class SimpleDoSDefenderTests Methods | Improve this Doc View Source LoginListener_Initialization() Checks SimpleDosDefender initialization. Declaration [TestMethod] public void LoginListener_Initialization() Extension Methods ObjectExtensions.YieldSingleItem<T>(T) ObjectExtensions.GetPropertyValue(Object, String) Validate.ThrowIfNull(Object, String)"
  },
  "code/Fibula.Standalone.html": {
    "href": "code/Fibula.Standalone.html",
    "title": "Namespace Fibula.Standalone | Fibula MMO",
    "keywords": "Namespace Fibula.Standalone Classes Program Class that represents a standalone Fibula server instance."
  },
  "code/Fibula.Standalone.Program.html": {
    "href": "code/Fibula.Standalone.Program.html",
    "title": "Class Program | Fibula MMO",
    "keywords": "Class Program Class that represents a standalone Fibula server instance. Inheritance System.Object Program Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Fibula.Standalone Assembly : Fibula.Standalone.dll Syntax public static class Program Methods | Improve this Doc View Source Main(String[]) The main entry point for the program. Declaration public static Task Main(string[] args) Parameters Type Name Description System.String [] args The arguments for this program. Returns Type Description System.Threading.Tasks.Task A System.Threading.Tasks.Task representing the asynchronous operation."
  },
  "code/index.html": {
    "href": "code/index.html",
    "title": "Oh, so you actually are interested in the code reference, huh? | Fibula MMO",
    "keywords": "Oh, so you actually are interested in the code reference, huh? Well here you go sir (or ma'm). You'll find that every single public member of this code is documented... because while this is grade-a, clean, industry standard code (j.k. it's probably just above average), it still needs documentation for posterity. I've enabled the TreatWarningsAsErrors flag solution wide just to show how serious I am about this shit. No... Fucking... Warnings... DOCUMENT YOUR DAMN CODE. Anyways, use the search bar now. Off you go. DO IT!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Let's go through that README again... What the heck is this? | Fibula MMO",
    "keywords": "Let's go through that README again... What the heck is this? A C# NetCore open source server for that other leg-bone game which must not be named, apparently, because it may upset people. Here's a nice pic (from early dev), because pics are good: TL;DR What are you looking for? Run this thing? see how to setup and run it . Knobs and switches? configuration section. Just... WHY? . Status and overview of things implemented? Err... overview / roadmap ... sure. More docs to (probably) come soon! How is this better than the existing C++ engines? Well, it's too soon to say, but it sure looks sexy. The main development features right now are: Top-of-industry standards + clean code = happy devs. It really grinds my gears how badly TFS is documented overall, and how steep the learning curve for newbies is. Ergo, I strived to make this is a well-documented and clean code project that can actually be maintained. Check the code reference here , which pulls the XML documentation from the actual code to generate these pages. It doesn't get better than that. We got them tests. Slowly growing in the repo, the Fibula project also features testing made super easy by the dotnet core framework. Dependency Injection: Dependency injection gives the power to the dev, to quickly switch out the flavor of specific component that they want to run, e.g. the way the map loads: Notice the OTBM flavor in the image above. And the same can be done for other assets loading. Minimal changes between backend version. By leveraging DI we can support different back-end versions with minimal code changes to make when switching between them. Take 7.72 for example: This project (and thus, DLL) contains all the intrinsics of packet parsing and writing, connection and other components specific to that version: And it is injected with 2 lines at the composition root of the project (bottom 2 lines) : Once we want to support another version, say 7.4 , we shall add a single DLL targetting that version, implementing the components needed to be injected, possibly point to the 7.4 map/assets in the config, and re-compile. For the above example: 7.4 did not have XTEA or RSA encryption for connections, so that would be stripped. Moreover, for 7.1 for example, the structure would change to not include skulls or shields in the player status packet."
  }
}